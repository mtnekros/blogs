----------------------------------------------------------------------------------------------------
TABLE SIZES:
T1 SIZE: 1, T2 SIZE: 1
----------------------------------------------------------------------------------------------------
INDEXES:
INDEX ON t1(id): False, INDEX ON t2(id): False
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id = 10
QUERYPLAN: 
Nested Loop  (cost=0.00..2.03 rows=1 width=30) (actual time=0.033..0.034 rows=0 loops=1)
  ->  Seq Scan on t1  (cost=0.00..1.01 rows=1 width=15) (actual time=0.032..0.032 rows=0 loops=1)
        Filter: (id = 10)
        Rows Removed by Filter: 1
  ->  Seq Scan on t2  (cost=0.00..1.01 rows=1 width=15) (never executed)
        Filter: (id = 10)
Planning Time: 1.776 ms
Execution Time: 0.134 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 10
QUERYPLAN: 
Nested Loop  (cost=0.00..2.04 rows=1 width=30) (actual time=0.076..0.077 rows=1 loops=1)
  Join Filter: (t1.id = t2.id)
  ->  Seq Scan on t1  (cost=0.00..1.01 rows=1 width=15) (actual time=0.049..0.049 rows=1 loops=1)
        Filter: (id < 10)
  ->  Seq Scan on t2  (cost=0.00..1.01 rows=1 width=15) (actual time=0.024..0.024 rows=1 loops=1)
Planning Time: 2.129 ms
Execution Time: 0.228 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 1000
QUERYPLAN: 
Nested Loop  (cost=0.00..2.04 rows=1 width=30) (actual time=0.034..0.035 rows=1 loops=1)
  Join Filter: (t1.id = t2.id)
  ->  Seq Scan on t1  (cost=0.00..1.01 rows=1 width=15) (actual time=0.024..0.024 rows=1 loops=1)
        Filter: (id < 1000)
  ->  Seq Scan on t2  (cost=0.00..1.01 rows=1 width=15) (actual time=0.009..0.009 rows=1 loops=1)
Planning Time: 1.103 ms
Execution Time: 0.116 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id
QUERYPLAN: 
Nested Loop  (cost=0.00..2.03 rows=1 width=30) (actual time=0.042..0.043 rows=1 loops=1)
  Join Filter: (t1.id = t2.id)
  ->  Seq Scan on t1  (cost=0.00..1.01 rows=1 width=15) (actual time=0.026..0.026 rows=1 loops=1)
  ->  Seq Scan on t2  (cost=0.00..1.01 rows=1 width=15) (actual time=0.010..0.010 rows=1 loops=1)
Planning Time: 1.396 ms
Execution Time: 0.149 ms
----------------------------------------------------------------------------------------------------
INDEXES:
INDEX ON t1(id): True, INDEX ON t2(id): False
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id = 10
QUERYPLAN: 
Nested Loop  (cost=0.00..2.03 rows=1 width=30) (actual time=0.016..0.016 rows=0 loops=1)
  ->  Seq Scan on t1  (cost=0.00..1.01 rows=1 width=15) (actual time=0.015..0.015 rows=0 loops=1)
        Filter: (id = 10)
        Rows Removed by Filter: 1
  ->  Seq Scan on t2  (cost=0.00..1.01 rows=1 width=15) (never executed)
        Filter: (id = 10)
Planning Time: 1.429 ms
Execution Time: 0.101 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 10
QUERYPLAN: 
Nested Loop  (cost=0.00..2.04 rows=1 width=30) (actual time=0.031..0.032 rows=1 loops=1)
  Join Filter: (t1.id = t2.id)
  ->  Seq Scan on t1  (cost=0.00..1.01 rows=1 width=15) (actual time=0.019..0.019 rows=1 loops=1)
        Filter: (id < 10)
  ->  Seq Scan on t2  (cost=0.00..1.01 rows=1 width=15) (actual time=0.010..0.010 rows=1 loops=1)
Planning Time: 1.880 ms
Execution Time: 0.129 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 1000
QUERYPLAN: 
Nested Loop  (cost=0.00..2.04 rows=1 width=30) (actual time=0.028..0.029 rows=1 loops=1)
  Join Filter: (t1.id = t2.id)
  ->  Seq Scan on t1  (cost=0.00..1.01 rows=1 width=15) (actual time=0.016..0.016 rows=1 loops=1)
        Filter: (id < 1000)
  ->  Seq Scan on t2  (cost=0.00..1.01 rows=1 width=15) (actual time=0.010..0.010 rows=1 loops=1)
Planning Time: 1.555 ms
Execution Time: 0.115 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id
QUERYPLAN: 
Nested Loop  (cost=0.00..2.03 rows=1 width=30) (actual time=0.035..0.036 rows=1 loops=1)
  Join Filter: (t1.id = t2.id)
  ->  Seq Scan on t1  (cost=0.00..1.01 rows=1 width=15) (actual time=0.017..0.018 rows=1 loops=1)
  ->  Seq Scan on t2  (cost=0.00..1.01 rows=1 width=15) (actual time=0.011..0.011 rows=1 loops=1)
Planning Time: 2.167 ms
Execution Time: 0.139 ms
----------------------------------------------------------------------------------------------------
INDEXES:
INDEX ON t1(id): True, INDEX ON t2(id): True
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id = 10
QUERYPLAN: 
Nested Loop  (cost=0.00..2.03 rows=1 width=30) (actual time=0.020..0.020 rows=0 loops=1)
  ->  Seq Scan on t1  (cost=0.00..1.01 rows=1 width=15) (actual time=0.019..0.019 rows=0 loops=1)
        Filter: (id = 10)
        Rows Removed by Filter: 1
  ->  Seq Scan on t2  (cost=0.00..1.01 rows=1 width=15) (never executed)
        Filter: (id = 10)
Planning Time: 2.014 ms
Execution Time: 0.199 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 10
QUERYPLAN: 
Nested Loop  (cost=0.00..2.04 rows=1 width=30) (actual time=0.043..0.044 rows=1 loops=1)
  Join Filter: (t1.id = t2.id)
  ->  Seq Scan on t1  (cost=0.00..1.01 rows=1 width=15) (actual time=0.027..0.027 rows=1 loops=1)
        Filter: (id < 10)
  ->  Seq Scan on t2  (cost=0.00..1.01 rows=1 width=15) (actual time=0.014..0.015 rows=1 loops=1)
Planning Time: 2.307 ms
Execution Time: 0.150 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 1000
QUERYPLAN: 
Nested Loop  (cost=0.00..2.04 rows=1 width=30) (actual time=0.033..0.034 rows=1 loops=1)
  Join Filter: (t1.id = t2.id)
  ->  Seq Scan on t1  (cost=0.00..1.01 rows=1 width=15) (actual time=0.019..0.019 rows=1 loops=1)
        Filter: (id < 1000)
  ->  Seq Scan on t2  (cost=0.00..1.01 rows=1 width=15) (actual time=0.012..0.012 rows=1 loops=1)
Planning Time: 1.948 ms
Execution Time: 0.128 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id
QUERYPLAN: 
Nested Loop  (cost=0.00..2.03 rows=1 width=30) (actual time=0.036..0.036 rows=1 loops=1)
  Join Filter: (t1.id = t2.id)
  ->  Seq Scan on t1  (cost=0.00..1.01 rows=1 width=15) (actual time=0.016..0.016 rows=1 loops=1)
  ->  Seq Scan on t2  (cost=0.00..1.01 rows=1 width=15) (actual time=0.013..0.013 rows=1 loops=1)
Planning Time: 2.145 ms
Execution Time: 0.136 ms
----------------------------------------------------------------------------------------------------


----------------------------------------------------------------------------------------------------
TABLE SIZES:
T1 SIZE: 1, T2 SIZE: 100
----------------------------------------------------------------------------------------------------
INDEXES:
INDEX ON t1(id): False, INDEX ON t2(id): False
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id = 10
QUERYPLAN: 
Nested Loop  (cost=0.00..3.27 rows=1 width=30) (actual time=0.043..0.044 rows=0 loops=1)
  ->  Seq Scan on t1  (cost=0.00..1.01 rows=1 width=15) (actual time=0.042..0.042 rows=0 loops=1)
        Filter: (id = 10)
        Rows Removed by Filter: 1
  ->  Seq Scan on t2  (cost=0.00..2.25 rows=1 width=15) (never executed)
        Filter: (id = 10)
Planning Time: 1.960 ms
Execution Time: 0.208 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 10
QUERYPLAN: 
Hash Join  (cost=1.02..3.41 rows=1 width=30) (actual time=0.085..0.099 rows=1 loops=1)
  Hash Cond: (t2.id = t1.id)
  ->  Seq Scan on t2  (cost=0.00..2.00 rows=100 width=15) (actual time=0.037..0.043 rows=100 loops=1)
  ->  Hash  (cost=1.01..1.01 rows=1 width=15) (actual time=0.030..0.030 rows=1 loops=1)
        Buckets: 1024  Batches: 1  Memory Usage: 9kB
        ->  Seq Scan on t1  (cost=0.00..1.01 rows=1 width=15) (actual time=0.019..0.020 rows=1 loops=1)
              Filter: (id < 10)
Planning Time: 1.350 ms
Execution Time: 0.200 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 1000
QUERYPLAN: 
Hash Join  (cost=1.02..3.41 rows=1 width=30) (actual time=0.063..0.076 rows=1 loops=1)
  Hash Cond: (t2.id = t1.id)
  ->  Seq Scan on t2  (cost=0.00..2.00 rows=100 width=15) (actual time=0.026..0.032 rows=100 loops=1)
  ->  Hash  (cost=1.01..1.01 rows=1 width=15) (actual time=0.023..0.023 rows=1 loops=1)
        Buckets: 1024  Batches: 1  Memory Usage: 9kB
        ->  Seq Scan on t1  (cost=0.00..1.01 rows=1 width=15) (actual time=0.018..0.019 rows=1 loops=1)
              Filter: (id < 1000)
Planning Time: 1.306 ms
Execution Time: 0.168 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id
QUERYPLAN: 
Hash Join  (cost=1.02..3.41 rows=1 width=30) (actual time=0.073..0.086 rows=1 loops=1)
  Hash Cond: (t2.id = t1.id)
  ->  Seq Scan on t2  (cost=0.00..2.00 rows=100 width=15) (actual time=0.027..0.032 rows=100 loops=1)
  ->  Hash  (cost=1.01..1.01 rows=1 width=15) (actual time=0.026..0.026 rows=1 loops=1)
        Buckets: 1024  Batches: 1  Memory Usage: 9kB
        ->  Seq Scan on t1  (cost=0.00..1.01 rows=1 width=15) (actual time=0.015..0.015 rows=1 loops=1)
Planning Time: 1.735 ms
Execution Time: 0.227 ms
----------------------------------------------------------------------------------------------------
INDEXES:
INDEX ON t1(id): True, INDEX ON t2(id): False
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id = 10
QUERYPLAN: 
Nested Loop  (cost=0.00..3.27 rows=1 width=30) (actual time=0.028..0.028 rows=0 loops=1)
  ->  Seq Scan on t1  (cost=0.00..1.01 rows=1 width=15) (actual time=0.026..0.027 rows=0 loops=1)
        Filter: (id = 10)
        Rows Removed by Filter: 1
  ->  Seq Scan on t2  (cost=0.00..2.25 rows=1 width=15) (never executed)
        Filter: (id = 10)
Planning Time: 2.041 ms
Execution Time: 0.164 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 10
QUERYPLAN: 
Hash Join  (cost=1.02..3.41 rows=1 width=30) (actual time=0.072..0.087 rows=1 loops=1)
  Hash Cond: (t2.id = t1.id)
  ->  Seq Scan on t2  (cost=0.00..2.00 rows=100 width=15) (actual time=0.020..0.025 rows=100 loops=1)
  ->  Hash  (cost=1.01..1.01 rows=1 width=15) (actual time=0.036..0.036 rows=1 loops=1)
        Buckets: 1024  Batches: 1  Memory Usage: 9kB
        ->  Seq Scan on t1  (cost=0.00..1.01 rows=1 width=15) (actual time=0.023..0.024 rows=1 loops=1)
              Filter: (id < 10)
Planning Time: 2.034 ms
Execution Time: 0.237 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 1000
QUERYPLAN: 
Hash Join  (cost=1.02..3.41 rows=1 width=30) (actual time=0.072..0.085 rows=1 loops=1)
  Hash Cond: (t2.id = t1.id)
  ->  Seq Scan on t2  (cost=0.00..2.00 rows=100 width=15) (actual time=0.020..0.025 rows=100 loops=1)
  ->  Hash  (cost=1.01..1.01 rows=1 width=15) (actual time=0.031..0.031 rows=1 loops=1)
        Buckets: 1024  Batches: 1  Memory Usage: 9kB
        ->  Seq Scan on t1  (cost=0.00..1.01 rows=1 width=15) (actual time=0.022..0.023 rows=1 loops=1)
              Filter: (id < 1000)
Planning Time: 2.136 ms
Execution Time: 0.228 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id
QUERYPLAN: 
Hash Join  (cost=1.02..3.41 rows=1 width=30) (actual time=0.067..0.080 rows=1 loops=1)
  Hash Cond: (t2.id = t1.id)
  ->  Seq Scan on t2  (cost=0.00..2.00 rows=100 width=15) (actual time=0.021..0.026 rows=100 loops=1)
  ->  Hash  (cost=1.01..1.01 rows=1 width=15) (actual time=0.026..0.027 rows=1 loops=1)
        Buckets: 1024  Batches: 1  Memory Usage: 9kB
        ->  Seq Scan on t1  (cost=0.00..1.01 rows=1 width=15) (actual time=0.015..0.016 rows=1 loops=1)
Planning Time: 2.102 ms
Execution Time: 0.227 ms
----------------------------------------------------------------------------------------------------
INDEXES:
INDEX ON t1(id): True, INDEX ON t2(id): True
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id = 10
QUERYPLAN: 
Nested Loop  (cost=0.00..3.27 rows=1 width=30) (actual time=0.045..0.046 rows=0 loops=1)
  ->  Seq Scan on t1  (cost=0.00..1.01 rows=1 width=15) (actual time=0.044..0.044 rows=0 loops=1)
        Filter: (id = 10)
        Rows Removed by Filter: 1
  ->  Seq Scan on t2  (cost=0.00..2.25 rows=1 width=15) (never executed)
        Filter: (id = 10)
Planning Time: 2.442 ms
Execution Time: 0.208 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 10
QUERYPLAN: 
Hash Join  (cost=1.02..3.41 rows=1 width=30) (actual time=0.085..0.099 rows=1 loops=1)
  Hash Cond: (t2.id = t1.id)
  ->  Seq Scan on t2  (cost=0.00..2.00 rows=100 width=15) (actual time=0.020..0.025 rows=100 loops=1)
  ->  Hash  (cost=1.01..1.01 rows=1 width=15) (actual time=0.045..0.045 rows=1 loops=1)
        Buckets: 1024  Batches: 1  Memory Usage: 9kB
        ->  Seq Scan on t1  (cost=0.00..1.01 rows=1 width=15) (actual time=0.032..0.032 rows=1 loops=1)
              Filter: (id < 10)
Planning Time: 2.627 ms
Execution Time: 0.233 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 1000
QUERYPLAN: 
Hash Join  (cost=1.02..3.41 rows=1 width=30) (actual time=0.085..0.099 rows=1 loops=1)
  Hash Cond: (t2.id = t1.id)
  ->  Seq Scan on t2  (cost=0.00..2.00 rows=100 width=15) (actual time=0.019..0.025 rows=100 loops=1)
  ->  Hash  (cost=1.01..1.01 rows=1 width=15) (actual time=0.046..0.046 rows=1 loops=1)
        Buckets: 1024  Batches: 1  Memory Usage: 9kB
        ->  Seq Scan on t1  (cost=0.00..1.01 rows=1 width=15) (actual time=0.033..0.034 rows=1 loops=1)
              Filter: (id < 1000)
Planning Time: 2.658 ms
Execution Time: 0.250 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id
QUERYPLAN: 
Hash Join  (cost=1.02..3.41 rows=1 width=30) (actual time=0.083..0.096 rows=1 loops=1)
  Hash Cond: (t2.id = t1.id)
  ->  Seq Scan on t2  (cost=0.00..2.00 rows=100 width=15) (actual time=0.022..0.027 rows=100 loops=1)
  ->  Hash  (cost=1.01..1.01 rows=1 width=15) (actual time=0.037..0.037 rows=1 loops=1)
        Buckets: 1024  Batches: 1  Memory Usage: 9kB
        ->  Seq Scan on t1  (cost=0.00..1.01 rows=1 width=15) (actual time=0.024..0.024 rows=1 loops=1)
Planning Time: 3.432 ms
Execution Time: 0.245 ms
----------------------------------------------------------------------------------------------------


----------------------------------------------------------------------------------------------------
TABLE SIZES:
T1 SIZE: 1, T2 SIZE: 10000
----------------------------------------------------------------------------------------------------
INDEXES:
INDEX ON t1(id): False, INDEX ON t2(id): False
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id = 10
QUERYPLAN: 
Nested Loop  (cost=0.00..181.02 rows=1 width=30) (actual time=0.041..0.041 rows=0 loops=1)
  ->  Seq Scan on t1  (cost=0.00..1.01 rows=1 width=15) (actual time=0.040..0.040 rows=0 loops=1)
        Filter: (id = 10)
        Rows Removed by Filter: 1
  ->  Seq Scan on t2  (cost=0.00..180.00 rows=1 width=15) (never executed)
        Filter: (id = 10)
Planning Time: 1.415 ms
Execution Time: 0.162 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 10
QUERYPLAN: 
Hash Join  (cost=1.02..193.53 rows=1 width=30) (actual time=0.106..2.218 rows=1 loops=1)
  Hash Cond: (t2.id = t1.id)
  ->  Seq Scan on t2  (cost=0.00..155.00 rows=10000 width=15) (actual time=0.040..1.414 rows=10000 loops=1)
  ->  Hash  (cost=1.01..1.01 rows=1 width=15) (actual time=0.034..0.035 rows=1 loops=1)
        Buckets: 1024  Batches: 1  Memory Usage: 9kB
        ->  Seq Scan on t1  (cost=0.00..1.01 rows=1 width=15) (actual time=0.024..0.025 rows=1 loops=1)
              Filter: (id < 10)
Planning Time: 1.838 ms
Execution Time: 2.354 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 1000
QUERYPLAN: 
Hash Join  (cost=1.02..193.53 rows=1 width=30) (actual time=0.078..1.797 rows=1 loops=1)
  Hash Cond: (t2.id = t1.id)
  ->  Seq Scan on t2  (cost=0.00..155.00 rows=10000 width=15) (actual time=0.028..1.034 rows=10000 loops=1)
  ->  Hash  (cost=1.01..1.01 rows=1 width=15) (actual time=0.032..0.033 rows=1 loops=1)
        Buckets: 1024  Batches: 1  Memory Usage: 9kB
        ->  Seq Scan on t1  (cost=0.00..1.01 rows=1 width=15) (actual time=0.024..0.024 rows=1 loops=1)
              Filter: (id < 1000)
Planning Time: 1.923 ms
Execution Time: 1.935 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id
QUERYPLAN: 
Hash Join  (cost=1.02..193.53 rows=1 width=30) (actual time=0.076..1.791 rows=1 loops=1)
  Hash Cond: (t2.id = t1.id)
  ->  Seq Scan on t2  (cost=0.00..155.00 rows=10000 width=15) (actual time=0.026..1.025 rows=10000 loops=1)
  ->  Hash  (cost=1.01..1.01 rows=1 width=15) (actual time=0.031..0.031 rows=1 loops=1)
        Buckets: 1024  Batches: 1  Memory Usage: 9kB
        ->  Seq Scan on t1  (cost=0.00..1.01 rows=1 width=15) (actual time=0.018..0.019 rows=1 loops=1)
Planning Time: 1.523 ms
Execution Time: 1.942 ms
----------------------------------------------------------------------------------------------------
INDEXES:
INDEX ON t1(id): True, INDEX ON t2(id): False
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id = 10
QUERYPLAN: 
Nested Loop  (cost=0.00..181.02 rows=1 width=30) (actual time=0.032..0.033 rows=0 loops=1)
  ->  Seq Scan on t1  (cost=0.00..1.01 rows=1 width=15) (actual time=0.031..0.031 rows=0 loops=1)
        Filter: (id = 10)
        Rows Removed by Filter: 1
  ->  Seq Scan on t2  (cost=0.00..180.00 rows=1 width=15) (never executed)
        Filter: (id = 10)
Planning Time: 1.923 ms
Execution Time: 0.147 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 10
QUERYPLAN: 
Hash Join  (cost=1.02..193.53 rows=1 width=30) (actual time=0.082..1.775 rows=1 loops=1)
  Hash Cond: (t2.id = t1.id)
  ->  Seq Scan on t2  (cost=0.00..155.00 rows=10000 width=15) (actual time=0.022..1.009 rows=10000 loops=1)
  ->  Hash  (cost=1.01..1.01 rows=1 width=15) (actual time=0.045..0.046 rows=1 loops=1)
        Buckets: 1024  Batches: 1  Memory Usage: 9kB
        ->  Seq Scan on t1  (cost=0.00..1.01 rows=1 width=15) (actual time=0.033..0.033 rows=1 loops=1)
              Filter: (id < 10)
Planning Time: 2.082 ms
Execution Time: 1.917 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 1000
QUERYPLAN: 
Hash Join  (cost=1.02..193.53 rows=1 width=30) (actual time=0.082..1.871 rows=1 loops=1)
  Hash Cond: (t2.id = t1.id)
  ->  Seq Scan on t2  (cost=0.00..155.00 rows=10000 width=15) (actual time=0.021..1.071 rows=10000 loops=1)
  ->  Hash  (cost=1.01..1.01 rows=1 width=15) (actual time=0.045..0.046 rows=1 loops=1)
        Buckets: 1024  Batches: 1  Memory Usage: 9kB
        ->  Seq Scan on t1  (cost=0.00..1.01 rows=1 width=15) (actual time=0.033..0.033 rows=1 loops=1)
              Filter: (id < 1000)
Planning Time: 2.164 ms
Execution Time: 2.015 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id
QUERYPLAN: 
Hash Join  (cost=1.02..193.53 rows=1 width=30) (actual time=0.082..1.795 rows=1 loops=1)
  Hash Cond: (t2.id = t1.id)
  ->  Seq Scan on t2  (cost=0.00..155.00 rows=10000 width=15) (actual time=0.024..1.012 rows=10000 loops=1)
  ->  Hash  (cost=1.01..1.01 rows=1 width=15) (actual time=0.037..0.037 rows=1 loops=1)
        Buckets: 1024  Batches: 1  Memory Usage: 9kB
        ->  Seq Scan on t1  (cost=0.00..1.01 rows=1 width=15) (actual time=0.025..0.026 rows=1 loops=1)
Planning Time: 2.504 ms
Execution Time: 1.925 ms
----------------------------------------------------------------------------------------------------
INDEXES:
INDEX ON t1(id): True, INDEX ON t2(id): True
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id = 10
QUERYPLAN: 
Nested Loop  (cost=0.29..9.32 rows=1 width=30) (actual time=0.037..0.037 rows=0 loops=1)
  ->  Seq Scan on t1  (cost=0.00..1.01 rows=1 width=15) (actual time=0.036..0.036 rows=0 loops=1)
        Filter: (id = 10)
        Rows Removed by Filter: 1
  ->  Index Scan using t2_id_idx on t2  (cost=0.29..8.30 rows=1 width=15) (never executed)
        Index Cond: (id = 10)
Planning Time: 3.106 ms
Execution Time: 0.196 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 10
QUERYPLAN: 
Nested Loop  (cost=0.29..9.32 rows=1 width=30) (actual time=0.108..0.110 rows=1 loops=1)
  ->  Seq Scan on t1  (cost=0.00..1.01 rows=1 width=15) (actual time=0.031..0.031 rows=1 loops=1)
        Filter: (id < 10)
  ->  Index Scan using t2_id_idx on t2  (cost=0.29..8.30 rows=1 width=15) (actual time=0.073..0.073 rows=1 loops=1)
        Index Cond: (id = t1.id)
Planning Time: 2.525 ms
Execution Time: 0.239 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 1000
QUERYPLAN: 
Nested Loop  (cost=0.29..9.32 rows=1 width=30) (actual time=0.066..0.067 rows=1 loops=1)
  ->  Seq Scan on t1  (cost=0.00..1.01 rows=1 width=15) (actual time=0.031..0.032 rows=1 loops=1)
        Filter: (id < 1000)
  ->  Index Scan using t2_id_idx on t2  (cost=0.29..8.30 rows=1 width=15) (actual time=0.031..0.031 rows=1 loops=1)
        Index Cond: (id = t1.id)
Planning Time: 2.765 ms
Execution Time: 0.210 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id
QUERYPLAN: 
Nested Loop  (cost=0.29..9.32 rows=1 width=30) (actual time=0.083..0.085 rows=1 loops=1)
  ->  Seq Scan on t1  (cost=0.00..1.01 rows=1 width=15) (actual time=0.030..0.030 rows=1 loops=1)
  ->  Index Scan using t2_id_idx on t2  (cost=0.29..8.30 rows=1 width=15) (actual time=0.046..0.047 rows=1 loops=1)
        Index Cond: (id = t1.id)
Planning Time: 3.069 ms
Execution Time: 0.222 ms
----------------------------------------------------------------------------------------------------


----------------------------------------------------------------------------------------------------
TABLE SIZES:
T1 SIZE: 1, T2 SIZE: 1000000
----------------------------------------------------------------------------------------------------
INDEXES:
INDEX ON t1(id): False, INDEX ON t2(id): False
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id = 10
QUERYPLAN: 
Nested Loop  (cost=1000.00..11615.46 rows=1 width=30) (actual time=0.038..0.039 rows=0 loops=1)
  ->  Seq Scan on t1  (cost=0.00..1.01 rows=1 width=15) (actual time=0.037..0.037 rows=0 loops=1)
        Filter: (id = 10)
        Rows Removed by Filter: 1
  ->  Gather  (cost=1000.00..11614.43 rows=1 width=15) (never executed)
        Workers Planned: 2
        Workers Launched: 0
        ->  Parallel Seq Scan on t2  (cost=0.00..10614.33 rows=1 width=15) (never executed)
              Filter: (id = 10)
Planning Time: 2.377 ms
Execution Time: 0.175 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 10
QUERYPLAN: 
Gather  (cost=1001.02..12136.30 rows=1 width=30) (actual time=0.807..120.958 rows=1 loops=1)
  Workers Planned: 2
  Workers Launched: 2
  ->  Hash Join  (cost=1.02..11136.20 rows=1 width=30) (actual time=38.536..76.432 rows=0 loops=3)
        Hash Cond: (t2.id = t1.id)
        ->  Parallel Seq Scan on t2  (cost=0.00..9572.67 rows=416667 width=15) (actual time=0.035..48.257 rows=333333 loops=3)
        ->  Hash  (cost=1.01..1.01 rows=1 width=15) (actual time=0.349..0.350 rows=1 loops=3)
              Buckets: 1024  Batches: 1  Memory Usage: 9kB
              ->  Seq Scan on t1  (cost=0.00..1.01 rows=1 width=15) (actual time=0.338..0.339 rows=1 loops=3)
                    Filter: (id < 10)
Planning Time: 2.335 ms
Execution Time: 121.137 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 1000
QUERYPLAN: 
Gather  (cost=1001.02..12136.30 rows=1 width=30) (actual time=0.733..118.914 rows=1 loops=1)
  Workers Planned: 2
  Workers Launched: 2
  ->  Hash Join  (cost=1.02..11136.20 rows=1 width=30) (actual time=36.768..74.085 rows=0 loops=3)
        Hash Cond: (t2.id = t1.id)
        ->  Parallel Seq Scan on t2  (cost=0.00..9572.67 rows=416667 width=15) (actual time=0.024..39.386 rows=333333 loops=3)
        ->  Hash  (cost=1.01..1.01 rows=1 width=15) (actual time=0.323..0.323 rows=1 loops=3)
              Buckets: 1024  Batches: 1  Memory Usage: 9kB
              ->  Seq Scan on t1  (cost=0.00..1.01 rows=1 width=15) (actual time=0.311..0.312 rows=1 loops=3)
                    Filter: (id < 1000)
Planning Time: 1.974 ms
Execution Time: 119.042 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id
QUERYPLAN: 
Gather  (cost=1001.02..12136.30 rows=1 width=30) (actual time=0.669..108.066 rows=1 loops=1)
  Workers Planned: 2
  Workers Launched: 2
  ->  Hash Join  (cost=1.02..11136.20 rows=1 width=30) (actual time=28.799..62.348 rows=0 loops=3)
        Hash Cond: (t2.id = t1.id)
        ->  Parallel Seq Scan on t2  (cost=0.00..9572.67 rows=416667 width=15) (actual time=0.024..34.627 rows=333333 loops=3)
        ->  Hash  (cost=1.01..1.01 rows=1 width=15) (actual time=0.330..0.331 rows=1 loops=3)
              Buckets: 1024  Batches: 1  Memory Usage: 9kB
              ->  Seq Scan on t1  (cost=0.00..1.01 rows=1 width=15) (actual time=0.318..0.318 rows=1 loops=3)
Planning Time: 1.794 ms
Execution Time: 108.181 ms
----------------------------------------------------------------------------------------------------
INDEXES:
INDEX ON t1(id): True, INDEX ON t2(id): False
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id = 10
QUERYPLAN: 
Nested Loop  (cost=1000.00..11615.46 rows=1 width=30) (actual time=0.052..0.053 rows=0 loops=1)
  ->  Seq Scan on t1  (cost=0.00..1.01 rows=1 width=15) (actual time=0.050..0.050 rows=0 loops=1)
        Filter: (id = 10)
        Rows Removed by Filter: 1
  ->  Gather  (cost=1000.00..11614.43 rows=1 width=15) (never executed)
        Workers Planned: 2
        Workers Launched: 0
        ->  Parallel Seq Scan on t2  (cost=0.00..10614.33 rows=1 width=15) (never executed)
              Filter: (id = 10)
Planning Time: 3.460 ms
Execution Time: 0.251 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 10
QUERYPLAN: 
Gather  (cost=1001.02..12136.30 rows=1 width=30) (actual time=0.752..154.677 rows=1 loops=1)
  Workers Planned: 2
  Workers Launched: 2
  ->  Hash Join  (cost=1.02..11136.20 rows=1 width=30) (actual time=21.377..60.817 rows=0 loops=3)
        Hash Cond: (t2.id = t1.id)
        ->  Parallel Seq Scan on t2  (cost=0.00..9572.67 rows=416667 width=15) (actual time=0.014..33.952 rows=333333 loops=3)
        ->  Hash  (cost=1.01..1.01 rows=1 width=15) (actual time=0.237..0.238 rows=1 loops=2)
              Buckets: 1024  Batches: 1  Memory Usage: 9kB
              ->  Seq Scan on t1  (cost=0.00..1.01 rows=1 width=15) (actual time=0.228..0.229 rows=1 loops=2)
                    Filter: (id < 10)
Planning Time: 2.367 ms
Execution Time: 154.818 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 1000
QUERYPLAN: 
Gather  (cost=1001.02..12136.30 rows=1 width=30) (actual time=0.722..126.019 rows=1 loops=1)
  Workers Planned: 2
  Workers Launched: 2
  ->  Hash Join  (cost=1.02..11136.20 rows=1 width=30) (actual time=39.735..79.448 rows=0 loops=3)
        Hash Cond: (t2.id = t1.id)
        ->  Parallel Seq Scan on t2  (cost=0.00..9572.67 rows=416667 width=15) (actual time=0.028..42.148 rows=333333 loops=3)
        ->  Hash  (cost=1.01..1.01 rows=1 width=15) (actual time=0.307..0.308 rows=1 loops=3)
              Buckets: 1024  Batches: 1  Memory Usage: 9kB
              ->  Seq Scan on t1  (cost=0.00..1.01 rows=1 width=15) (actual time=0.296..0.296 rows=1 loops=3)
                    Filter: (id < 1000)
Planning Time: 2.050 ms
Execution Time: 126.140 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id
QUERYPLAN: 
Gather  (cost=1001.02..12136.30 rows=1 width=30) (actual time=0.905..107.071 rows=1 loops=1)
  Workers Planned: 2
  Workers Launched: 2
  ->  Hash Join  (cost=1.02..11136.20 rows=1 width=30) (actual time=30.005..63.191 rows=0 loops=3)
        Hash Cond: (t2.id = t1.id)
        ->  Parallel Seq Scan on t2  (cost=0.00..9572.67 rows=416667 width=15) (actual time=0.043..34.755 rows=333333 loops=3)
        ->  Hash  (cost=1.01..1.01 rows=1 width=15) (actual time=0.316..0.317 rows=1 loops=3)
              Buckets: 1024  Batches: 1  Memory Usage: 9kB
              ->  Seq Scan on t1  (cost=0.00..1.01 rows=1 width=15) (actual time=0.304..0.305 rows=1 loops=3)
Planning Time: 2.107 ms
Execution Time: 107.193 ms
----------------------------------------------------------------------------------------------------
INDEXES:
INDEX ON t1(id): True, INDEX ON t2(id): True
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id = 10
QUERYPLAN: 
Nested Loop  (cost=0.42..9.46 rows=1 width=30) (actual time=0.029..0.029 rows=0 loops=1)
  ->  Seq Scan on t1  (cost=0.00..1.01 rows=1 width=15) (actual time=0.028..0.028 rows=0 loops=1)
        Filter: (id = 10)
        Rows Removed by Filter: 1
  ->  Index Scan using t2_id_idx on t2  (cost=0.42..8.44 rows=1 width=15) (never executed)
        Index Cond: (id = 10)
Planning Time: 4.281 ms
Execution Time: 0.187 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 10
QUERYPLAN: 
Nested Loop  (cost=0.42..9.46 rows=1 width=30) (actual time=0.152..0.154 rows=1 loops=1)
  ->  Seq Scan on t1  (cost=0.00..1.01 rows=1 width=15) (actual time=0.032..0.033 rows=1 loops=1)
        Filter: (id < 10)
  ->  Index Scan using t2_id_idx on t2  (cost=0.42..8.44 rows=1 width=15) (actual time=0.115..0.116 rows=1 loops=1)
        Index Cond: (id = t1.id)
Planning Time: 4.313 ms
Execution Time: 0.217 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 1000
QUERYPLAN: 
Nested Loop  (cost=0.42..9.46 rows=1 width=30) (actual time=0.073..0.075 rows=1 loops=1)
  ->  Seq Scan on t1  (cost=0.00..1.01 rows=1 width=15) (actual time=0.030..0.031 rows=1 loops=1)
        Filter: (id < 1000)
  ->  Index Scan using t2_id_idx on t2  (cost=0.42..8.44 rows=1 width=15) (actual time=0.038..0.039 rows=1 loops=1)
        Index Cond: (id = t1.id)
Planning Time: 2.880 ms
Execution Time: 0.142 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id
QUERYPLAN: 
Nested Loop  (cost=0.42..9.46 rows=1 width=30) (actual time=0.073..0.075 rows=1 loops=1)
  ->  Seq Scan on t1  (cost=0.00..1.01 rows=1 width=15) (actual time=0.023..0.024 rows=1 loops=1)
  ->  Index Scan using t2_id_idx on t2  (cost=0.42..8.44 rows=1 width=15) (actual time=0.043..0.044 rows=1 loops=1)
        Index Cond: (id = t1.id)
Planning Time: 2.638 ms
Execution Time: 0.207 ms
----------------------------------------------------------------------------------------------------


----------------------------------------------------------------------------------------------------
TABLE SIZES:
T1 SIZE: 1, T2 SIZE: 1
----------------------------------------------------------------------------------------------------
INDEXES:
INDEX ON t1(id): False, INDEX ON t2(id): False
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id = 10
QUERYPLAN: 
Nested Loop  (cost=0.00..4279.74 rows=118336 width=72) (actual time=0.073..21.889 rows=1 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  ->  Seq Scan on public.t1  (cost=0.00..1399.84 rows=344 width=36) (actual time=0.043..10.892 rows=1 loops=1)
        Output: t1.id, t1.name
        Filter: (t1.id = 10)
        Rows Removed by Filter: 99999
  ->  Materialize  (cost=0.00..1401.56 rows=344 width=36) (actual time=0.028..10.995 rows=1 loops=1)
        Output: t2.id, t2.name
        ->  Seq Scan on public.t2  (cost=0.00..1399.84 rows=344 width=36) (actual time=0.024..10.990 rows=1 loops=1)
              Output: t2.id, t2.name
              Filter: (t2.id = 10)
              Rows Removed by Filter: 99999
Planning Time: 2.861 ms
Execution Time: 22.073 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 10
QUERYPLAN: 
Merge Join  (cost=11685.86..129986.72 rows=7867639 width=72) (actual time=30.970..30.977 rows=9 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Merge Cond: (t1.id = t2.id)
  ->  Sort  (cost=3058.31..3115.56 rows=22902 width=36) (actual time=8.030..8.031 rows=9 loops=1)
        Output: t1.id, t1.name
        Sort Key: t1.id
        Sort Method: quicksort  Memory: 25kB
        ->  Seq Scan on public.t1  (cost=0.00..1399.84 rows=22902 width=36) (actual time=0.021..8.011 rows=9 loops=1)
              Output: t1.id, t1.name
              Filter: (t1.id < 10)
              Rows Removed by Filter: 99991
  ->  Materialize  (cost=8627.55..8971.08 rows=68707 width=36) (actual time=22.935..22.937 rows=10 loops=1)
        Output: t2.id, t2.name
        ->  Sort  (cost=8627.55..8799.32 rows=68707 width=36) (actual time=22.930..22.931 rows=10 loops=1)
              Output: t2.id, t2.name
              Sort Key: t2.id
              Sort Method: external merge  Disk: 2456kB
              ->  Seq Scan on public.t2  (cost=0.00..1228.07 rows=68707 width=36) (actual time=0.017..7.930 rows=100000 loops=1)
                    Output: t2.id, t2.name
Planning Time: 1.685 ms
Execution Time: 33.127 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 1000
QUERYPLAN: 
Merge Join  (cost=11685.86..129986.72 rows=7867639 width=72) (actual time=31.902..32.374 rows=999 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Merge Cond: (t1.id = t2.id)
  ->  Sort  (cost=3058.31..3115.56 rows=22902 width=36) (actual time=8.518..8.561 rows=999 loops=1)
        Output: t1.id, t1.name
        Sort Key: t1.id
        Sort Method: quicksort  Memory: 64kB
        ->  Seq Scan on public.t1  (cost=0.00..1399.84 rows=22902 width=36) (actual time=0.018..8.444 rows=999 loops=1)
              Output: t1.id, t1.name
              Filter: (t1.id < 1000)
              Rows Removed by Filter: 99001
  ->  Materialize  (cost=8627.55..8971.08 rows=68707 width=36) (actual time=23.378..23.541 rows=1000 loops=1)
        Output: t2.id, t2.name
        ->  Sort  (cost=8627.55..8799.32 rows=68707 width=36) (actual time=23.363..23.440 rows=1000 loops=1)
              Output: t2.id, t2.name
              Sort Key: t2.id
              Sort Method: external merge  Disk: 2456kB
              ->  Seq Scan on public.t2  (cost=0.00..1228.07 rows=68707 width=36) (actual time=0.027..8.110 rows=100000 loops=1)
                    Output: t2.id, t2.name
Planning Time: 1.061 ms
Execution Time: 34.230 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id
QUERYPLAN: 
Merge Join  (cost=17255.10..371819.28 rows=23603259 width=72) (actual time=48.487..104.474 rows=100000 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Merge Cond: (t1.id = t2.id)
  ->  Sort  (cost=8627.55..8799.32 rows=68707 width=36) (actual time=22.751..30.737 rows=100000 loops=1)
        Output: t1.id, t1.name
        Sort Key: t1.id
        Sort Method: external merge  Disk: 2456kB
        ->  Seq Scan on public.t1  (cost=0.00..1228.07 rows=68707 width=36) (actual time=0.024..7.946 rows=100000 loops=1)
              Output: t1.id, t1.name
  ->  Materialize  (cost=8627.55..8971.08 rows=68707 width=36) (actual time=25.728..43.359 rows=100000 loops=1)
        Output: t2.id, t2.name
        ->  Sort  (cost=8627.55..8799.32 rows=68707 width=36) (actual time=25.720..33.921 rows=100000 loops=1)
              Output: t2.id, t2.name
              Sort Key: t2.id
              Sort Method: external merge  Disk: 2456kB
              ->  Seq Scan on public.t2  (cost=0.00..1228.07 rows=68707 width=36) (actual time=0.026..8.819 rows=100000 loops=1)
                    Output: t2.id, t2.name
Planning Time: 1.277 ms
Execution Time: 109.824 ms
----------------------------------------------------------------------------------------------------
INDEXES:
INDEX ON t1(id): True, INDEX ON t2(id): False
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id = 10
QUERYPLAN: 
Nested Loop  (cost=0.29..1799.32 rows=1 width=30) (actual time=0.074..10.018 rows=1 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  ->  Index Scan using t1_id_idx on public.t1  (cost=0.29..8.31 rows=1 width=15) (actual time=0.051..0.053 rows=1 loops=1)
        Output: t1.id, t1.name
        Index Cond: (t1.id = 10)
  ->  Seq Scan on public.t2  (cost=0.00..1791.00 rows=1 width=15) (actual time=0.022..9.961 rows=1 loops=1)
        Output: t2.id, t2.name
        Filter: (t2.id = 10)
        Rows Removed by Filter: 99999
Planning Time: 1.801 ms
Execution Time: 10.142 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 10
QUERYPLAN: 
Hash Join  (cost=8.59..1924.69 rows=10 width=30) (actual time=0.056..16.256 rows=9 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Hash Cond: (t2.id = t1.id)
  ->  Seq Scan on public.t2  (cost=0.00..1541.00 rows=100000 width=15) (actual time=0.024..9.092 rows=100000 loops=1)
        Output: t2.id, t2.name
  ->  Hash  (cost=8.47..8.47 rows=10 width=15) (actual time=0.021..0.021 rows=9 loops=1)
        Output: t1.id, t1.name
        Buckets: 1024  Batches: 1  Memory Usage: 9kB
        ->  Index Scan using t1_id_idx on public.t1  (cost=0.29..8.47 rows=10 width=15) (actual time=0.010..0.012 rows=9 loops=1)
              Output: t1.id, t1.name
              Index Cond: (t1.id < 10)
Planning Time: 2.778 ms
Execution Time: 16.289 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 1000
QUERYPLAN: 
Hash Join  (cost=53.21..1979.85 rows=1064 width=30) (actual time=0.386..17.750 rows=999 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Hash Cond: (t2.id = t1.id)
  ->  Seq Scan on public.t2  (cost=0.00..1541.00 rows=100000 width=15) (actual time=0.023..9.129 rows=100000 loops=1)
        Output: t2.id, t2.name
  ->  Hash  (cost=39.91..39.91 rows=1064 width=15) (actual time=0.353..0.354 rows=999 loops=1)
        Output: t1.id, t1.name
        Buckets: 2048  Batches: 1  Memory Usage: 62kB
        ->  Index Scan using t1_id_idx on public.t1  (cost=0.29..39.91 rows=1064 width=15) (actual time=0.013..0.233 rows=999 loops=1)
              Output: t1.id, t1.name
              Index Cond: (t1.id < 1000)
Planning Time: 2.508 ms
Execution Time: 17.809 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id
QUERYPLAN: 
Hash Join  (cost=2791.00..5707.00 rows=100000 width=30) (actual time=23.212..64.442 rows=100000 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Hash Cond: (t1.id = t2.id)
  ->  Seq Scan on public.t1  (cost=0.00..1541.00 rows=100000 width=15) (actual time=0.016..9.212 rows=100000 loops=1)
        Output: t1.id, t1.name
  ->  Hash  (cost=1541.00..1541.00 rows=100000 width=15) (actual time=22.926..22.927 rows=100000 loops=1)
        Output: t2.id, t2.name
        Buckets: 131072  Batches: 1  Memory Usage: 5614kB
        ->  Seq Scan on public.t2  (cost=0.00..1541.00 rows=100000 width=15) (actual time=0.021..9.821 rows=100000 loops=1)
              Output: t2.id, t2.name
Planning Time: 2.022 ms
Execution Time: 67.857 ms
----------------------------------------------------------------------------------------------------
INDEXES:
INDEX ON t1(id): True, INDEX ON t2(id): True
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id = 10
QUERYPLAN: 
Nested Loop  (cost=0.58..16.63 rows=1 width=30) (actual time=0.094..0.095 rows=1 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  ->  Index Scan using t1_id_idx on public.t1  (cost=0.29..8.31 rows=1 width=15) (actual time=0.047..0.048 rows=1 loops=1)
        Output: t1.id, t1.name
        Index Cond: (t1.id = 10)
  ->  Index Scan using t2_id_idx on public.t2  (cost=0.29..8.31 rows=1 width=15) (actual time=0.044..0.044 rows=1 loops=1)
        Output: t2.id, t2.name
        Index Cond: (t2.id = 10)
Planning Time: 2.752 ms
Execution Time: 0.218 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 10
QUERYPLAN: 
Nested Loop  (cost=0.58..83.33 rows=9 width=30) (actual time=0.010..0.025 rows=9 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  ->  Index Scan using t1_id_idx on public.t1  (cost=0.29..8.45 rows=9 width=15) (actual time=0.004..0.006 rows=9 loops=1)
        Output: t1.id, t1.name
        Index Cond: (t1.id < 10)
  ->  Index Scan using t2_id_idx on public.t2  (cost=0.29..8.31 rows=1 width=15) (actual time=0.001..0.001 rows=1 loops=9)
        Output: t2.id, t2.name
        Index Cond: (t2.id = t1.id)
Planning Time: 2.917 ms
Execution Time: 0.055 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 1000
QUERYPLAN: 
Hash Join  (cost=51.26..1977.25 rows=999 width=30) (actual time=0.380..18.485 rows=999 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Hash Cond: (t2.id = t1.id)
  ->  Seq Scan on public.t2  (cost=0.00..1541.00 rows=100000 width=15) (actual time=0.016..9.142 rows=100000 loops=1)
        Output: t2.id, t2.name
  ->  Hash  (cost=38.77..38.77 rows=999 width=15) (actual time=0.350..0.350 rows=999 loops=1)
        Output: t1.id, t1.name
        Buckets: 1024  Batches: 1  Memory Usage: 54kB
        ->  Index Scan using t1_id_idx on public.t1  (cost=0.29..38.77 rows=999 width=15) (actual time=0.010..0.227 rows=999 loops=1)
              Output: t1.id, t1.name
              Index Cond: (t1.id < 1000)
Planning Time: 2.918 ms
Execution Time: 18.567 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id
QUERYPLAN: 
Hash Join  (cost=2791.00..5707.00 rows=100000 width=30) (actual time=21.926..69.724 rows=100000 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Hash Cond: (t1.id = t2.id)
  ->  Seq Scan on public.t1  (cost=0.00..1541.00 rows=100000 width=15) (actual time=0.015..10.445 rows=100000 loops=1)
        Output: t1.id, t1.name
  ->  Hash  (cost=1541.00..1541.00 rows=100000 width=15) (actual time=21.618..21.619 rows=100000 loops=1)
        Output: t2.id, t2.name
        Buckets: 131072  Batches: 1  Memory Usage: 5614kB
        ->  Seq Scan on public.t2  (cost=0.00..1541.00 rows=100000 width=15) (actual time=0.012..9.753 rows=100000 loops=1)
              Output: t2.id, t2.name
Planning Time: 2.579 ms
Execution Time: 73.545 ms
----------------------------------------------------------------------------------------------------


----------------------------------------------------------------------------------------------------
TABLE SIZES:
T1 SIZE: 1, T2 SIZE: 100
----------------------------------------------------------------------------------------------------
INDEXES:
INDEX ON t1(id): False, INDEX ON t2(id): False
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id = 10
QUERYPLAN: 
Nested Loop  (cost=0.00..4279.74 rows=118336 width=72) (actual time=0.072..26.808 rows=1 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  ->  Seq Scan on public.t1  (cost=0.00..1399.84 rows=344 width=36) (actual time=0.039..13.141 rows=1 loops=1)
        Output: t1.id, t1.name
        Filter: (t1.id = 10)
        Rows Removed by Filter: 99999
  ->  Materialize  (cost=0.00..1401.56 rows=344 width=36) (actual time=0.031..13.664 rows=1 loops=1)
        Output: t2.id, t2.name
        ->  Seq Scan on public.t2  (cost=0.00..1399.84 rows=344 width=36) (actual time=0.027..13.659 rows=1 loops=1)
              Output: t2.id, t2.name
              Filter: (t2.id = 10)
              Rows Removed by Filter: 99999
Planning Time: 1.398 ms
Execution Time: 26.931 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 10
QUERYPLAN: 
Merge Join  (cost=11685.86..129986.72 rows=7867639 width=72) (actual time=35.490..35.498 rows=9 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Merge Cond: (t1.id = t2.id)
  ->  Sort  (cost=3058.31..3115.56 rows=22902 width=36) (actual time=9.928..9.929 rows=9 loops=1)
        Output: t1.id, t1.name
        Sort Key: t1.id
        Sort Method: quicksort  Memory: 25kB
        ->  Seq Scan on public.t1  (cost=0.00..1399.84 rows=22902 width=36) (actual time=0.024..9.910 rows=9 loops=1)
              Output: t1.id, t1.name
              Filter: (t1.id < 10)
              Rows Removed by Filter: 99991
  ->  Materialize  (cost=8627.55..8971.08 rows=68707 width=36) (actual time=25.557..25.559 rows=10 loops=1)
        Output: t2.id, t2.name
        ->  Sort  (cost=8627.55..8799.32 rows=68707 width=36) (actual time=25.552..25.553 rows=10 loops=1)
              Output: t2.id, t2.name
              Sort Key: t2.id
              Sort Method: external merge  Disk: 2456kB
              ->  Seq Scan on public.t2  (cost=0.00..1228.07 rows=68707 width=36) (actual time=0.023..8.989 rows=100000 loops=1)
                    Output: t2.id, t2.name
Planning Time: 1.431 ms
Execution Time: 37.398 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 1000
QUERYPLAN: 
Merge Join  (cost=11685.86..129986.72 rows=7867639 width=72) (actual time=35.389..35.920 rows=999 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Merge Cond: (t1.id = t2.id)
  ->  Sort  (cost=3058.31..3115.56 rows=22902 width=36) (actual time=9.980..10.027 rows=999 loops=1)
        Output: t1.id, t1.name
        Sort Key: t1.id
        Sort Method: quicksort  Memory: 64kB
        ->  Seq Scan on public.t1  (cost=0.00..1399.84 rows=22902 width=36) (actual time=0.022..9.882 rows=999 loops=1)
              Output: t1.id, t1.name
              Filter: (t1.id < 1000)
              Rows Removed by Filter: 99001
  ->  Materialize  (cost=8627.55..8971.08 rows=68707 width=36) (actual time=25.403..25.585 rows=1000 loops=1)
        Output: t2.id, t2.name
        ->  Sort  (cost=8627.55..8799.32 rows=68707 width=36) (actual time=25.391..25.474 rows=1000 loops=1)
              Output: t2.id, t2.name
              Sort Key: t2.id
              Sort Method: external merge  Disk: 2456kB
              ->  Seq Scan on public.t2  (cost=0.00..1228.07 rows=68707 width=36) (actual time=0.021..8.894 rows=100000 loops=1)
                    Output: t2.id, t2.name
Planning Time: 1.271 ms
Execution Time: 37.751 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id
QUERYPLAN: 
Merge Join  (cost=17255.10..371819.28 rows=23603259 width=72) (actual time=51.419..109.425 rows=100000 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Merge Cond: (t1.id = t2.id)
  ->  Sort  (cost=8627.55..8799.32 rows=68707 width=36) (actual time=25.607..33.995 rows=100000 loops=1)
        Output: t1.id, t1.name
        Sort Key: t1.id
        Sort Method: external merge  Disk: 2456kB
        ->  Seq Scan on public.t1  (cost=0.00..1228.07 rows=68707 width=36) (actual time=0.025..9.083 rows=100000 loops=1)
              Output: t1.id, t1.name
  ->  Materialize  (cost=8627.55..8971.08 rows=68707 width=36) (actual time=25.804..43.999 rows=100000 loops=1)
        Output: t2.id, t2.name
        ->  Sort  (cost=8627.55..8799.32 rows=68707 width=36) (actual time=25.796..34.363 rows=100000 loops=1)
              Output: t2.id, t2.name
              Sort Key: t2.id
              Sort Method: external merge  Disk: 2456kB
              ->  Seq Scan on public.t2  (cost=0.00..1228.07 rows=68707 width=36) (actual time=0.028..8.977 rows=100000 loops=1)
                    Output: t2.id, t2.name
Planning Time: 1.264 ms
Execution Time: 114.641 ms
----------------------------------------------------------------------------------------------------
INDEXES:
INDEX ON t1(id): True, INDEX ON t2(id): False
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id = 10
QUERYPLAN: 
Nested Loop  (cost=0.29..1799.32 rows=1 width=30) (actual time=0.063..9.837 rows=1 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  ->  Index Scan using t1_id_idx on public.t1  (cost=0.29..8.31 rows=1 width=15) (actual time=0.043..0.044 rows=1 loops=1)
        Output: t1.id, t1.name
        Index Cond: (t1.id = 10)
  ->  Seq Scan on public.t2  (cost=0.00..1791.00 rows=1 width=15) (actual time=0.019..9.791 rows=1 loops=1)
        Output: t2.id, t2.name
        Filter: (t2.id = 10)
        Rows Removed by Filter: 99999
Planning Time: 1.598 ms
Execution Time: 9.954 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 10
QUERYPLAN: 
Hash Join  (cost=8.56..1924.65 rows=9 width=30) (actual time=0.050..16.588 rows=9 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Hash Cond: (t2.id = t1.id)
  ->  Seq Scan on public.t2  (cost=0.00..1541.00 rows=100000 width=15) (actual time=0.020..9.229 rows=100000 loops=1)
        Output: t2.id, t2.name
  ->  Hash  (cost=8.45..8.45 rows=9 width=15) (actual time=0.018..0.019 rows=9 loops=1)
        Output: t1.id, t1.name
        Buckets: 1024  Batches: 1  Memory Usage: 9kB
        ->  Index Scan using t1_id_idx on public.t1  (cost=0.29..8.45 rows=9 width=15) (actual time=0.006..0.008 rows=9 loops=1)
              Output: t1.id, t1.name
              Index Cond: (t1.id < 10)
Planning Time: 2.030 ms
Execution Time: 16.623 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 1000
QUERYPLAN: 
Hash Join  (cost=51.11..1977.05 rows=994 width=30) (actual time=0.376..17.992 rows=999 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Hash Cond: (t2.id = t1.id)
  ->  Seq Scan on public.t2  (cost=0.00..1541.00 rows=100000 width=15) (actual time=0.020..8.927 rows=100000 loops=1)
        Output: t2.id, t2.name
  ->  Hash  (cost=38.69..38.69 rows=994 width=15) (actual time=0.341..0.342 rows=999 loops=1)
        Output: t1.id, t1.name
        Buckets: 1024  Batches: 1  Memory Usage: 54kB
        ->  Index Scan using t1_id_idx on public.t1  (cost=0.29..38.69 rows=994 width=15) (actual time=0.010..0.219 rows=999 loops=1)
              Output: t1.id, t1.name
              Index Cond: (t1.id < 1000)
Planning Time: 2.171 ms
Execution Time: 18.079 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id
QUERYPLAN: 
Hash Join  (cost=2791.00..5707.00 rows=100000 width=30) (actual time=21.791..59.810 rows=100000 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Hash Cond: (t1.id = t2.id)
  ->  Seq Scan on public.t1  (cost=0.00..1541.00 rows=100000 width=15) (actual time=0.017..8.985 rows=100000 loops=1)
        Output: t1.id, t1.name
  ->  Hash  (cost=1541.00..1541.00 rows=100000 width=15) (actual time=21.509..21.510 rows=100000 loops=1)
        Output: t2.id, t2.name
        Buckets: 131072  Batches: 1  Memory Usage: 5614kB
        ->  Seq Scan on public.t2  (cost=0.00..1541.00 rows=100000 width=15) (actual time=0.018..9.164 rows=100000 loops=1)
              Output: t2.id, t2.name
Planning Time: 2.554 ms
Execution Time: 63.185 ms
----------------------------------------------------------------------------------------------------
INDEXES:
INDEX ON t1(id): True, INDEX ON t2(id): True
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id = 10
QUERYPLAN: 
Nested Loop  (cost=0.58..16.63 rows=1 width=30) (actual time=0.127..0.128 rows=1 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  ->  Index Scan using t1_id_idx on public.t1  (cost=0.29..8.31 rows=1 width=15) (actual time=0.054..0.054 rows=1 loops=1)
        Output: t1.id, t1.name
        Index Cond: (t1.id = 10)
  ->  Index Scan using t2_id_idx on public.t2  (cost=0.29..8.31 rows=1 width=15) (actual time=0.069..0.070 rows=1 loops=1)
        Output: t2.id, t2.name
        Index Cond: (t2.id = 10)
Planning Time: 2.313 ms
Execution Time: 0.258 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 10
QUERYPLAN: 
Nested Loop  (cost=0.58..83.33 rows=9 width=30) (actual time=0.010..0.026 rows=9 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  ->  Index Scan using t1_id_idx on public.t1  (cost=0.29..8.45 rows=9 width=15) (actual time=0.004..0.006 rows=9 loops=1)
        Output: t1.id, t1.name
        Index Cond: (t1.id < 10)
  ->  Index Scan using t2_id_idx on public.t2  (cost=0.29..8.31 rows=1 width=15) (actual time=0.001..0.002 rows=1 loops=9)
        Output: t2.id, t2.name
        Index Cond: (t2.id = t1.id)
Planning Time: 2.598 ms
Execution Time: 0.055 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 1000
QUERYPLAN: 
Hash Join  (cost=50.60..1976.37 rows=977 width=30) (actual time=0.378..18.402 rows=999 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Hash Cond: (t2.id = t1.id)
  ->  Seq Scan on public.t2  (cost=0.00..1541.00 rows=100000 width=15) (actual time=0.015..9.082 rows=100000 loops=1)
        Output: t2.id, t2.name
  ->  Hash  (cost=38.39..38.39 rows=977 width=15) (actual time=0.351..0.351 rows=999 loops=1)
        Output: t1.id, t1.name
        Buckets: 1024  Batches: 1  Memory Usage: 54kB
        ->  Index Scan using t1_id_idx on public.t1  (cost=0.29..38.39 rows=977 width=15) (actual time=0.011..0.227 rows=999 loops=1)
              Output: t1.id, t1.name
              Index Cond: (t1.id < 1000)
Planning Time: 2.564 ms
Execution Time: 18.459 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id
QUERYPLAN: 
Hash Join  (cost=2791.00..5707.00 rows=100000 width=30) (actual time=21.771..59.462 rows=100000 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Hash Cond: (t1.id = t2.id)
  ->  Seq Scan on public.t1  (cost=0.00..1541.00 rows=100000 width=15) (actual time=0.016..9.101 rows=100000 loops=1)
        Output: t1.id, t1.name
  ->  Hash  (cost=1541.00..1541.00 rows=100000 width=15) (actual time=21.490..21.491 rows=100000 loops=1)
        Output: t2.id, t2.name
        Buckets: 131072  Batches: 1  Memory Usage: 5614kB
        ->  Seq Scan on public.t2  (cost=0.00..1541.00 rows=100000 width=15) (actual time=0.013..9.347 rows=100000 loops=1)
              Output: t2.id, t2.name
Planning Time: 2.645 ms
Execution Time: 62.875 ms
----------------------------------------------------------------------------------------------------


----------------------------------------------------------------------------------------------------
TABLE SIZES:
T1 SIZE: 1, T2 SIZE: 10000
----------------------------------------------------------------------------------------------------
INDEXES:
INDEX ON t1(id): False, INDEX ON t2(id): False
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id = 10
QUERYPLAN: 
Nested Loop  (cost=0.00..4279.74 rows=118336 width=72) (actual time=0.077..26.419 rows=1 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  ->  Seq Scan on public.t1  (cost=0.00..1399.84 rows=344 width=36) (actual time=0.044..13.078 rows=1 loops=1)
        Output: t1.id, t1.name
        Filter: (t1.id = 10)
        Rows Removed by Filter: 99999
  ->  Materialize  (cost=0.00..1401.56 rows=344 width=36) (actual time=0.031..13.338 rows=1 loops=1)
        Output: t2.id, t2.name
        ->  Seq Scan on public.t2  (cost=0.00..1399.84 rows=344 width=36) (actual time=0.027..13.333 rows=1 loops=1)
              Output: t2.id, t2.name
              Filter: (t2.id = 10)
              Rows Removed by Filter: 99999
Planning Time: 1.455 ms
Execution Time: 26.541 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 10
QUERYPLAN: 
Merge Join  (cost=11685.86..129986.72 rows=7867639 width=72) (actual time=36.087..36.095 rows=9 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Merge Cond: (t1.id = t2.id)
  ->  Sort  (cost=3058.31..3115.56 rows=22902 width=36) (actual time=9.859..9.860 rows=9 loops=1)
        Output: t1.id, t1.name
        Sort Key: t1.id
        Sort Method: quicksort  Memory: 25kB
        ->  Seq Scan on public.t1  (cost=0.00..1399.84 rows=22902 width=36) (actual time=0.025..9.838 rows=9 loops=1)
              Output: t1.id, t1.name
              Filter: (t1.id < 10)
              Rows Removed by Filter: 99991
  ->  Materialize  (cost=8627.55..8971.08 rows=68707 width=36) (actual time=26.223..26.225 rows=10 loops=1)
        Output: t2.id, t2.name
        ->  Sort  (cost=8627.55..8799.32 rows=68707 width=36) (actual time=26.216..26.218 rows=10 loops=1)
              Output: t2.id, t2.name
              Sort Key: t2.id
              Sort Method: external merge  Disk: 2456kB
              ->  Seq Scan on public.t2  (cost=0.00..1228.07 rows=68707 width=36) (actual time=0.021..8.998 rows=100000 loops=1)
                    Output: t2.id, t2.name
Planning Time: 1.361 ms
Execution Time: 37.989 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 1000
QUERYPLAN: 
Merge Join  (cost=11685.86..129986.72 rows=7867639 width=72) (actual time=36.315..36.842 rows=999 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Merge Cond: (t1.id = t2.id)
  ->  Sort  (cost=3058.31..3115.56 rows=22902 width=36) (actual time=10.101..10.143 rows=999 loops=1)
        Output: t1.id, t1.name
        Sort Key: t1.id
        Sort Method: quicksort  Memory: 64kB
        ->  Seq Scan on public.t1  (cost=0.00..1399.84 rows=22902 width=36) (actual time=0.023..9.998 rows=999 loops=1)
              Output: t1.id, t1.name
              Filter: (t1.id < 1000)
              Rows Removed by Filter: 99001
  ->  Materialize  (cost=8627.55..8971.08 rows=68707 width=36) (actual time=26.208..26.392 rows=1000 loops=1)
        Output: t2.id, t2.name
        ->  Sort  (cost=8627.55..8799.32 rows=68707 width=36) (actual time=26.200..26.284 rows=1000 loops=1)
              Output: t2.id, t2.name
              Sort Key: t2.id
              Sort Method: external merge  Disk: 2456kB
              ->  Seq Scan on public.t2  (cost=0.00..1228.07 rows=68707 width=36) (actual time=0.030..9.195 rows=100000 loops=1)
                    Output: t2.id, t2.name
Planning Time: 1.379 ms
Execution Time: 38.855 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id
QUERYPLAN: 
Merge Join  (cost=17255.10..371819.28 rows=23603259 width=72) (actual time=52.715..110.380 rows=100000 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Merge Cond: (t1.id = t2.id)
  ->  Sort  (cost=8627.55..8799.32 rows=68707 width=36) (actual time=26.643..34.864 rows=100000 loops=1)
        Output: t1.id, t1.name
        Sort Key: t1.id
        Sort Method: external merge  Disk: 2456kB
        ->  Seq Scan on public.t1  (cost=0.00..1228.07 rows=68707 width=36) (actual time=0.023..9.573 rows=100000 loops=1)
              Output: t1.id, t1.name
  ->  Materialize  (cost=8627.55..8971.08 rows=68707 width=36) (actual time=26.063..44.254 rows=100000 loops=1)
        Output: t2.id, t2.name
        ->  Sort  (cost=8627.55..8799.32 rows=68707 width=36) (actual time=26.059..34.359 rows=100000 loops=1)
              Output: t2.id, t2.name
              Sort Key: t2.id
              Sort Method: external merge  Disk: 2456kB
              ->  Seq Scan on public.t2  (cost=0.00..1228.07 rows=68707 width=36) (actual time=0.030..9.180 rows=100000 loops=1)
                    Output: t2.id, t2.name
Planning Time: 1.474 ms
Execution Time: 116.053 ms
----------------------------------------------------------------------------------------------------
INDEXES:
INDEX ON t1(id): True, INDEX ON t2(id): False
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id = 10
QUERYPLAN: 
Nested Loop  (cost=0.29..1799.32 rows=1 width=30) (actual time=0.069..11.038 rows=1 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  ->  Index Scan using t1_id_idx on public.t1  (cost=0.29..8.31 rows=1 width=15) (actual time=0.047..0.049 rows=1 loops=1)
        Output: t1.id, t1.name
        Index Cond: (t1.id = 10)
  ->  Seq Scan on public.t2  (cost=0.00..1791.00 rows=1 width=15) (actual time=0.020..10.986 rows=1 loops=1)
        Output: t2.id, t2.name
        Filter: (t2.id = 10)
        Rows Removed by Filter: 99999
Planning Time: 1.785 ms
Execution Time: 11.155 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 10
QUERYPLAN: 
Hash Join  (cost=8.56..1924.65 rows=9 width=30) (actual time=0.056..16.382 rows=9 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Hash Cond: (t2.id = t1.id)
  ->  Seq Scan on public.t2  (cost=0.00..1541.00 rows=100000 width=15) (actual time=0.025..9.204 rows=100000 loops=1)
        Output: t2.id, t2.name
  ->  Hash  (cost=8.45..8.45 rows=9 width=15) (actual time=0.018..0.019 rows=9 loops=1)
        Output: t1.id, t1.name
        Buckets: 1024  Batches: 1  Memory Usage: 9kB
        ->  Index Scan using t1_id_idx on public.t1  (cost=0.29..8.45 rows=9 width=15) (actual time=0.006..0.008 rows=9 loops=1)
              Output: t1.id, t1.name
              Index Cond: (t1.id < 10)
Planning Time: 2.397 ms
Execution Time: 16.421 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 1000
QUERYPLAN: 
Hash Join  (cost=51.23..1977.21 rows=998 width=30) (actual time=0.392..19.023 rows=999 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Hash Cond: (t2.id = t1.id)
  ->  Seq Scan on public.t2  (cost=0.00..1541.00 rows=100000 width=15) (actual time=0.022..9.510 rows=100000 loops=1)
        Output: t2.id, t2.name
  ->  Hash  (cost=38.76..38.76 rows=998 width=15) (actual time=0.353..0.354 rows=999 loops=1)
        Output: t1.id, t1.name
        Buckets: 1024  Batches: 1  Memory Usage: 54kB
        ->  Index Scan using t1_id_idx on public.t1  (cost=0.29..38.76 rows=998 width=15) (actual time=0.011..0.231 rows=999 loops=1)
              Output: t1.id, t1.name
              Index Cond: (t1.id < 1000)
Planning Time: 2.284 ms
Execution Time: 19.114 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id
QUERYPLAN: 
Hash Join  (cost=2791.00..5707.00 rows=100000 width=30) (actual time=21.360..59.897 rows=100000 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Hash Cond: (t1.id = t2.id)
  ->  Seq Scan on public.t1  (cost=0.00..1541.00 rows=100000 width=15) (actual time=0.014..8.977 rows=100000 loops=1)
        Output: t1.id, t1.name
  ->  Hash  (cost=1541.00..1541.00 rows=100000 width=15) (actual time=21.048..21.049 rows=100000 loops=1)
        Output: t2.id, t2.name
        Buckets: 131072  Batches: 1  Memory Usage: 5614kB
        ->  Seq Scan on public.t2  (cost=0.00..1541.00 rows=100000 width=15) (actual time=0.017..9.231 rows=100000 loops=1)
              Output: t2.id, t2.name
Planning Time: 1.961 ms
Execution Time: 63.350 ms
----------------------------------------------------------------------------------------------------
INDEXES:
INDEX ON t1(id): True, INDEX ON t2(id): True
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id = 10
QUERYPLAN: 
Nested Loop  (cost=0.58..16.63 rows=1 width=30) (actual time=0.088..0.090 rows=1 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  ->  Index Scan using t1_id_idx on public.t1  (cost=0.29..8.31 rows=1 width=15) (actual time=0.043..0.043 rows=1 loops=1)
        Output: t1.id, t1.name
        Index Cond: (t1.id = 10)
  ->  Index Scan using t2_id_idx on public.t2  (cost=0.29..8.31 rows=1 width=15) (actual time=0.043..0.043 rows=1 loops=1)
        Output: t2.id, t2.name
        Index Cond: (t2.id = 10)
Planning Time: 2.769 ms
Execution Time: 0.206 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 10
QUERYPLAN: 
Nested Loop  (cost=0.58..83.33 rows=9 width=30) (actual time=0.010..0.025 rows=9 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  ->  Index Scan using t1_id_idx on public.t1  (cost=0.29..8.45 rows=9 width=15) (actual time=0.004..0.006 rows=9 loops=1)
        Output: t1.id, t1.name
        Index Cond: (t1.id < 10)
  ->  Index Scan using t2_id_idx on public.t2  (cost=0.29..8.31 rows=1 width=15) (actual time=0.001..0.001 rows=1 loops=9)
        Output: t2.id, t2.name
        Index Cond: (t2.id = t1.id)
Planning Time: 3.111 ms
Execution Time: 0.058 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 1000
QUERYPLAN: 
Hash Join  (cost=50.90..1976.77 rows=987 width=30) (actual time=0.391..18.406 rows=999 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Hash Cond: (t2.id = t1.id)
  ->  Seq Scan on public.t2  (cost=0.00..1541.00 rows=100000 width=15) (actual time=0.016..9.144 rows=100000 loops=1)
        Output: t2.id, t2.name
  ->  Hash  (cost=38.56..38.56 rows=987 width=15) (actual time=0.365..0.366 rows=999 loops=1)
        Output: t1.id, t1.name
        Buckets: 1024  Batches: 1  Memory Usage: 54kB
        ->  Index Scan using t1_id_idx on public.t1  (cost=0.29..38.56 rows=987 width=15) (actual time=0.021..0.236 rows=999 loops=1)
              Output: t1.id, t1.name
              Index Cond: (t1.id < 1000)
Planning Time: 2.764 ms
Execution Time: 18.464 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id
QUERYPLAN: 
Hash Join  (cost=2791.00..5707.00 rows=100000 width=30) (actual time=21.207..59.569 rows=100000 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Hash Cond: (t1.id = t2.id)
  ->  Seq Scan on public.t1  (cost=0.00..1541.00 rows=100000 width=15) (actual time=0.014..9.239 rows=100000 loops=1)
        Output: t1.id, t1.name
  ->  Hash  (cost=1541.00..1541.00 rows=100000 width=15) (actual time=20.933..20.934 rows=100000 loops=1)
        Output: t2.id, t2.name
        Buckets: 131072  Batches: 1  Memory Usage: 5614kB
        ->  Seq Scan on public.t2  (cost=0.00..1541.00 rows=100000 width=15) (actual time=0.012..9.166 rows=100000 loops=1)
              Output: t2.id, t2.name
Planning Time: 2.447 ms
Execution Time: 63.056 ms
----------------------------------------------------------------------------------------------------


----------------------------------------------------------------------------------------------------
TABLE SIZES:
T1 SIZE: 1, T2 SIZE: 1000000
----------------------------------------------------------------------------------------------------
INDEXES:
INDEX ON t1(id): False, INDEX ON t2(id): False
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id = 10
QUERYPLAN: 
Nested Loop  (cost=1000.00..26487.74 rows=1180952 width=72) (actual time=4.601..97.434 rows=1 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  ->  Gather  (cost=1000.00..10325.14 rows=3433 width=36) (actual time=4.549..76.977 rows=1 loops=1)
        Output: t2.id, t2.name
        Workers Planned: 2
        Workers Launched: 2
        ->  Parallel Seq Scan on public.t2  (cost=0.00..8981.84 rows=1430 width=36) (actual time=22.742..44.947 rows=0 loops=3)
              Output: t2.id, t2.name
              Filter: (t2.id = 10)
              Rows Removed by Filter: 333333
              Worker 0:  actual time=34.156..34.157 rows=0 loops=1
              Worker 1:  actual time=34.025..34.026 rows=0 loops=1
  ->  Materialize  (cost=0.00..1401.56 rows=344 width=36) (actual time=0.050..20.452 rows=1 loops=1)
        Output: t1.id, t1.name
        ->  Seq Scan on public.t1  (cost=0.00..1399.84 rows=344 width=36) (actual time=0.040..20.442 rows=1 loops=1)
              Output: t1.id, t1.name
              Filter: (t1.id = 10)
              Rows Removed by Filter: 99999
Planning Time: 1.282 ms
Execution Time: 97.558 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 10
QUERYPLAN: 
Merge Join  (cost=100662.78..1281766.92 rows=78618215 width=72) (actual time=336.041..336.048 rows=9 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Merge Cond: (t1.id = t2.id)
  ->  Sort  (cost=3058.31..3115.56 rows=22902 width=36) (actual time=9.914..9.915 rows=9 loops=1)
        Output: t1.id, t1.name
        Sort Key: t1.id
        Sort Method: quicksort  Memory: 25kB
        ->  Seq Scan on public.t1  (cost=0.00..1399.84 rows=22902 width=36) (actual time=0.025..9.891 rows=9 loops=1)
              Output: t1.id, t1.name
              Filter: (t1.id < 10)
              Rows Removed by Filter: 99991
  ->  Materialize  (cost=97604.48..101037.29 rows=686562 width=36) (actual time=326.121..326.124 rows=10 loops=1)
        Output: t2.id, t2.name
        ->  Sort  (cost=97604.48..99320.88 rows=686562 width=36) (actual time=326.115..326.116 rows=10 loops=1)
              Output: t2.id, t2.name
              Sort Key: t2.id
              Sort Method: external merge  Disk: 24464kB
              ->  Seq Scan on public.t2  (cost=0.00..12271.62 rows=686562 width=36) (actual time=0.026..88.919 rows=1000000 loops=1)
                    Output: t2.id, t2.name
Planning Time: 1.424 ms
Execution Time: 340.544 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 1000
QUERYPLAN: 
Merge Join  (cost=100662.78..1281766.92 rows=78618215 width=72) (actual time=339.370..339.896 rows=999 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Merge Cond: (t1.id = t2.id)
  ->  Sort  (cost=3058.31..3115.56 rows=22902 width=36) (actual time=10.076..10.117 rows=999 loops=1)
        Output: t1.id, t1.name
        Sort Key: t1.id
        Sort Method: quicksort  Memory: 64kB
        ->  Seq Scan on public.t1  (cost=0.00..1399.84 rows=22902 width=36) (actual time=0.028..9.972 rows=999 loops=1)
              Output: t1.id, t1.name
              Filter: (t1.id < 1000)
              Rows Removed by Filter: 99001
  ->  Materialize  (cost=97604.48..101037.29 rows=686562 width=36) (actual time=329.287..329.469 rows=1000 loops=1)
        Output: t2.id, t2.name
        ->  Sort  (cost=97604.48..99320.88 rows=686562 width=36) (actual time=329.279..329.367 rows=1000 loops=1)
              Output: t2.id, t2.name
              Sort Key: t2.id
              Sort Method: external merge  Disk: 24464kB
              ->  Seq Scan on public.t2  (cost=0.00..12271.62 rows=686562 width=36) (actual time=0.032..88.381 rows=1000000 loops=1)
                    Output: t2.id, t2.name
Planning Time: 1.458 ms
Execution Time: 344.242 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id
QUERYPLAN: 
Merge Join  (cost=106232.03..3646163.12 rows=235858077 width=72) (actual time=352.252..410.003 rows=100000 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Merge Cond: (t1.id = t2.id)
  ->  Sort  (cost=8627.55..8799.32 rows=68707 width=36) (actual time=26.031..34.181 rows=100000 loops=1)
        Output: t1.id, t1.name
        Sort Key: t1.id
        Sort Method: external merge  Disk: 2456kB
        ->  Seq Scan on public.t1  (cost=0.00..1228.07 rows=68707 width=36) (actual time=0.024..9.053 rows=100000 loops=1)
              Output: t1.id, t1.name
  ->  Materialize  (cost=97604.48..101037.29 rows=686562 width=36) (actual time=326.214..345.239 rows=100001 loops=1)
        Output: t2.id, t2.name
        ->  Sort  (cost=97604.48..99320.88 rows=686562 width=36) (actual time=326.209..335.802 rows=100001 loops=1)
              Output: t2.id, t2.name
              Sort Key: t2.id
              Sort Method: external merge  Disk: 24464kB
              ->  Seq Scan on public.t2  (cost=0.00..12271.62 rows=686562 width=36) (actual time=0.033..88.300 rows=1000000 loops=1)
                    Output: t2.id, t2.name
Planning Time: 1.276 ms
Execution Time: 418.428 ms
----------------------------------------------------------------------------------------------------
INDEXES:
INDEX ON t1(id): True, INDEX ON t2(id): False
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id = 10
QUERYPLAN: 
Nested Loop  (cost=1000.29..11622.75 rows=1 width=30) (actual time=0.651..73.980 rows=1 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  ->  Index Scan using t1_id_idx on public.t1  (cost=0.29..8.31 rows=1 width=15) (actual time=0.047..0.050 rows=1 loops=1)
        Output: t1.id, t1.name
        Index Cond: (t1.id = 10)
  ->  Gather  (cost=1000.00..11614.43 rows=1 width=15) (actual time=0.602..73.927 rows=1 loops=1)
        Output: t2.id, t2.name
        Workers Planned: 2
        Workers Launched: 2
        ->  Parallel Seq Scan on public.t2  (cost=0.00..10614.33 rows=1 width=15) (actual time=12.948..35.556 rows=0 loops=3)
              Output: t2.id, t2.name
              Filter: (t2.id = 10)
              Rows Removed by Filter: 333333
              Worker 0:  actual time=21.490..21.490 rows=0 loops=1
              Worker 1:  actual time=17.331..17.331 rows=0 loops=1
Planning Time: 1.690 ms
Execution Time: 74.101 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 10
QUERYPLAN: 
Gather  (cost=1008.56..12144.67 rows=9 width=30) (actual time=1.184..104.675 rows=9 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Workers Planned: 2
  Workers Launched: 2
  ->  Hash Join  (cost=8.56..11143.77 rows=4 width=30) (actual time=29.480..62.102 rows=3 loops=3)
        Output: t1.id, t1.name, t2.id, t2.name
        Hash Cond: (t2.id = t1.id)
        Worker 0:  actual time=43.978..43.979 rows=0 loops=1
        Worker 1:  actual time=44.356..44.358 rows=0 loops=1
        ->  Parallel Seq Scan on public.t2  (cost=0.00..9572.67 rows=416667 width=15) (actual time=0.025..33.613 rows=333333 loops=3)
              Output: t2.id, t2.name
              Worker 0:  actual time=0.019..24.060 rows=263070 loops=1
              Worker 1:  actual time=0.021..24.629 rows=265105 loops=1
        ->  Hash  (cost=8.45..8.45 rows=9 width=15) (actual time=0.047..0.048 rows=9 loops=3)
              Output: t1.id, t1.name
              Buckets: 1024  Batches: 1  Memory Usage: 9kB
              Worker 0:  actual time=0.049..0.049 rows=9 loops=1
              Worker 1:  actual time=0.048..0.049 rows=9 loops=1
              ->  Index Scan using t1_id_idx on public.t1  (cost=0.29..8.45 rows=9 width=15) (actual time=0.033..0.035 rows=9 loops=3)
                    Output: t1.id, t1.name
                    Index Cond: (t1.id < 10)
                    Worker 0:  actual time=0.038..0.040 rows=9 loops=1
                    Worker 1:  actual time=0.036..0.038 rows=9 loops=1
Planning Time: 2.158 ms
Execution Time: 104.739 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 1000
QUERYPLAN: 
Gather  (cost=1050.00..12284.86 rows=957 width=30) (actual time=0.903..102.183 rows=999 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Workers Planned: 2
  Workers Launched: 2
  ->  Hash Join  (cost=50.00..11189.16 rows=399 width=30) (actual time=32.022..63.895 rows=333 loops=3)
        Output: t1.id, t1.name, t2.id, t2.name
        Hash Cond: (t2.id = t1.id)
        Worker 0:  actual time=49.778..49.779 rows=0 loops=1
        Worker 1:  actual time=45.886..45.887 rows=0 loops=1
        ->  Parallel Seq Scan on public.t2  (cost=0.00..9572.67 rows=416667 width=15) (actual time=0.022..32.294 rows=333333 loops=3)
              Output: t2.id, t2.name
              Worker 0:  actual time=0.023..25.296 rows=279425 loops=1
              Worker 1:  actual time=0.017..23.313 rows=253820 loops=1
        ->  Hash  (cost=38.04..38.04 rows=957 width=15) (actual time=0.347..0.348 rows=999 loops=3)
              Output: t1.id, t1.name
              Buckets: 1024  Batches: 1  Memory Usage: 54kB
              Worker 0:  actual time=0.342..0.342 rows=999 loops=1
              Worker 1:  actual time=0.341..0.341 rows=999 loops=1
              ->  Index Scan using t1_id_idx on public.t1  (cost=0.29..38.04 rows=957 width=15) (actual time=0.037..0.227 rows=999 loops=3)
                    Output: t1.id, t1.name
                    Index Cond: (t1.id < 1000)
                    Worker 0:  actual time=0.045..0.220 rows=999 loops=1
                    Worker 1:  actual time=0.047..0.221 rows=999 loops=1
Planning Time: 2.396 ms
Execution Time: 102.284 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id
QUERYPLAN: 
Hash Join  (cost=2791.00..22947.00 rows=100000 width=30) (actual time=22.077..252.972 rows=100000 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Hash Cond: (t2.id = t1.id)
  ->  Seq Scan on public.t2  (cost=0.00..15406.00 rows=1000000 width=15) (actual time=0.025..88.886 rows=1000000 loops=1)
        Output: t2.id, t2.name
  ->  Hash  (cost=1541.00..1541.00 rows=100000 width=15) (actual time=21.758..21.759 rows=100000 loops=1)
        Output: t1.id, t1.name
        Buckets: 131072  Batches: 1  Memory Usage: 5614kB
        ->  Seq Scan on public.t1  (cost=0.00..1541.00 rows=100000 width=15) (actual time=0.012..9.434 rows=100000 loops=1)
              Output: t1.id, t1.name
Planning Time: 1.987 ms
Execution Time: 256.419 ms
----------------------------------------------------------------------------------------------------
INDEXES:
INDEX ON t1(id): True, INDEX ON t2(id): True
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id = 10
QUERYPLAN: 
Nested Loop  (cost=0.72..16.76 rows=1 width=30) (actual time=0.111..0.112 rows=1 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  ->  Index Scan using t1_id_idx on public.t1  (cost=0.29..8.31 rows=1 width=15) (actual time=0.047..0.047 rows=1 loops=1)
        Output: t1.id, t1.name
        Index Cond: (t1.id = 10)
  ->  Index Scan using t2_id_idx on public.t2  (cost=0.42..8.44 rows=1 width=15) (actual time=0.060..0.061 rows=1 loops=1)
        Output: t2.id, t2.name
        Index Cond: (t2.id = 10)
Planning Time: 2.367 ms
Execution Time: 0.227 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 10
QUERYPLAN: 
Nested Loop  (cost=0.72..84.52 rows=9 width=30) (actual time=0.011..0.029 rows=9 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  ->  Index Scan using t1_id_idx on public.t1  (cost=0.29..8.45 rows=9 width=15) (actual time=0.004..0.006 rows=9 loops=1)
        Output: t1.id, t1.name
        Index Cond: (t1.id < 10)
  ->  Index Scan using t2_id_idx on public.t2  (cost=0.42..8.44 rows=1 width=15) (actual time=0.002..0.002 rows=1 loops=9)
        Output: t2.id, t2.name
        Index Cond: (t2.id = t1.id)
Planning Time: 2.874 ms
Execution Time: 0.058 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 1000
QUERYPLAN: 
Merge Join  (cost=0.75..3432.27 rows=1021 width=30) (actual time=0.025..0.733 rows=999 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Merge Cond: (t1.id = t2.id)
  ->  Index Scan using t1_id_idx on public.t1  (cost=0.29..39.16 rows=1021 width=15) (actual time=0.010..0.215 rows=999 loops=1)
        Output: t1.id, t1.name
        Index Cond: (t1.id < 1000)
  ->  Index Scan using t2_id_idx on public.t2  (cost=0.42..31389.42 rows=1000000 width=15) (actual time=0.011..0.227 rows=1000 loops=1)
        Output: t2.id, t2.name
Planning Time: 3.307 ms
Execution Time: 0.806 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id
QUERYPLAN: 
Merge Join  (cost=0.75..7778.64 rows=100000 width=30) (actual time=0.022..66.004 rows=100000 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Merge Cond: (t1.id = t2.id)
  ->  Index Scan using t1_id_idx on public.t1  (cost=0.29..3148.29 rows=100000 width=15) (actual time=0.006..18.838 rows=100000 loops=1)
        Output: t1.id, t1.name
  ->  Index Scan using t2_id_idx on public.t2  (cost=0.42..31389.42 rows=1000000 width=15) (actual time=0.011..19.054 rows=100001 loops=1)
        Output: t2.id, t2.name
Planning Time: 2.857 ms
Execution Time: 68.648 ms
----------------------------------------------------------------------------------------------------


----------------------------------------------------------------------------------------------------
TABLE SIZES:
T1 SIZE: 1, T2 SIZE: 10000000
----------------------------------------------------------------------------------------------------
INDEXES:
INDEX ON t1(id): False, INDEX ON t2(id): False
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id = 10
QUERYPLAN: 
Nested Loop  (cost=1000.00..96376.88 rows=34325 width=51) (actual time=0.622..627.554 rows=1 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  ->  Seq Scan on public.t1  (cost=0.00..1791.00 rows=1 width=15) (actual time=0.032..13.768 rows=1 loops=1)
        Output: t1.id, t1.name
        Filter: (t1.id = 10)
        Rows Removed by Filter: 99999
  ->  Gather  (cost=1000.00..94242.63 rows=34325 width=36) (actual time=0.588..613.783 rows=1 loops=1)
        Output: t2.id, t2.name
        Workers Planned: 2
        Workers Launched: 2
        ->  Parallel Seq Scan on public.t2  (cost=0.00..89810.13 rows=14302 width=36) (actual time=377.054..581.378 rows=0 loops=3)
              Output: t2.id, t2.name
              Filter: (t2.id = 10)
              Rows Removed by Filter: 3333333
              Worker 0:  actual time=565.668..565.668 rows=0 loops=1
              Worker 1:  actual time=565.458..565.459 rows=0 loops=1
Planning Time: 2.976 ms
Execution Time: 627.702 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 10
QUERYPLAN: 
Gather  (cost=2791.12..96248.23 rows=686 width=51) (actual time=14.274..668.046 rows=9 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Workers Planned: 2
  Workers Launched: 2
  ->  Hash Join  (cost=1791.12..95179.63 rows=286 width=51) (actual time=414.902..629.929 rows=3 loops=3)
        Output: t1.id, t1.name, t2.id, t2.name
        Hash Cond: (t2.id = t1.id)
        Worker 0:  actual time=616.067..616.069 rows=0 loops=1
        Worker 1:  actual time=614.847..614.848 rows=0 loops=1
        ->  Parallel Seq Scan on public.t2  (cost=0.00..82659.10 rows=2860410 width=36) (actual time=0.265..357.197 rows=3333333 loops=3)
              Output: t2.id, t2.name
              Worker 0:  actual time=0.388..350.557 rows=3226965 loops=1
              Worker 1:  actual time=0.352..349.677 rows=3261920 loops=1
        ->  Hash  (cost=1791.00..1791.00 rows=10 width=15) (actual time=10.360..10.361 rows=9 loops=3)
              Output: t1.id, t1.name
              Buckets: 1024  Batches: 1  Memory Usage: 9kB
              Worker 0:  actual time=8.633..8.634 rows=9 loops=1
              Worker 1:  actual time=8.731..8.731 rows=9 loops=1
              ->  Seq Scan on public.t1  (cost=0.00..1791.00 rows=10 width=15) (actual time=0.201..10.350 rows=9 loops=3)
                    Output: t1.id, t1.name
                    Filter: (t1.id < 10)
                    Rows Removed by Filter: 99991
                    Worker 0:  actual time=0.266..8.623 rows=9 loops=1
                    Worker 1:  actual time=0.317..8.721 rows=9 loops=1
Planning Time: 2.099 ms
Execution Time: 668.143 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 1000
QUERYPLAN: 
Gather  (cost=2803.39..103275.70 rows=68032 width=51) (actual time=14.729..705.543 rows=999 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Workers Planned: 2
  Workers Launched: 2
  ->  Hash Join  (cost=1803.39..95472.50 rows=28347 width=51) (actual time=439.648..666.843 rows=333 loops=3)
        Output: t1.id, t1.name, t2.id, t2.name
        Hash Cond: (t2.id = t1.id)
        Worker 0:  actual time=654.091..654.093 rows=0 loops=1
        Worker 1:  actual time=650.586..650.587 rows=0 loops=1
        ->  Parallel Seq Scan on public.t2  (cost=0.00..82659.10 rows=2860410 width=36) (actual time=0.604..349.083 rows=3333333 loops=3)
              Output: t2.id, t2.name
              Worker 0:  actual time=0.376..340.598 rows=3300030 loops=1
              Worker 1:  actual time=0.366..340.141 rows=3292815 loops=1
        ->  Hash  (cost=1791.00..1791.00 rows=991 width=15) (actual time=10.230..10.231 rows=999 loops=3)
              Output: t1.id, t1.name
              Buckets: 1024  Batches: 1  Memory Usage: 54kB
              Worker 0:  actual time=8.709..8.710 rows=999 loops=1
              Worker 1:  actual time=8.801..8.801 rows=999 loops=1
              ->  Seq Scan on public.t1  (cost=0.00..1791.00 rows=991 width=15) (actual time=0.248..10.141 rows=999 loops=3)
                    Output: t1.id, t1.name
                    Filter: (t1.id < 1000)
                    Rows Removed by Filter: 99001
                    Worker 0:  actual time=0.389..8.619 rows=999 loops=1
                    Worker 1:  actual time=0.337..8.710 rows=999 loops=1
Planning Time: 0.955 ms
Execution Time: 705.740 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id
QUERYPLAN: 
Hash Join  (cost=2791.00..219889.39 rows=6864985 width=51) (actual time=18.780..2101.560 rows=100000 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Hash Cond: (t2.id = t1.id)
  ->  Seq Scan on public.t2  (cost=0.00..122704.85 rows=6864985 width=36) (actual time=1.026..847.742 rows=10000000 loops=1)
        Output: t2.id, t2.name
  ->  Hash  (cost=1541.00..1541.00 rows=100000 width=15) (actual time=17.550..17.569 rows=100000 loops=1)
        Output: t1.id, t1.name
        Buckets: 131072  Batches: 1  Memory Usage: 5614kB
        ->  Seq Scan on public.t1  (cost=0.00..1541.00 rows=100000 width=15) (actual time=0.013..6.260 rows=100000 loops=1)
              Output: t1.id, t1.name
Planning Time: 1.050 ms
Execution Time: 2104.506 ms
----------------------------------------------------------------------------------------------------
INDEXES:
INDEX ON t1(id): True, INDEX ON t2(id): False
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id = 10
QUERYPLAN: 
Nested Loop  (cost=1000.29..107147.66 rows=1 width=30) (actual time=0.594..439.258 rows=1 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  ->  Index Scan using t1_id_idx on public.t1  (cost=0.29..8.31 rows=1 width=15) (actual time=0.043..0.045 rows=1 loops=1)
        Output: t1.id, t1.name
        Index Cond: (t1.id = 10)
  ->  Gather  (cost=1000.00..107139.34 rows=1 width=15) (actual time=0.549..439.209 rows=1 loops=1)
        Output: t2.id, t2.name
        Workers Planned: 2
        Workers Launched: 2
        ->  Parallel Seq Scan on public.t2  (cost=0.00..106139.24 rows=1 width=15) (actual time=255.472..398.865 rows=0 loops=3)
              Output: t2.id, t2.name
              Filter: (t2.id = 10)
              Rows Removed by Filter: 3333333
              Worker 0:  actual time=379.807..379.808 rows=0 loops=1
              Worker 1:  actual time=386.547..386.548 rows=0 loops=1
Planning Time: 1.713 ms
Execution Time: 439.407 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 10
QUERYPLAN: 
Gather  (cost=1008.56..112357.17 rows=9 width=30) (actual time=0.569..678.113 rows=9 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Workers Planned: 2
  Workers Launched: 2
  ->  Hash Join  (cost=8.56..111356.27 rows=4 width=30) (actual time=375.354..598.127 rows=3 loops=3)
        Output: t1.id, t1.name, t2.id, t2.name
        Hash Cond: (t2.id = t1.id)
        Worker 0:  actual time=620.888..620.889 rows=0 loops=1
        Worker 1:  actual time=505.083..505.085 rows=0 loops=1
        ->  Parallel Seq Scan on public.t2  (cost=0.00..95722.40 rows=4166740 width=15) (actual time=0.317..345.750 rows=3333333 loops=3)
              Output: t2.id, t2.name
              Worker 0:  actual time=0.447..359.515 rows=3481155 loops=1
              Worker 1:  actual time=0.464..293.261 rows=2863060 loops=1
        ->  Hash  (cost=8.45..8.45 rows=9 width=15) (actual time=0.043..0.043 rows=9 loops=3)
              Output: t1.id, t1.name
              Buckets: 1024  Batches: 1  Memory Usage: 9kB
              Worker 0:  actual time=0.052..0.052 rows=9 loops=1
              Worker 1:  actual time=0.047..0.047 rows=9 loops=1
              ->  Index Scan using t1_id_idx on public.t1  (cost=0.29..8.45 rows=9 width=15) (actual time=0.032..0.034 rows=9 loops=3)
                    Output: t1.id, t1.name
                    Index Cond: (t1.id < 10)
                    Worker 0:  actual time=0.040..0.041 rows=9 loops=1
                    Worker 1:  actual time=0.036..0.038 rows=9 loops=1
Planning Time: 2.321 ms
Execution Time: 678.198 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 1000
QUERYPLAN: 
Gather  (cost=1051.05..112502.05 rows=992 width=30) (actual time=2.076..703.245 rows=999 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Workers Planned: 2
  Workers Launched: 2
  ->  Hash Join  (cost=51.05..111402.85 rows=413 width=30) (actual time=431.312..661.940 rows=333 loops=3)
        Output: t1.id, t1.name, t2.id, t2.name
        Hash Cond: (t2.id = t1.id)
        Worker 0:  actual time=649.302..649.303 rows=0 loops=1
        Worker 1:  actual time=642.988..642.990 rows=0 loops=1
        ->  Parallel Seq Scan on public.t2  (cost=0.00..95722.40 rows=4166740 width=15) (actual time=0.577..353.224 rows=3333333 loops=3)
              Output: t2.id, t2.name
              Worker 0:  actual time=0.909..345.871 rows=3266545 loops=1
              Worker 1:  actual time=0.398..341.252 rows=3265065 loops=1
        ->  Hash  (cost=38.65..38.65 rows=992 width=15) (actual time=0.658..0.658 rows=999 loops=3)
              Output: t1.id, t1.name
              Buckets: 1024  Batches: 1  Memory Usage: 54kB
              Worker 0:  actual time=0.394..0.394 rows=999 loops=1
              Worker 1:  actual time=0.374..0.375 rows=999 loops=1
              ->  Index Scan using t1_id_idx on public.t1  (cost=0.29..38.65 rows=992 width=15) (actual time=0.038..0.537 rows=999 loops=3)
                    Output: t1.id, t1.name
                    Index Cond: (t1.id < 1000)
                    Worker 0:  actual time=0.048..0.261 rows=999 loops=1
                    Worker 1:  actual time=0.043..0.248 rows=999 loops=1
Planning Time: 2.181 ms
Execution Time: 703.384 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id
QUERYPLAN: 
Gather  (cost=3791.00..125555.34 rows=100000 width=30) (actual time=30.894..1014.293 rows=100000 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Workers Planned: 2
  Workers Launched: 2
  ->  Hash Join  (cost=2791.00..114555.34 rows=41667 width=30) (actual time=25.570..969.783 rows=33333 loops=3)
        Output: t1.id, t1.name, t2.id, t2.name
        Hash Cond: (t2.id = t1.id)
        Worker 0:  actual time=23.182..959.080 rows=17120 loops=1
        Worker 1:  actual time=23.074..958.841 rows=11840 loops=1
        ->  Parallel Seq Scan on public.t2  (cost=0.00..95722.40 rows=4166740 width=15) (actual time=0.594..352.616 rows=3333333 loops=3)
              Output: t2.id, t2.name
              Worker 0:  actual time=0.403..349.276 rows=3326115 loops=1
              Worker 1:  actual time=0.363..350.862 rows=3322600 loops=1
        ->  Hash  (cost=1541.00..1541.00 rows=100000 width=15) (actual time=24.551..24.552 rows=100000 loops=3)
              Output: t1.id, t1.name
              Buckets: 131072  Batches: 1  Memory Usage: 5614kB
              Worker 0:  actual time=22.268..22.269 rows=100000 loops=1
              Worker 1:  actual time=22.163..22.164 rows=100000 loops=1
              ->  Seq Scan on public.t1  (cost=0.00..1541.00 rows=100000 width=15) (actual time=0.241..7.987 rows=100000 loops=3)
                    Output: t1.id, t1.name
                    Worker 0:  actual time=0.365..7.611 rows=100000 loops=1
                    Worker 1:  actual time=0.342..7.657 rows=100000 loops=1
Planning Time: 1.937 ms
Execution Time: 1017.731 ms
----------------------------------------------------------------------------------------------------
INDEXES:
INDEX ON t1(id): True, INDEX ON t2(id): True
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id = 10
QUERYPLAN: 
Nested Loop  (cost=0.73..16.77 rows=1 width=30) (actual time=0.129..0.130 rows=1 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  ->  Index Scan using t1_id_idx on public.t1  (cost=0.29..8.31 rows=1 width=15) (actual time=0.048..0.049 rows=1 loops=1)
        Output: t1.id, t1.name
        Index Cond: (t1.id = 10)
  ->  Index Scan using t2_id_idx on public.t2  (cost=0.43..8.45 rows=1 width=15) (actual time=0.078..0.079 rows=1 loops=1)
        Output: t2.id, t2.name
        Index Cond: (t2.id = 10)
Planning Time: 2.951 ms
Execution Time: 0.230 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 10
QUERYPLAN: 
Nested Loop  (cost=0.73..93.09 rows=10 width=30) (actual time=0.016..0.031 rows=9 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  ->  Index Scan using t1_id_idx on public.t1  (cost=0.29..8.47 rows=10 width=15) (actual time=0.010..0.011 rows=9 loops=1)
        Output: t1.id, t1.name
        Index Cond: (t1.id < 10)
  ->  Index Scan using t2_id_idx on public.t2  (cost=0.43..8.45 rows=1 width=15) (actual time=0.001..0.002 rows=1 loops=9)
        Output: t2.id, t2.name
        Index Cond: (t2.id = t1.id)
Planning Time: 4.114 ms
Execution Time: 0.052 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 1000
QUERYPLAN: 
Merge Join  (cost=0.77..3580.25 rows=1100 width=30) (actual time=0.025..0.668 rows=999 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Merge Cond: (t1.id = t2.id)
  ->  Index Scan using t1_id_idx on public.t1  (cost=0.29..44.54 rows=1100 width=15) (actual time=0.014..0.183 rows=999 loops=1)
        Output: t1.id, t1.name
        Index Cond: (t1.id < 1000)
  ->  Index Scan using t2_id_idx on public.t2  (cost=0.43..313744.34 rows=9999860 width=15) (actual time=0.007..0.247 rows=1000 loops=1)
        Output: t2.id, t2.name
Planning Time: 4.112 ms
Execution Time: 0.735 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id
QUERYPLAN: 
Merge Join  (cost=2.87..7920.25 rows=100000 width=30) (actual time=0.018..69.071 rows=100000 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Merge Cond: (t1.id = t2.id)
  ->  Index Scan using t1_id_idx on public.t1  (cost=0.29..3148.29 rows=100000 width=15) (actual time=0.010..18.470 rows=100000 loops=1)
        Output: t1.id, t1.name
  ->  Index Scan using t2_id_idx on public.t2  (cost=0.43..313744.34 rows=9999860 width=15) (actual time=0.004..22.245 rows=100001 loops=1)
        Output: t2.id, t2.name
Planning Time: 2.595 ms
Execution Time: 71.996 ms
----------------------------------------------------------------------------------------------------


----------------------------------------------------------------------------------------------------
TABLE SIZES:
T1 SIZE: 100, T2 SIZE: 1
----------------------------------------------------------------------------------------------------
INDEXES:
INDEX ON t1(id): False, INDEX ON t2(id): False
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id = 10
QUERYPLAN: 
Nested Loop  (cost=0.00..4279.74 rows=118336 width=72) (actual time=0.060..23.102 rows=1 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  ->  Seq Scan on public.t1  (cost=0.00..1399.84 rows=344 width=36) (actual time=0.029..12.225 rows=1 loops=1)
        Output: t1.id, t1.name
        Filter: (t1.id = 10)
        Rows Removed by Filter: 99999
  ->  Materialize  (cost=0.00..1401.56 rows=344 width=36) (actual time=0.030..10.875 rows=1 loops=1)
        Output: t2.id, t2.name
        ->  Seq Scan on public.t2  (cost=0.00..1399.84 rows=344 width=36) (actual time=0.024..10.869 rows=1 loops=1)
              Output: t2.id, t2.name
              Filter: (t2.id = 10)
              Rows Removed by Filter: 99999
Planning Time: 1.214 ms
Execution Time: 23.182 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 10
QUERYPLAN: 
Merge Join  (cost=11685.86..129986.72 rows=7867639 width=72) (actual time=38.687..38.694 rows=9 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Merge Cond: (t1.id = t2.id)
  ->  Sort  (cost=3058.31..3115.56 rows=22902 width=36) (actual time=8.859..8.859 rows=9 loops=1)
        Output: t1.id, t1.name
        Sort Key: t1.id
        Sort Method: quicksort  Memory: 25kB
        ->  Seq Scan on public.t1  (cost=0.00..1399.84 rows=22902 width=36) (actual time=0.025..8.841 rows=9 loops=1)
              Output: t1.id, t1.name
              Filter: (t1.id < 10)
              Rows Removed by Filter: 99991
  ->  Materialize  (cost=8627.55..8971.08 rows=68707 width=36) (actual time=29.823..29.825 rows=10 loops=1)
        Output: t2.id, t2.name
        ->  Sort  (cost=8627.55..8799.32 rows=68707 width=36) (actual time=29.817..29.819 rows=10 loops=1)
              Output: t2.id, t2.name
              Sort Key: t2.id
              Sort Method: external merge  Disk: 2456kB
              ->  Seq Scan on public.t2  (cost=0.00..1228.07 rows=68707 width=36) (actual time=0.025..9.680 rows=100000 loops=1)
                    Output: t2.id, t2.name
Planning Time: 1.143 ms
Execution Time: 40.454 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 1000
QUERYPLAN: 
Merge Join  (cost=11685.86..129986.72 rows=7867639 width=72) (actual time=34.038..34.545 rows=999 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Merge Cond: (t1.id = t2.id)
  ->  Sort  (cost=3058.31..3115.56 rows=22902 width=36) (actual time=9.066..9.105 rows=999 loops=1)
        Output: t1.id, t1.name
        Sort Key: t1.id
        Sort Method: quicksort  Memory: 64kB
        ->  Seq Scan on public.t1  (cost=0.00..1399.84 rows=22902 width=36) (actual time=0.023..8.988 rows=999 loops=1)
              Output: t1.id, t1.name
              Filter: (t1.id < 1000)
              Rows Removed by Filter: 99001
  ->  Materialize  (cost=8627.55..8971.08 rows=68707 width=36) (actual time=24.968..25.137 rows=1000 loops=1)
        Output: t2.id, t2.name
        ->  Sort  (cost=8627.55..8799.32 rows=68707 width=36) (actual time=24.954..25.034 rows=1000 loops=1)
              Output: t2.id, t2.name
              Sort Key: t2.id
              Sort Method: external merge  Disk: 2456kB
              ->  Seq Scan on public.t2  (cost=0.00..1228.07 rows=68707 width=36) (actual time=0.029..8.768 rows=100000 loops=1)
                    Output: t2.id, t2.name
Planning Time: 1.082 ms
Execution Time: 36.334 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id
QUERYPLAN: 
Merge Join  (cost=17255.10..371819.28 rows=23603259 width=72) (actual time=61.218..117.127 rows=100000 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Merge Cond: (t1.id = t2.id)
  ->  Sort  (cost=8627.55..8799.32 rows=68707 width=36) (actual time=24.416..32.372 rows=100000 loops=1)
        Output: t1.id, t1.name
        Sort Key: t1.id
        Sort Method: external merge  Disk: 2456kB
        ->  Seq Scan on public.t1  (cost=0.00..1228.07 rows=68707 width=36) (actual time=0.024..8.581 rows=100000 loops=1)
              Output: t1.id, t1.name
  ->  Materialize  (cost=8627.55..8971.08 rows=68707 width=36) (actual time=36.796..54.365 rows=100000 loops=1)
        Output: t2.id, t2.name
        ->  Sort  (cost=8627.55..8799.32 rows=68707 width=36) (actual time=36.786..44.891 rows=100000 loops=1)
              Output: t2.id, t2.name
              Sort Key: t2.id
              Sort Method: external merge  Disk: 2456kB
              ->  Seq Scan on public.t2  (cost=0.00..1228.07 rows=68707 width=36) (actual time=0.038..13.341 rows=100000 loops=1)
                    Output: t2.id, t2.name
Planning Time: 1.099 ms
Execution Time: 122.315 ms
----------------------------------------------------------------------------------------------------
INDEXES:
INDEX ON t1(id): True, INDEX ON t2(id): False
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id = 10
QUERYPLAN: 
Nested Loop  (cost=0.29..1799.32 rows=1 width=30) (actual time=0.062..7.995 rows=1 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  ->  Index Scan using t1_id_idx on public.t1  (cost=0.29..8.31 rows=1 width=15) (actual time=0.043..0.044 rows=1 loops=1)
        Output: t1.id, t1.name
        Index Cond: (t1.id = 10)
  ->  Seq Scan on public.t2  (cost=0.00..1791.00 rows=1 width=15) (actual time=0.018..7.948 rows=1 loops=1)
        Output: t2.id, t2.name
        Filter: (t2.id = 10)
        Rows Removed by Filter: 99999
Planning Time: 1.396 ms
Execution Time: 8.097 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 10
QUERYPLAN: 
Hash Join  (cost=8.56..1924.65 rows=9 width=30) (actual time=0.042..13.825 rows=9 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Hash Cond: (t2.id = t1.id)
  ->  Seq Scan on public.t2  (cost=0.00..1541.00 rows=100000 width=15) (actual time=0.018..7.763 rows=100000 loops=1)
        Output: t2.id, t2.name
  ->  Hash  (cost=8.45..8.45 rows=9 width=15) (actual time=0.016..0.017 rows=9 loops=1)
        Output: t1.id, t1.name
        Buckets: 1024  Batches: 1  Memory Usage: 9kB
        ->  Index Scan using t1_id_idx on public.t1  (cost=0.29..8.45 rows=9 width=15) (actual time=0.008..0.009 rows=9 loops=1)
              Output: t1.id, t1.name
              Index Cond: (t1.id < 10)
Planning Time: 1.707 ms
Execution Time: 13.852 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 1000
QUERYPLAN: 
Hash Join  (cost=49.91..1975.45 rows=954 width=30) (actual time=0.304..15.643 rows=999 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Hash Cond: (t2.id = t1.id)
  ->  Seq Scan on public.t2  (cost=0.00..1541.00 rows=100000 width=15) (actual time=0.018..7.873 rows=100000 loops=1)
        Output: t2.id, t2.name
  ->  Hash  (cost=37.99..37.99 rows=954 width=15) (actual time=0.277..0.277 rows=999 loops=1)
        Output: t1.id, t1.name
        Buckets: 1024  Batches: 1  Memory Usage: 54kB
        ->  Index Scan using t1_id_idx on public.t1  (cost=0.29..37.99 rows=954 width=15) (actual time=0.013..0.184 rows=999 loops=1)
              Output: t1.id, t1.name
              Index Cond: (t1.id < 1000)
Planning Time: 1.694 ms
Execution Time: 15.715 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id
QUERYPLAN: 
Hash Join  (cost=2791.00..5707.00 rows=100000 width=30) (actual time=17.747..49.460 rows=100000 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Hash Cond: (t1.id = t2.id)
  ->  Seq Scan on public.t1  (cost=0.00..1541.00 rows=100000 width=15) (actual time=0.014..8.040 rows=100000 loops=1)
        Output: t1.id, t1.name
  ->  Hash  (cost=1541.00..1541.00 rows=100000 width=15) (actual time=17.526..17.526 rows=100000 loops=1)
        Output: t2.id, t2.name
        Buckets: 131072  Batches: 1  Memory Usage: 5614kB
        ->  Seq Scan on public.t2  (cost=0.00..1541.00 rows=100000 width=15) (actual time=0.017..8.059 rows=100000 loops=1)
              Output: t2.id, t2.name
Planning Time: 2.019 ms
Execution Time: 52.196 ms
----------------------------------------------------------------------------------------------------
INDEXES:
INDEX ON t1(id): True, INDEX ON t2(id): True
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id = 10
QUERYPLAN: 
Nested Loop  (cost=0.58..16.63 rows=1 width=30) (actual time=0.078..0.079 rows=1 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  ->  Index Scan using t1_id_idx on public.t1  (cost=0.29..8.31 rows=1 width=15) (actual time=0.039..0.040 rows=1 loops=1)
        Output: t1.id, t1.name
        Index Cond: (t1.id = 10)
  ->  Index Scan using t2_id_idx on public.t2  (cost=0.29..8.31 rows=1 width=15) (actual time=0.036..0.036 rows=1 loops=1)
        Output: t2.id, t2.name
        Index Cond: (t2.id = 10)
Planning Time: 1.924 ms
Execution Time: 0.201 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 10
QUERYPLAN: 
Nested Loop  (cost=0.58..91.67 rows=10 width=30) (actual time=0.008..0.020 rows=9 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  ->  Index Scan using t1_id_idx on public.t1  (cost=0.29..8.47 rows=10 width=15) (actual time=0.003..0.005 rows=9 loops=1)
        Output: t1.id, t1.name
        Index Cond: (t1.id < 10)
  ->  Index Scan using t2_id_idx on public.t2  (cost=0.29..8.31 rows=1 width=15) (actual time=0.001..0.001 rows=1 loops=9)
        Output: t2.id, t2.name
        Index Cond: (t2.id = t1.id)
Planning Time: 2.441 ms
Execution Time: 0.043 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 1000
QUERYPLAN: 
Hash Join  (cost=58.26..1985.25 rows=1099 width=30) (actual time=0.305..15.611 rows=999 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Hash Cond: (t2.id = t1.id)
  ->  Seq Scan on public.t2  (cost=0.00..1541.00 rows=100000 width=15) (actual time=0.013..7.981 rows=100000 loops=1)
        Output: t2.id, t2.name
  ->  Hash  (cost=44.52..44.52 rows=1099 width=15) (actual time=0.285..0.286 rows=999 loops=1)
        Output: t1.id, t1.name
        Buckets: 2048  Batches: 1  Memory Usage: 62kB
        ->  Index Scan using t1_id_idx on public.t1  (cost=0.29..44.52 rows=1099 width=15) (actual time=0.016..0.191 rows=999 loops=1)
              Output: t1.id, t1.name
              Index Cond: (t1.id < 1000)
Planning Time: 2.225 ms
Execution Time: 15.697 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id
QUERYPLAN: 
Hash Join  (cost=2791.00..5707.00 rows=100000 width=30) (actual time=18.779..56.488 rows=100000 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Hash Cond: (t1.id = t2.id)
  ->  Seq Scan on public.t1  (cost=0.00..1541.00 rows=100000 width=15) (actual time=0.011..9.228 rows=100000 loops=1)
        Output: t1.id, t1.name
  ->  Hash  (cost=1541.00..1541.00 rows=100000 width=15) (actual time=18.562..18.564 rows=100000 loops=1)
        Output: t2.id, t2.name
        Buckets: 131072  Batches: 1  Memory Usage: 5614kB
        ->  Seq Scan on public.t2  (cost=0.00..1541.00 rows=100000 width=15) (actual time=0.009..8.054 rows=100000 loops=1)
              Output: t2.id, t2.name
Planning Time: 1.961 ms
Execution Time: 59.877 ms
----------------------------------------------------------------------------------------------------


----------------------------------------------------------------------------------------------------
TABLE SIZES:
T1 SIZE: 100, T2 SIZE: 100
----------------------------------------------------------------------------------------------------
INDEXES:
INDEX ON t1(id): False, INDEX ON t2(id): False
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id = 10
QUERYPLAN: 
Nested Loop  (cost=0.00..4279.74 rows=118336 width=72) (actual time=0.064..23.521 rows=1 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  ->  Seq Scan on public.t1  (cost=0.00..1399.84 rows=344 width=36) (actual time=0.034..12.597 rows=1 loops=1)
        Output: t1.id, t1.name
        Filter: (t1.id = 10)
        Rows Removed by Filter: 99999
  ->  Materialize  (cost=0.00..1401.56 rows=344 width=36) (actual time=0.028..10.922 rows=1 loops=1)
        Output: t2.id, t2.name
        ->  Seq Scan on public.t2  (cost=0.00..1399.84 rows=344 width=36) (actual time=0.025..10.918 rows=1 loops=1)
              Output: t2.id, t2.name
              Filter: (t2.id = 10)
              Rows Removed by Filter: 99999
Planning Time: 1.109 ms
Execution Time: 23.608 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 10
QUERYPLAN: 
Merge Join  (cost=11685.86..129986.72 rows=7867639 width=72) (actual time=34.820..34.827 rows=9 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Merge Cond: (t1.id = t2.id)
  ->  Sort  (cost=3058.31..3115.56 rows=22902 width=36) (actual time=9.490..9.491 rows=9 loops=1)
        Output: t1.id, t1.name
        Sort Key: t1.id
        Sort Method: quicksort  Memory: 25kB
        ->  Seq Scan on public.t1  (cost=0.00..1399.84 rows=22902 width=36) (actual time=0.027..9.470 rows=9 loops=1)
              Output: t1.id, t1.name
              Filter: (t1.id < 10)
              Rows Removed by Filter: 99991
  ->  Materialize  (cost=8627.55..8971.08 rows=68707 width=36) (actual time=25.325..25.327 rows=10 loops=1)
        Output: t2.id, t2.name
        ->  Sort  (cost=8627.55..8799.32 rows=68707 width=36) (actual time=25.321..25.322 rows=10 loops=1)
              Output: t2.id, t2.name
              Sort Key: t2.id
              Sort Method: external merge  Disk: 2456kB
              ->  Seq Scan on public.t2  (cost=0.00..1228.07 rows=68707 width=36) (actual time=0.028..9.194 rows=100000 loops=1)
                    Output: t2.id, t2.name
Planning Time: 1.167 ms
Execution Time: 36.482 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 1000
QUERYPLAN: 
Merge Join  (cost=11685.86..129986.72 rows=7867639 width=72) (actual time=43.724..44.673 rows=999 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Merge Cond: (t1.id = t2.id)
  ->  Sort  (cost=3058.31..3115.56 rows=22902 width=36) (actual time=8.452..8.516 rows=999 loops=1)
        Output: t1.id, t1.name
        Sort Key: t1.id
        Sort Method: quicksort  Memory: 64kB
        ->  Seq Scan on public.t1  (cost=0.00..1399.84 rows=22902 width=36) (actual time=0.023..8.386 rows=999 loops=1)
              Output: t1.id, t1.name
              Filter: (t1.id < 1000)
              Rows Removed by Filter: 99001
  ->  Materialize  (cost=8627.55..8971.08 rows=68707 width=36) (actual time=35.263..35.583 rows=1000 loops=1)
        Output: t2.id, t2.name
        ->  Sort  (cost=8627.55..8799.32 rows=68707 width=36) (actual time=35.250..35.389 rows=1000 loops=1)
              Output: t2.id, t2.name
              Sort Key: t2.id
              Sort Method: external merge  Disk: 2456kB
              ->  Seq Scan on public.t2  (cost=0.00..1228.07 rows=68707 width=36) (actual time=0.023..8.674 rows=100000 loops=1)
                    Output: t2.id, t2.name
Planning Time: 1.052 ms
Execution Time: 46.881 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id
QUERYPLAN: 
Merge Join  (cost=17255.10..371819.28 rows=23603259 width=72) (actual time=49.426..108.729 rows=100000 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Merge Cond: (t1.id = t2.id)
  ->  Sort  (cost=8627.55..8799.32 rows=68707 width=36) (actual time=24.500..32.944 rows=100000 loops=1)
        Output: t1.id, t1.name
        Sort Key: t1.id
        Sort Method: external merge  Disk: 2456kB
        ->  Seq Scan on public.t1  (cost=0.00..1228.07 rows=68707 width=36) (actual time=0.024..9.167 rows=100000 loops=1)
              Output: t1.id, t1.name
  ->  Materialize  (cost=8627.55..8971.08 rows=68707 width=36) (actual time=24.917..43.680 rows=100000 loops=1)
        Output: t2.id, t2.name
        ->  Sort  (cost=8627.55..8799.32 rows=68707 width=36) (actual time=24.912..33.557 rows=100000 loops=1)
              Output: t2.id, t2.name
              Sort Key: t2.id
              Sort Method: external merge  Disk: 2456kB
              ->  Seq Scan on public.t2  (cost=0.00..1228.07 rows=68707 width=36) (actual time=0.047..8.941 rows=100000 loops=1)
                    Output: t2.id, t2.name
Planning Time: 1.019 ms
Execution Time: 114.138 ms
----------------------------------------------------------------------------------------------------
INDEXES:
INDEX ON t1(id): True, INDEX ON t2(id): False
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id = 10
QUERYPLAN: 
Nested Loop  (cost=0.29..1799.32 rows=1 width=30) (actual time=0.056..7.997 rows=1 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  ->  Index Scan using t1_id_idx on public.t1  (cost=0.29..8.31 rows=1 width=15) (actual time=0.035..0.036 rows=1 loops=1)
        Output: t1.id, t1.name
        Index Cond: (t1.id = 10)
  ->  Seq Scan on public.t2  (cost=0.00..1791.00 rows=1 width=15) (actual time=0.019..7.958 rows=1 loops=1)
        Output: t2.id, t2.name
        Filter: (t2.id = 10)
        Rows Removed by Filter: 99999
Planning Time: 1.341 ms
Execution Time: 8.089 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 10
QUERYPLAN: 
Hash Join  (cost=8.56..1924.65 rows=9 width=30) (actual time=0.043..14.599 rows=9 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Hash Cond: (t2.id = t1.id)
  ->  Seq Scan on public.t2  (cost=0.00..1541.00 rows=100000 width=15) (actual time=0.019..8.226 rows=100000 loops=1)
        Output: t2.id, t2.name
  ->  Hash  (cost=8.45..8.45 rows=9 width=15) (actual time=0.012..0.013 rows=9 loops=1)
        Output: t1.id, t1.name
        Buckets: 1024  Batches: 1  Memory Usage: 9kB
        ->  Index Scan using t1_id_idx on public.t1  (cost=0.29..8.45 rows=9 width=15) (actual time=0.003..0.005 rows=9 loops=1)
              Output: t1.id, t1.name
              Index Cond: (t1.id < 10)
Planning Time: 1.644 ms
Execution Time: 14.624 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 1000
QUERYPLAN: 
Hash Join  (cost=52.16..1978.45 rows=1029 width=30) (actual time=0.446..14.742 rows=999 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Hash Cond: (t2.id = t1.id)
  ->  Seq Scan on public.t2  (cost=0.00..1541.00 rows=100000 width=15) (actual time=0.026..7.564 rows=100000 loops=1)
        Output: t2.id, t2.name
  ->  Hash  (cost=39.30..39.30 rows=1029 width=15) (actual time=0.403..0.404 rows=999 loops=1)
        Output: t1.id, t1.name
        Buckets: 2048  Batches: 1  Memory Usage: 62kB
        ->  Index Scan using t1_id_idx on public.t1  (cost=0.29..39.30 rows=1029 width=15) (actual time=0.013..0.289 rows=999 loops=1)
              Output: t1.id, t1.name
              Index Cond: (t1.id < 1000)
Planning Time: 3.093 ms
Execution Time: 14.790 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id
QUERYPLAN: 
Hash Join  (cost=2791.00..5707.00 rows=100000 width=30) (actual time=21.323..60.645 rows=100000 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Hash Cond: (t1.id = t2.id)
  ->  Seq Scan on public.t1  (cost=0.00..1541.00 rows=100000 width=15) (actual time=0.019..9.337 rows=100000 loops=1)
        Output: t1.id, t1.name
  ->  Hash  (cost=1541.00..1541.00 rows=100000 width=15) (actual time=20.786..20.787 rows=100000 loops=1)
        Output: t2.id, t2.name
        Buckets: 131072  Batches: 1  Memory Usage: 5614kB
        ->  Seq Scan on public.t2  (cost=0.00..1541.00 rows=100000 width=15) (actual time=0.043..8.785 rows=100000 loops=1)
              Output: t2.id, t2.name
Planning Time: 2.026 ms
Execution Time: 64.020 ms
----------------------------------------------------------------------------------------------------
INDEXES:
INDEX ON t1(id): True, INDEX ON t2(id): True
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id = 10
QUERYPLAN: 
Nested Loop  (cost=0.58..16.63 rows=1 width=30) (actual time=0.081..0.082 rows=1 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  ->  Index Scan using t1_id_idx on public.t1  (cost=0.29..8.31 rows=1 width=15) (actual time=0.037..0.037 rows=1 loops=1)
        Output: t1.id, t1.name
        Index Cond: (t1.id = 10)
  ->  Index Scan using t2_id_idx on public.t2  (cost=0.29..8.31 rows=1 width=15) (actual time=0.041..0.042 rows=1 loops=1)
        Output: t2.id, t2.name
        Index Cond: (t2.id = 10)
Planning Time: 1.878 ms
Execution Time: 0.173 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 10
QUERYPLAN: 
Nested Loop  (cost=0.58..83.33 rows=9 width=30) (actual time=0.011..0.024 rows=9 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  ->  Index Scan using t1_id_idx on public.t1  (cost=0.29..8.45 rows=9 width=15) (actual time=0.003..0.004 rows=9 loops=1)
        Output: t1.id, t1.name
        Index Cond: (t1.id < 10)
  ->  Index Scan using t2_id_idx on public.t2  (cost=0.29..8.31 rows=1 width=15) (actual time=0.001..0.001 rows=1 loops=9)
        Output: t2.id, t2.name
        Index Cond: (t2.id = t1.id)
Planning Time: 2.188 ms
Execution Time: 0.044 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 1000
QUERYPLAN: 
Hash Join  (cost=50.18..1975.81 rows=963 width=30) (actual time=0.388..16.804 rows=999 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Hash Cond: (t2.id = t1.id)
  ->  Seq Scan on public.t2  (cost=0.00..1541.00 rows=100000 width=15) (actual time=0.018..8.353 rows=100000 loops=1)
        Output: t2.id, t2.name
  ->  Hash  (cost=38.14..38.14 rows=963 width=15) (actual time=0.359..0.360 rows=999 loops=1)
        Output: t1.id, t1.name
        Buckets: 1024  Batches: 1  Memory Usage: 54kB
        ->  Index Scan using t1_id_idx on public.t1  (cost=0.29..38.14 rows=963 width=15) (actual time=0.032..0.253 rows=999 loops=1)
              Output: t1.id, t1.name
              Index Cond: (t1.id < 1000)
Planning Time: 2.604 ms
Execution Time: 16.852 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id
QUERYPLAN: 
Hash Join  (cost=2791.00..5707.00 rows=100000 width=30) (actual time=22.260..60.887 rows=100000 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Hash Cond: (t1.id = t2.id)
  ->  Seq Scan on public.t1  (cost=0.00..1541.00 rows=100000 width=15) (actual time=0.016..9.644 rows=100000 loops=1)
        Output: t1.id, t1.name
  ->  Hash  (cost=1541.00..1541.00 rows=100000 width=15) (actual time=22.005..22.006 rows=100000 loops=1)
        Output: t2.id, t2.name
        Buckets: 131072  Batches: 1  Memory Usage: 5614kB
        ->  Seq Scan on public.t2  (cost=0.00..1541.00 rows=100000 width=15) (actual time=0.010..9.103 rows=100000 loops=1)
              Output: t2.id, t2.name
Planning Time: 2.414 ms
Execution Time: 64.256 ms
----------------------------------------------------------------------------------------------------


----------------------------------------------------------------------------------------------------
TABLE SIZES:
T1 SIZE: 100, T2 SIZE: 10000
----------------------------------------------------------------------------------------------------
INDEXES:
INDEX ON t1(id): False, INDEX ON t2(id): False
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id = 10
QUERYPLAN: 
Nested Loop  (cost=0.00..4279.74 rows=118336 width=72) (actual time=0.059..23.157 rows=1 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  ->  Seq Scan on public.t1  (cost=0.00..1399.84 rows=344 width=36) (actual time=0.028..12.159 rows=1 loops=1)
        Output: t1.id, t1.name
        Filter: (t1.id = 10)
        Rows Removed by Filter: 99999
  ->  Materialize  (cost=0.00..1401.56 rows=344 width=36) (actual time=0.029..10.996 rows=1 loops=1)
        Output: t2.id, t2.name
        ->  Seq Scan on public.t2  (cost=0.00..1399.84 rows=344 width=36) (actual time=0.025..10.990 rows=1 loops=1)
              Output: t2.id, t2.name
              Filter: (t2.id = 10)
              Rows Removed by Filter: 99999
Planning Time: 0.916 ms
Execution Time: 23.246 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 10
QUERYPLAN: 
Merge Join  (cost=11685.86..129986.72 rows=7867639 width=72) (actual time=32.410..32.417 rows=9 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Merge Cond: (t1.id = t2.id)
  ->  Sort  (cost=3058.31..3115.56 rows=22902 width=36) (actual time=8.244..8.245 rows=9 loops=1)
        Output: t1.id, t1.name
        Sort Key: t1.id
        Sort Method: quicksort  Memory: 25kB
        ->  Seq Scan on public.t1  (cost=0.00..1399.84 rows=22902 width=36) (actual time=0.018..8.226 rows=9 loops=1)
              Output: t1.id, t1.name
              Filter: (t1.id < 10)
              Rows Removed by Filter: 99991
  ->  Materialize  (cost=8627.55..8971.08 rows=68707 width=36) (actual time=24.161..24.163 rows=10 loops=1)
        Output: t2.id, t2.name
        ->  Sort  (cost=8627.55..8799.32 rows=68707 width=36) (actual time=24.155..24.156 rows=10 loops=1)
              Output: t2.id, t2.name
              Sort Key: t2.id
              Sort Method: external merge  Disk: 2456kB
              ->  Seq Scan on public.t2  (cost=0.00..1228.07 rows=68707 width=36) (actual time=0.024..8.293 rows=100000 loops=1)
                    Output: t2.id, t2.name
Planning Time: 1.121 ms
Execution Time: 34.067 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 1000
QUERYPLAN: 
Merge Join  (cost=11685.86..129986.72 rows=7867639 width=72) (actual time=34.968..35.480 rows=999 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Merge Cond: (t1.id = t2.id)
  ->  Sort  (cost=3058.31..3115.56 rows=22902 width=36) (actual time=9.890..9.931 rows=999 loops=1)
        Output: t1.id, t1.name
        Sort Key: t1.id
        Sort Method: quicksort  Memory: 64kB
        ->  Seq Scan on public.t1  (cost=0.00..1399.84 rows=22902 width=36) (actual time=0.021..9.806 rows=999 loops=1)
              Output: t1.id, t1.name
              Filter: (t1.id < 1000)
              Rows Removed by Filter: 99001
  ->  Materialize  (cost=8627.55..8971.08 rows=68707 width=36) (actual time=25.073..25.250 rows=1000 loops=1)
        Output: t2.id, t2.name
        ->  Sort  (cost=8627.55..8799.32 rows=68707 width=36) (actual time=25.055..25.137 rows=1000 loops=1)
              Output: t2.id, t2.name
              Sort Key: t2.id
              Sort Method: external merge  Disk: 2456kB
              ->  Seq Scan on public.t2  (cost=0.00..1228.07 rows=68707 width=36) (actual time=0.035..8.688 rows=100000 loops=1)
                    Output: t2.id, t2.name
Planning Time: 1.185 ms
Execution Time: 37.312 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id
QUERYPLAN: 
Merge Join  (cost=17255.10..371819.28 rows=23603259 width=72) (actual time=43.602..94.444 rows=100000 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Merge Cond: (t1.id = t2.id)
  ->  Sort  (cost=8627.55..8799.32 rows=68707 width=36) (actual time=23.251..30.407 rows=100000 loops=1)
        Output: t1.id, t1.name
        Sort Key: t1.id
        Sort Method: external merge  Disk: 2456kB
        ->  Seq Scan on public.t1  (cost=0.00..1228.07 rows=68707 width=36) (actual time=0.020..9.065 rows=100000 loops=1)
              Output: t1.id, t1.name
  ->  Materialize  (cost=8627.55..8971.08 rows=68707 width=36) (actual time=20.344..36.355 rows=100000 loops=1)
        Output: t2.id, t2.name
        ->  Sort  (cost=8627.55..8799.32 rows=68707 width=36) (actual time=20.337..27.698 rows=100000 loops=1)
              Output: t2.id, t2.name
              Sort Key: t2.id
              Sort Method: external merge  Disk: 2456kB
              ->  Seq Scan on public.t2  (cost=0.00..1228.07 rows=68707 width=36) (actual time=0.028..7.035 rows=100000 loops=1)
                    Output: t2.id, t2.name
Planning Time: 1.642 ms
Execution Time: 99.855 ms
----------------------------------------------------------------------------------------------------
INDEXES:
INDEX ON t1(id): True, INDEX ON t2(id): False
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id = 10
QUERYPLAN: 
Nested Loop  (cost=0.29..1799.32 rows=1 width=30) (actual time=0.059..7.982 rows=1 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  ->  Index Scan using t1_id_idx on public.t1  (cost=0.29..8.31 rows=1 width=15) (actual time=0.037..0.039 rows=1 loops=1)
        Output: t1.id, t1.name
        Index Cond: (t1.id = 10)
  ->  Seq Scan on public.t2  (cost=0.00..1791.00 rows=1 width=15) (actual time=0.020..7.941 rows=1 loops=1)
        Output: t2.id, t2.name
        Filter: (t2.id = 10)
        Rows Removed by Filter: 99999
Planning Time: 1.652 ms
Execution Time: 8.071 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 10
QUERYPLAN: 
Hash Join  (cost=8.56..1924.65 rows=9 width=30) (actual time=0.045..14.088 rows=9 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Hash Cond: (t2.id = t1.id)
  ->  Seq Scan on public.t2  (cost=0.00..1541.00 rows=100000 width=15) (actual time=0.022..7.923 rows=100000 loops=1)
        Output: t2.id, t2.name
  ->  Hash  (cost=8.45..8.45 rows=9 width=15) (actual time=0.013..0.013 rows=9 loops=1)
        Output: t1.id, t1.name
        Buckets: 1024  Batches: 1  Memory Usage: 9kB
        ->  Index Scan using t1_id_idx on public.t1  (cost=0.29..8.45 rows=9 width=15) (actual time=0.003..0.005 rows=9 loops=1)
              Output: t1.id, t1.name
              Index Cond: (t1.id < 10)
Planning Time: 2.225 ms
Execution Time: 14.118 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 1000
QUERYPLAN: 
Hash Join  (cost=52.25..1978.57 rows=1032 width=30) (actual time=0.345..14.780 rows=999 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Hash Cond: (t2.id = t1.id)
  ->  Seq Scan on public.t2  (cost=0.00..1541.00 rows=100000 width=15) (actual time=0.024..7.649 rows=100000 loops=1)
        Output: t2.id, t2.name
  ->  Hash  (cost=39.35..39.35 rows=1032 width=15) (actual time=0.312..0.312 rows=999 loops=1)
        Output: t1.id, t1.name
        Buckets: 2048  Batches: 1  Memory Usage: 62kB
        ->  Index Scan using t1_id_idx on public.t1  (cost=0.29..39.35 rows=1032 width=15) (actual time=0.018..0.213 rows=999 loops=1)
              Output: t1.id, t1.name
              Index Cond: (t1.id < 1000)
Planning Time: 2.369 ms
Execution Time: 14.830 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id
QUERYPLAN: 
Hash Join  (cost=2791.00..5707.00 rows=100000 width=30) (actual time=22.277..61.076 rows=100000 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Hash Cond: (t1.id = t2.id)
  ->  Seq Scan on public.t1  (cost=0.00..1541.00 rows=100000 width=15) (actual time=0.012..9.542 rows=100000 loops=1)
        Output: t1.id, t1.name
  ->  Hash  (cost=1541.00..1541.00 rows=100000 width=15) (actual time=22.016..22.017 rows=100000 loops=1)
        Output: t2.id, t2.name
        Buckets: 131072  Batches: 1  Memory Usage: 5614kB
        ->  Seq Scan on public.t2  (cost=0.00..1541.00 rows=100000 width=15) (actual time=0.019..8.994 rows=100000 loops=1)
              Output: t2.id, t2.name
Planning Time: 1.773 ms
Execution Time: 64.600 ms
----------------------------------------------------------------------------------------------------
INDEXES:
INDEX ON t1(id): True, INDEX ON t2(id): True
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id = 10
QUERYPLAN: 
Nested Loop  (cost=0.58..16.63 rows=1 width=30) (actual time=0.084..0.085 rows=1 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  ->  Index Scan using t1_id_idx on public.t1  (cost=0.29..8.31 rows=1 width=15) (actual time=0.040..0.040 rows=1 loops=1)
        Output: t1.id, t1.name
        Index Cond: (t1.id = 10)
  ->  Index Scan using t2_id_idx on public.t2  (cost=0.29..8.31 rows=1 width=15) (actual time=0.042..0.042 rows=1 loops=1)
        Output: t2.id, t2.name
        Index Cond: (t2.id = 10)
Planning Time: 1.913 ms
Execution Time: 0.207 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 10
QUERYPLAN: 
Nested Loop  (cost=0.58..91.67 rows=10 width=30) (actual time=0.014..0.027 rows=9 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  ->  Index Scan using t1_id_idx on public.t1  (cost=0.29..8.47 rows=10 width=15) (actual time=0.003..0.005 rows=9 loops=1)
        Output: t1.id, t1.name
        Index Cond: (t1.id < 10)
  ->  Index Scan using t2_id_idx on public.t2  (cost=0.29..8.31 rows=1 width=15) (actual time=0.002..0.002 rows=1 loops=9)
        Output: t2.id, t2.name
        Index Cond: (t2.id = t1.id)
Planning Time: 2.606 ms
Execution Time: 0.051 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 1000
QUERYPLAN: 
Hash Join  (cost=58.11..1985.05 rows=1094 width=30) (actual time=0.296..15.961 rows=999 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Hash Cond: (t2.id = t1.id)
  ->  Seq Scan on public.t2  (cost=0.00..1541.00 rows=100000 width=15) (actual time=0.011..8.306 rows=100000 loops=1)
        Output: t2.id, t2.name
  ->  Hash  (cost=44.44..44.44 rows=1094 width=15) (actual time=0.276..0.277 rows=999 loops=1)
        Output: t1.id, t1.name
        Buckets: 2048  Batches: 1  Memory Usage: 62kB
        ->  Index Scan using t1_id_idx on public.t1  (cost=0.29..44.44 rows=1094 width=15) (actual time=0.017..0.181 rows=999 loops=1)
              Output: t1.id, t1.name
              Index Cond: (t1.id < 1000)
Planning Time: 2.017 ms
Execution Time: 16.020 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id
QUERYPLAN: 
Hash Join  (cost=2791.00..5707.00 rows=100000 width=30) (actual time=20.500..51.263 rows=100000 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Hash Cond: (t1.id = t2.id)
  ->  Seq Scan on public.t1  (cost=0.00..1541.00 rows=100000 width=15) (actual time=0.011..7.492 rows=100000 loops=1)
        Output: t1.id, t1.name
  ->  Hash  (cost=1541.00..1541.00 rows=100000 width=15) (actual time=20.262..20.263 rows=100000 loops=1)
        Output: t2.id, t2.name
        Buckets: 131072  Batches: 1  Memory Usage: 5614kB
        ->  Seq Scan on public.t2  (cost=0.00..1541.00 rows=100000 width=15) (actual time=0.010..8.403 rows=100000 loops=1)
              Output: t2.id, t2.name
Planning Time: 1.995 ms
Execution Time: 54.034 ms
----------------------------------------------------------------------------------------------------


----------------------------------------------------------------------------------------------------
TABLE SIZES:
T1 SIZE: 100, T2 SIZE: 1000000
----------------------------------------------------------------------------------------------------
INDEXES:
INDEX ON t1(id): False, INDEX ON t2(id): False
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id = 10
QUERYPLAN: 
Nested Loop  (cost=1000.00..26487.74 rows=1180952 width=72) (actual time=0.532..92.982 rows=1 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  ->  Gather  (cost=1000.00..10325.14 rows=3433 width=36) (actual time=0.500..73.975 rows=1 loops=1)
        Output: t2.id, t2.name
        Workers Planned: 2
        Workers Launched: 2
        ->  Parallel Seq Scan on public.t2  (cost=0.00..8981.84 rows=1430 width=36) (actual time=25.545..48.018 rows=0 loops=3)
              Output: t2.id, t2.name
              Filter: (t2.id = 10)
              Rows Removed by Filter: 333333
              Worker 0:  actual time=37.233..37.234 rows=0 loops=1
              Worker 1:  actual time=39.358..39.358 rows=0 loops=1
  ->  Materialize  (cost=0.00..1401.56 rows=344 width=36) (actual time=0.031..19.003 rows=1 loops=1)
        Output: t1.id, t1.name
        ->  Seq Scan on public.t1  (cost=0.00..1399.84 rows=344 width=36) (actual time=0.024..18.995 rows=1 loops=1)
              Output: t1.id, t1.name
              Filter: (t1.id = 10)
              Rows Removed by Filter: 99999
Planning Time: 1.387 ms
Execution Time: 93.079 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 10
QUERYPLAN: 
Merge Join  (cost=100662.78..1281766.92 rows=78618215 width=72) (actual time=329.730..329.738 rows=9 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Merge Cond: (t1.id = t2.id)
  ->  Sort  (cost=3058.31..3115.56 rows=22902 width=36) (actual time=8.681..8.682 rows=9 loops=1)
        Output: t1.id, t1.name
        Sort Key: t1.id
        Sort Method: quicksort  Memory: 25kB
        ->  Seq Scan on public.t1  (cost=0.00..1399.84 rows=22902 width=36) (actual time=0.023..8.660 rows=9 loops=1)
              Output: t1.id, t1.name
              Filter: (t1.id < 10)
              Rows Removed by Filter: 99991
  ->  Materialize  (cost=97604.48..101037.29 rows=686562 width=36) (actual time=321.044..321.047 rows=10 loops=1)
        Output: t2.id, t2.name
        ->  Sort  (cost=97604.48..99320.88 rows=686562 width=36) (actual time=321.038..321.039 rows=10 loops=1)
              Output: t2.id, t2.name
              Sort Key: t2.id
              Sort Method: external merge  Disk: 24464kB
              ->  Seq Scan on public.t2  (cost=0.00..12271.62 rows=686562 width=36) (actual time=0.031..86.701 rows=1000000 loops=1)
                    Output: t2.id, t2.name
Planning Time: 1.558 ms
Execution Time: 333.959 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 1000
QUERYPLAN: 
Merge Join  (cost=100662.78..1281766.92 rows=78618215 width=72) (actual time=331.101..331.612 rows=999 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Merge Cond: (t1.id = t2.id)
  ->  Sort  (cost=3058.31..3115.56 rows=22902 width=36) (actual time=8.979..9.020 rows=999 loops=1)
        Output: t1.id, t1.name
        Sort Key: t1.id
        Sort Method: quicksort  Memory: 64kB
        ->  Seq Scan on public.t1  (cost=0.00..1399.84 rows=22902 width=36) (actual time=0.018..8.902 rows=999 loops=1)
              Output: t1.id, t1.name
              Filter: (t1.id < 1000)
              Rows Removed by Filter: 99001
  ->  Materialize  (cost=97604.48..101037.29 rows=686562 width=36) (actual time=322.116..322.293 rows=1000 loops=1)
        Output: t2.id, t2.name
        ->  Sort  (cost=97604.48..99320.88 rows=686562 width=36) (actual time=322.105..322.189 rows=1000 loops=1)
              Output: t2.id, t2.name
              Sort Key: t2.id
              Sort Method: external merge  Disk: 24464kB
              ->  Seq Scan on public.t2  (cost=0.00..12271.62 rows=686562 width=36) (actual time=0.039..85.464 rows=1000000 loops=1)
                    Output: t2.id, t2.name
Planning Time: 1.111 ms
Execution Time: 335.665 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id
QUERYPLAN: 
Merge Join  (cost=106232.03..3646163.12 rows=235858077 width=72) (actual time=342.489..402.080 rows=100000 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Merge Cond: (t1.id = t2.id)
  ->  Sort  (cost=8627.55..8799.32 rows=68707 width=36) (actual time=24.331..32.514 rows=100000 loops=1)
        Output: t1.id, t1.name
        Sort Key: t1.id
        Sort Method: external merge  Disk: 2456kB
        ->  Seq Scan on public.t1  (cost=0.00..1228.07 rows=68707 width=36) (actual time=0.018..8.575 rows=100000 loops=1)
              Output: t1.id, t1.name
  ->  Materialize  (cost=97604.48..101037.29 rows=686562 width=36) (actual time=318.151..337.743 rows=100001 loops=1)
        Output: t2.id, t2.name
        ->  Sort  (cost=97604.48..99320.88 rows=686562 width=36) (actual time=318.142..327.897 rows=100001 loops=1)
              Output: t2.id, t2.name
              Sort Key: t2.id
              Sort Method: external merge  Disk: 24464kB
              ->  Seq Scan on public.t2  (cost=0.00..12271.62 rows=686562 width=36) (actual time=0.034..85.842 rows=1000000 loops=1)
                    Output: t2.id, t2.name
Planning Time: 1.095 ms
Execution Time: 409.948 ms
----------------------------------------------------------------------------------------------------
INDEXES:
INDEX ON t1(id): True, INDEX ON t2(id): False
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id = 10
QUERYPLAN: 
Nested Loop  (cost=1000.29..11622.75 rows=1 width=30) (actual time=1.713..257.733 rows=1 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  ->  Index Scan using t1_id_idx on public.t1  (cost=0.29..8.31 rows=1 width=15) (actual time=0.161..0.167 rows=1 loops=1)
        Output: t1.id, t1.name
        Index Cond: (t1.id = 10)
  ->  Gather  (cost=1000.00..11614.43 rows=1 width=15) (actual time=1.545..257.555 rows=1 loops=1)
        Output: t2.id, t2.name
        Workers Planned: 2
        Workers Launched: 2
        ->  Parallel Seq Scan on public.t2  (cost=0.00..10614.33 rows=1 width=15) (actual time=47.377..126.899 rows=0 loops=3)
              Output: t2.id, t2.name
              Filter: (t2.id = 10)
              Rows Removed by Filter: 333333
              Worker 0:  actual time=71.611..71.612 rows=0 loops=1
              Worker 1:  actual time=70.436..70.437 rows=0 loops=1
Planning Time: 5.698 ms
Execution Time: 258.108 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 10
QUERYPLAN: 
Gather  (cost=1008.56..12144.67 rows=9 width=30) (actual time=1.687..324.779 rows=9 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Workers Planned: 2
  Workers Launched: 2
  ->  Hash Join  (cost=8.56..11143.77 rows=4 width=30) (actual time=96.513..198.563 rows=3 loops=3)
        Output: t1.id, t1.name, t2.id, t2.name
        Hash Cond: (t2.id = t1.id)
        Worker 0:  actual time=141.188..141.192 rows=0 loops=1
        Worker 1:  actual time=148.130..148.134 rows=0 loops=1
        ->  Parallel Seq Scan on public.t2  (cost=0.00..9572.67 rows=416667 width=15) (actual time=0.061..108.577 rows=333333 loops=3)
              Output: t2.id, t2.name
              Worker 0:  actual time=0.059..77.985 rows=250675 loops=1
              Worker 1:  actual time=0.053..82.446 rows=254190 loops=1
        ->  Hash  (cost=8.45..8.45 rows=9 width=15) (actual time=0.144..0.145 rows=9 loops=3)
              Output: t1.id, t1.name
              Buckets: 1024  Batches: 1  Memory Usage: 9kB
              Worker 0:  actual time=0.157..0.158 rows=9 loops=1
              Worker 1:  actual time=0.184..0.185 rows=9 loops=1
              ->  Index Scan using t1_id_idx on public.t1  (cost=0.29..8.45 rows=9 width=15) (actual time=0.106..0.112 rows=9 loops=3)
                    Output: t1.id, t1.name
                    Index Cond: (t1.id < 10)
                    Worker 0:  actual time=0.118..0.124 rows=9 loops=1
                    Worker 1:  actual time=0.148..0.154 rows=9 loops=1
Planning Time: 6.584 ms
Execution Time: 324.953 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 1000
QUERYPLAN: 
Gather  (cost=1050.15..12285.53 rows=962 width=30) (actual time=3.090..341.389 rows=999 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Workers Planned: 2
  Workers Launched: 2
  ->  Hash Join  (cost=50.15..11189.33 rows=401 width=30) (actual time=111.035..217.822 rows=333 loops=3)
        Output: t1.id, t1.name, t2.id, t2.name
        Hash Cond: (t2.id = t1.id)
        Worker 0:  actual time=172.436..172.440 rows=0 loops=1
        Worker 1:  actual time=159.283..159.287 rows=0 loops=1
        ->  Parallel Seq Scan on public.t2  (cost=0.00..9572.67 rows=416667 width=15) (actual time=0.058..107.910 rows=333333 loops=3)
              Output: t2.id, t2.name
              Worker 0:  actual time=0.051..86.038 rows=274540 loops=1
              Worker 1:  actual time=0.051..79.930 rows=255375 loops=1
        ->  Hash  (cost=38.13..38.13 rows=962 width=15) (actual time=1.195..1.197 rows=999 loops=3)
              Output: t1.id, t1.name
              Buckets: 1024  Batches: 1  Memory Usage: 54kB
              Worker 0:  actual time=1.174..1.175 rows=999 loops=1
              Worker 1:  actual time=1.155..1.156 rows=999 loops=1
              ->  Index Scan using t1_id_idx on public.t1  (cost=0.29..38.13 rows=962 width=15) (actual time=0.127..0.772 rows=999 loops=3)
                    Output: t1.id, t1.name
                    Index Cond: (t1.id < 1000)
                    Worker 0:  actual time=0.170..0.761 rows=999 loops=1
                    Worker 1:  actual time=0.138..0.720 rows=999 loops=1
Planning Time: 6.624 ms
Execution Time: 341.692 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id
QUERYPLAN: 
Hash Join  (cost=2791.00..22947.00 rows=100000 width=30) (actual time=74.470..548.412 rows=100000 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Hash Cond: (t2.id = t1.id)
  ->  Seq Scan on public.t2  (cost=0.00..15406.00 rows=1000000 width=15) (actual time=0.088..175.787 rows=1000000 loops=1)
        Output: t2.id, t2.name
  ->  Hash  (cost=1541.00..1541.00 rows=100000 width=15) (actual time=73.486..73.486 rows=100000 loops=1)
        Output: t1.id, t1.name
        Buckets: 131072  Batches: 1  Memory Usage: 5614kB
        ->  Seq Scan on public.t1  (cost=0.00..1541.00 rows=100000 width=15) (actual time=0.040..32.832 rows=100000 loops=1)
              Output: t1.id, t1.name
Planning Time: 6.480 ms
Execution Time: 558.779 ms
----------------------------------------------------------------------------------------------------
INDEXES:
INDEX ON t1(id): True, INDEX ON t2(id): True
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id = 10
QUERYPLAN: 
Nested Loop  (cost=0.72..16.76 rows=1 width=30) (actual time=0.132..0.133 rows=1 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  ->  Index Scan using t1_id_idx on public.t1  (cost=0.29..8.31 rows=1 width=15) (actual time=0.059..0.060 rows=1 loops=1)
        Output: t1.id, t1.name
        Index Cond: (t1.id = 10)
  ->  Index Scan using t2_id_idx on public.t2  (cost=0.42..8.44 rows=1 width=15) (actual time=0.069..0.069 rows=1 loops=1)
        Output: t2.id, t2.name
        Index Cond: (t2.id = 10)
Planning Time: 2.601 ms
Execution Time: 0.258 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 10
QUERYPLAN: 
Nested Loop  (cost=0.72..84.52 rows=9 width=30) (actual time=0.012..0.030 rows=9 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  ->  Index Scan using t1_id_idx on public.t1  (cost=0.29..8.45 rows=9 width=15) (actual time=0.005..0.006 rows=9 loops=1)
        Output: t1.id, t1.name
        Index Cond: (t1.id < 10)
  ->  Index Scan using t2_id_idx on public.t2  (cost=0.42..8.44 rows=1 width=15) (actual time=0.002..0.002 rows=1 loops=9)
        Output: t2.id, t2.name
        Index Cond: (t2.id = t1.id)
Planning Time: 2.861 ms
Execution Time: 0.059 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 1000
QUERYPLAN: 
Merge Join  (cost=0.72..3430.58 rows=1018 width=30) (actual time=0.018..0.727 rows=999 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Merge Cond: (t1.id = t2.id)
  ->  Index Scan using t1_id_idx on public.t1  (cost=0.29..39.11 rows=1018 width=15) (actual time=0.009..0.210 rows=999 loops=1)
        Output: t1.id, t1.name
        Index Cond: (t1.id < 1000)
  ->  Index Scan using t2_id_idx on public.t2  (cost=0.42..31389.42 rows=1000000 width=15) (actual time=0.005..0.221 rows=1000 loops=1)
        Output: t2.id, t2.name
Planning Time: 2.766 ms
Execution Time: 0.801 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id
QUERYPLAN: 
Merge Join  (cost=1.33..7777.04 rows=100000 width=30) (actual time=0.015..65.841 rows=100000 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Merge Cond: (t1.id = t2.id)
  ->  Index Scan using t1_id_idx on public.t1  (cost=0.29..3148.29 rows=100000 width=15) (actual time=0.006..18.708 rows=100000 loops=1)
        Output: t1.id, t1.name
  ->  Index Scan using t2_id_idx on public.t2  (cost=0.42..31389.42 rows=1000000 width=15) (actual time=0.005..18.986 rows=100001 loops=1)
        Output: t2.id, t2.name
Planning Time: 2.653 ms
Execution Time: 68.602 ms
----------------------------------------------------------------------------------------------------


----------------------------------------------------------------------------------------------------
TABLE SIZES:
T1 SIZE: 100, T2 SIZE: 10000000
----------------------------------------------------------------------------------------------------
INDEXES:
INDEX ON t1(id): False, INDEX ON t2(id): False
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id = 10
QUERYPLAN: 
Nested Loop  (cost=1000.00..96376.88 rows=34325 width=51) (actual time=0.666..665.278 rows=1 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  ->  Seq Scan on public.t1  (cost=0.00..1791.00 rows=1 width=15) (actual time=0.050..20.484 rows=1 loops=1)
        Output: t1.id, t1.name
        Filter: (t1.id = 10)
        Rows Removed by Filter: 99999
  ->  Gather  (cost=1000.00..94242.63 rows=34325 width=36) (actual time=0.611..644.787 rows=1 loops=1)
        Output: t2.id, t2.name
        Workers Planned: 2
        Workers Launched: 2
        ->  Parallel Seq Scan on public.t2  (cost=0.00..89810.13 rows=14302 width=36) (actual time=392.164..606.825 rows=0 loops=3)
              Output: t2.id, t2.name
              Filter: (t2.id = 10)
              Rows Removed by Filter: 3333333
              Worker 0:  actual time=588.028..588.029 rows=0 loops=1
              Worker 1:  actual time=588.410..588.410 rows=0 loops=1
Planning Time: 4.225 ms
Execution Time: 665.382 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 10
QUERYPLAN: 
Gather  (cost=2791.12..96248.23 rows=686 width=51) (actual time=17.125..655.328 rows=9 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Workers Planned: 2
  Workers Launched: 2
  ->  Hash Join  (cost=1791.12..95179.63 rows=286 width=51) (actual time=403.417..613.035 rows=3 loops=3)
        Output: t1.id, t1.name, t2.id, t2.name
        Hash Cond: (t2.id = t1.id)
        Worker 0:  actual time=598.661..598.663 rows=0 loops=1
        Worker 1:  actual time=594.995..594.997 rows=0 loops=1
        ->  Parallel Seq Scan on public.t2  (cost=0.00..82659.10 rows=2860410 width=36) (actual time=0.332..349.548 rows=3333333 loops=3)
              Output: t2.id, t2.name
              Worker 0:  actual time=0.511..339.959 rows=3276720 loops=1
              Worker 1:  actual time=0.438..343.108 rows=3284500 loops=1
        ->  Hash  (cost=1791.00..1791.00 rows=10 width=15) (actual time=11.684..11.684 rows=9 loops=3)
              Output: t1.id, t1.name
              Buckets: 1024  Batches: 1  Memory Usage: 9kB
              Worker 0:  actual time=9.345..9.345 rows=9 loops=1
              Worker 1:  actual time=9.187..9.188 rows=9 loops=1
              ->  Seq Scan on public.t1  (cost=0.00..1791.00 rows=10 width=15) (actual time=0.289..11.672 rows=9 loops=3)
                    Output: t1.id, t1.name
                    Filter: (t1.id < 10)
                    Rows Removed by Filter: 99991
                    Worker 0:  actual time=0.439..9.332 rows=9 loops=1
                    Worker 1:  actual time=0.403..9.175 rows=9 loops=1
Planning Time: 2.958 ms
Execution Time: 655.447 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 1000
QUERYPLAN: 
Gather  (cost=2803.39..103275.70 rows=68032 width=51) (actual time=18.264..711.531 rows=999 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Workers Planned: 2
  Workers Launched: 2
  ->  Hash Join  (cost=1803.39..95472.50 rows=28347 width=51) (actual time=439.029..666.930 rows=333 loops=3)
        Output: t1.id, t1.name, t2.id, t2.name
        Hash Cond: (t2.id = t1.id)
        Worker 0:  actual time=649.878..649.880 rows=0 loops=1
        Worker 1:  actual time=649.474..649.477 rows=0 loops=1
        ->  Parallel Seq Scan on public.t2  (cost=0.00..82659.10 rows=2860410 width=36) (actual time=0.589..343.871 rows=3333333 loops=3)
              Output: t2.id, t2.name
              Worker 0:  actual time=0.397..330.668 rows=3217335 loops=1
              Worker 1:  actual time=0.363..336.950 rows=3255260 loops=1
        ->  Hash  (cost=1791.00..1791.00 rows=991 width=15) (actual time=11.757..11.758 rows=999 loops=3)
              Output: t1.id, t1.name
              Buckets: 1024  Batches: 1  Memory Usage: 54kB
              Worker 0:  actual time=9.366..9.367 rows=999 loops=1
              Worker 1:  actual time=9.206..9.207 rows=999 loops=1
              ->  Seq Scan on public.t1  (cost=0.00..1791.00 rows=991 width=15) (actual time=0.231..11.649 rows=999 loops=3)
                    Output: t1.id, t1.name
                    Filter: (t1.id < 1000)
                    Rows Removed by Filter: 99001
                    Worker 0:  actual time=0.363..9.261 rows=999 loops=1
                    Worker 1:  actual time=0.292..9.100 rows=999 loops=1
Planning Time: 1.506 ms
Execution Time: 711.800 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id
QUERYPLAN: 
Hash Join  (cost=2791.00..219889.39 rows=6864985 width=51) (actual time=21.507..2407.332 rows=100000 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Hash Cond: (t2.id = t1.id)
  ->  Seq Scan on public.t2  (cost=0.00..122704.85 rows=6864985 width=36) (actual time=0.931..989.918 rows=10000000 loops=1)
        Output: t2.id, t2.name
  ->  Hash  (cost=1541.00..1541.00 rows=100000 width=15) (actual time=20.279..20.280 rows=100000 loops=1)
        Output: t1.id, t1.name
        Buckets: 131072  Batches: 1  Memory Usage: 5614kB
        ->  Seq Scan on public.t1  (cost=0.00..1541.00 rows=100000 width=15) (actual time=0.020..7.117 rows=100000 loops=1)
              Output: t1.id, t1.name
Planning Time: 1.405 ms
Execution Time: 2411.048 ms
----------------------------------------------------------------------------------------------------
INDEXES:
INDEX ON t1(id): True, INDEX ON t2(id): False
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id = 10
QUERYPLAN: 
Nested Loop  (cost=1000.29..107146.02 rows=1 width=30) (actual time=0.666..420.820 rows=1 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  ->  Index Scan using t1_id_idx on public.t1  (cost=0.29..8.31 rows=1 width=15) (actual time=0.054..0.057 rows=1 loops=1)
        Output: t1.id, t1.name
        Index Cond: (t1.id = 10)
  ->  Gather  (cost=1000.00..107137.70 rows=1 width=15) (actual time=0.610..420.760 rows=1 loops=1)
        Output: t2.id, t2.name
        Workers Planned: 2
        Workers Launched: 2
        ->  Parallel Seq Scan on public.t2  (cost=0.00..106137.60 rows=1 width=15) (actual time=238.031..374.739 rows=0 loops=3)
              Output: t2.id, t2.name
              Filter: (t2.id = 10)
              Rows Removed by Filter: 3333333
              Worker 0:  actual time=358.062..358.062 rows=0 loops=1
              Worker 1:  actual time=355.974..355.974 rows=0 loops=1
Planning Time: 1.705 ms
Execution Time: 420.994 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 10
QUERYPLAN: 
Gather  (cost=1008.56..112355.37 rows=9 width=30) (actual time=0.622..640.235 rows=9 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Workers Planned: 2
  Workers Launched: 2
  ->  Hash Join  (cost=8.56..111354.47 rows=4 width=30) (actual time=387.771..597.759 rows=3 loops=3)
        Output: t1.id, t1.name, t2.id, t2.name
        Hash Cond: (t2.id = t1.id)
        Worker 0:  actual time=583.530..583.532 rows=0 loops=1
        Worker 1:  actual time=579.675..579.677 rows=0 loops=1
        ->  Parallel Seq Scan on public.t2  (cost=0.00..95721.08 rows=4166608 width=15) (actual time=0.311..349.713 rows=3333333 loops=3)
              Output: t2.id, t2.name
              Worker 0:  actual time=0.414..342.395 rows=3295405 loops=1
              Worker 1:  actual time=0.468..337.720 rows=3161095 loops=1
        ->  Hash  (cost=8.45..8.45 rows=9 width=15) (actual time=0.045..0.045 rows=9 loops=3)
              Output: t1.id, t1.name
              Buckets: 1024  Batches: 1  Memory Usage: 9kB
              Worker 0:  actual time=0.044..0.044 rows=9 loops=1
              Worker 1:  actual time=0.049..0.049 rows=9 loops=1
              ->  Index Scan using t1_id_idx on public.t1  (cost=0.29..8.45 rows=9 width=15) (actual time=0.031..0.033 rows=9 loops=3)
                    Output: t1.id, t1.name
                    Index Cond: (t1.id < 10)
                    Worker 0:  actual time=0.031..0.033 rows=9 loops=1
                    Worker 1:  actual time=0.034..0.036 rows=9 loops=1
Planning Time: 2.872 ms
Execution Time: 640.331 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 1000
QUERYPLAN: 
Gather  (cost=1050.60..112498.24 rows=977 width=30) (actual time=1.540..698.411 rows=999 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Workers Planned: 2
  Workers Launched: 2
  ->  Hash Join  (cost=50.60..111400.54 rows=407 width=30) (actual time=426.687..655.773 rows=333 loops=3)
        Output: t1.id, t1.name, t2.id, t2.name
        Hash Cond: (t2.id = t1.id)
        Worker 0:  actual time=640.990..640.992 rows=0 loops=1
        Worker 1:  actual time=638.058..638.060 rows=0 loops=1
        ->  Parallel Seq Scan on public.t2  (cost=0.00..95721.08 rows=4166608 width=15) (actual time=0.418..352.073 rows=3333333 loops=3)
              Output: t2.id, t2.name
              Worker 0:  actual time=0.447..342.423 rows=3236205 loops=1
              Worker 1:  actual time=0.404..343.463 rows=3255640 loops=1
        ->  Hash  (cost=38.39..38.39 rows=977 width=15) (actual time=0.436..0.437 rows=999 loops=3)
              Output: t1.id, t1.name
              Buckets: 1024  Batches: 1  Memory Usage: 54kB
              Worker 0:  actual time=0.358..0.359 rows=999 loops=1
              Worker 1:  actual time=0.361..0.362 rows=999 loops=1
              ->  Index Scan using t1_id_idx on public.t1  (cost=0.29..38.39 rows=977 width=15) (actual time=0.043..0.315 rows=999 loops=3)
                    Output: t1.id, t1.name
                    Index Cond: (t1.id < 1000)
                    Worker 0:  actual time=0.045..0.238 rows=999 loops=1
                    Worker 1:  actual time=0.049..0.243 rows=999 loops=1
Planning Time: 2.726 ms
Execution Time: 698.594 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id
QUERYPLAN: 
Gather  (cost=3791.00..125553.53 rows=100000 width=30) (actual time=32.034..1013.692 rows=100000 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Workers Planned: 2
  Workers Launched: 2
  ->  Hash Join  (cost=2791.00..114553.53 rows=41667 width=30) (actual time=28.756..963.217 rows=33333 loops=3)
        Output: t1.id, t1.name, t2.id, t2.name
        Hash Cond: (t2.id = t1.id)
        Worker 0:  actual time=27.387..949.940 rows=5920 loops=1
        Worker 1:  actual time=27.436..951.504 rows=11840 loops=1
        ->  Parallel Seq Scan on public.t2  (cost=0.00..95721.08 rows=4166608 width=15) (actual time=0.626..354.929 rows=3333333 loops=3)
              Output: t2.id, t2.name
              Worker 0:  actual time=0.485..351.061 rows=3317790 loops=1
              Worker 1:  actual time=0.484..350.914 rows=3336670 loops=1
        ->  Hash  (cost=1541.00..1541.00 rows=100000 width=15) (actual time=27.638..27.639 rows=100000 loops=3)
              Output: t1.id, t1.name
              Buckets: 131072  Batches: 1  Memory Usage: 5614kB
              Worker 0:  actual time=26.309..26.310 rows=100000 loops=1
              Worker 1:  actual time=26.338..26.339 rows=100000 loops=1
              ->  Seq Scan on public.t1  (cost=0.00..1541.00 rows=100000 width=15) (actual time=0.315..9.150 rows=100000 loops=3)
                    Output: t1.id, t1.name
                    Worker 0:  actual time=0.461..9.168 rows=100000 loops=1
                    Worker 1:  actual time=0.461..9.117 rows=100000 loops=1
Planning Time: 2.317 ms
Execution Time: 1017.394 ms
----------------------------------------------------------------------------------------------------
INDEXES:
INDEX ON t1(id): True, INDEX ON t2(id): True
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id = 10
QUERYPLAN: 
Nested Loop  (cost=0.73..16.77 rows=1 width=30) (actual time=0.156..0.158 rows=1 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  ->  Index Scan using t1_id_idx on public.t1  (cost=0.29..8.31 rows=1 width=15) (actual time=0.061..0.061 rows=1 loops=1)
        Output: t1.id, t1.name
        Index Cond: (t1.id = 10)
  ->  Index Scan using t2_id_idx on public.t2  (cost=0.43..8.45 rows=1 width=15) (actual time=0.092..0.093 rows=1 loops=1)
        Output: t2.id, t2.name
        Index Cond: (t2.id = 10)
Planning Time: 4.057 ms
Execution Time: 0.278 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 10
QUERYPLAN: 
Nested Loop  (cost=0.73..76.13 rows=8 width=30) (actual time=0.023..0.042 rows=9 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  ->  Index Scan using t1_id_idx on public.t1  (cost=0.29..8.43 rows=8 width=15) (actual time=0.015..0.017 rows=9 loops=1)
        Output: t1.id, t1.name
        Index Cond: (t1.id < 10)
  ->  Index Scan using t2_id_idx on public.t2  (cost=0.43..8.45 rows=1 width=15) (actual time=0.002..0.002 rows=1 loops=9)
        Output: t2.id, t2.name
        Index Cond: (t2.id = t1.id)
Planning Time: 3.380 ms
Execution Time: 0.074 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 1000
QUERYPLAN: 
Merge Join  (cost=0.73..3991.43 rows=920 width=30) (actual time=0.029..0.836 rows=999 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Merge Cond: (t1.id = t2.id)
  ->  Index Scan using t1_id_idx on public.t1  (cost=0.29..36.39 rows=920 width=15) (actual time=0.020..0.239 rows=999 loops=1)
        Output: t1.id, t1.name
        Index Cond: (t1.id < 1000)
  ->  Index Scan using t2_id_idx on public.t2  (cost=0.43..313744.34 rows=9999860 width=15) (actual time=0.005..0.293 rows=1000 loops=1)
        Output: t2.id, t2.name
Planning Time: 2.883 ms
Execution Time: 0.912 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id
QUERYPLAN: 
Merge Join  (cost=0.73..8341.83 rows=100000 width=30) (actual time=0.025..70.190 rows=100000 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Merge Cond: (t1.id = t2.id)
  ->  Index Scan using t1_id_idx on public.t1  (cost=0.29..3148.29 rows=100000 width=15) (actual time=0.016..18.691 rows=100000 loops=1)
        Output: t1.id, t1.name
  ->  Index Scan using t2_id_idx on public.t2  (cost=0.43..313744.34 rows=9999860 width=15) (actual time=0.005..22.379 rows=100001 loops=1)
        Output: t2.id, t2.name
Planning Time: 2.976 ms
Execution Time: 73.673 ms
----------------------------------------------------------------------------------------------------


----------------------------------------------------------------------------------------------------
TABLE SIZES:
T1 SIZE: 10000, T2 SIZE: 1
----------------------------------------------------------------------------------------------------
INDEXES:
INDEX ON t1(id): False, INDEX ON t2(id): False
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id = 10
QUERYPLAN: 
Nested Loop  (cost=0.00..4279.74 rows=118336 width=72) (actual time=0.077..26.954 rows=1 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  ->  Seq Scan on public.t1  (cost=0.00..1399.84 rows=344 width=36) (actual time=0.038..13.466 rows=1 loops=1)
        Output: t1.id, t1.name
        Filter: (t1.id = 10)
        Rows Removed by Filter: 99999
  ->  Materialize  (cost=0.00..1401.56 rows=344 width=36) (actual time=0.036..13.485 rows=1 loops=1)
        Output: t2.id, t2.name
        ->  Seq Scan on public.t2  (cost=0.00..1399.84 rows=344 width=36) (actual time=0.031..13.477 rows=1 loops=1)
              Output: t2.id, t2.name
              Filter: (t2.id = 10)
              Rows Removed by Filter: 99999
Planning Time: 1.121 ms
Execution Time: 27.061 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 10
QUERYPLAN: 
Merge Join  (cost=11685.86..129986.72 rows=7867639 width=72) (actual time=35.897..35.905 rows=9 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Merge Cond: (t1.id = t2.id)
  ->  Sort  (cost=3058.31..3115.56 rows=22902 width=36) (actual time=10.069..10.070 rows=9 loops=1)
        Output: t1.id, t1.name
        Sort Key: t1.id
        Sort Method: quicksort  Memory: 25kB
        ->  Seq Scan on public.t1  (cost=0.00..1399.84 rows=22902 width=36) (actual time=0.028..10.029 rows=9 loops=1)
              Output: t1.id, t1.name
              Filter: (t1.id < 10)
              Rows Removed by Filter: 99991
  ->  Materialize  (cost=8627.55..8971.08 rows=68707 width=36) (actual time=25.823..25.825 rows=10 loops=1)
        Output: t2.id, t2.name
        ->  Sort  (cost=8627.55..8799.32 rows=68707 width=36) (actual time=25.818..25.819 rows=10 loops=1)
              Output: t2.id, t2.name
              Sort Key: t2.id
              Sort Method: external merge  Disk: 2456kB
              ->  Seq Scan on public.t2  (cost=0.00..1228.07 rows=68707 width=36) (actual time=0.028..9.082 rows=100000 loops=1)
                    Output: t2.id, t2.name
Planning Time: 1.287 ms
Execution Time: 37.784 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 1000
QUERYPLAN: 
Merge Join  (cost=11685.86..129986.72 rows=7867639 width=72) (actual time=35.762..36.292 rows=999 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Merge Cond: (t1.id = t2.id)
  ->  Sort  (cost=3058.31..3115.56 rows=22902 width=36) (actual time=10.121..10.163 rows=999 loops=1)
        Output: t1.id, t1.name
        Sort Key: t1.id
        Sort Method: quicksort  Memory: 64kB
        ->  Seq Scan on public.t1  (cost=0.00..1399.84 rows=22902 width=36) (actual time=0.029..10.026 rows=999 loops=1)
              Output: t1.id, t1.name
              Filter: (t1.id < 1000)
              Rows Removed by Filter: 99001
  ->  Materialize  (cost=8627.55..8971.08 rows=68707 width=36) (actual time=25.635..25.816 rows=1000 loops=1)
        Output: t2.id, t2.name
        ->  Sort  (cost=8627.55..8799.32 rows=68707 width=36) (actual time=25.625..25.709 rows=1000 loops=1)
              Output: t2.id, t2.name
              Sort Key: t2.id
              Sort Method: external merge  Disk: 2456kB
              ->  Seq Scan on public.t2  (cost=0.00..1228.07 rows=68707 width=36) (actual time=0.025..8.928 rows=100000 loops=1)
                    Output: t2.id, t2.name
Planning Time: 1.365 ms
Execution Time: 38.269 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id
QUERYPLAN: 
Merge Join  (cost=17255.10..371819.28 rows=23603259 width=72) (actual time=52.661..109.605 rows=100000 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Merge Cond: (t1.id = t2.id)
  ->  Sort  (cost=8627.55..8799.32 rows=68707 width=36) (actual time=27.067..35.305 rows=100000 loops=1)
        Output: t1.id, t1.name
        Sort Key: t1.id
        Sort Method: external merge  Disk: 2456kB
        ->  Seq Scan on public.t1  (cost=0.00..1228.07 rows=68707 width=36) (actual time=0.025..9.716 rows=100000 loops=1)
              Output: t1.id, t1.name
  ->  Materialize  (cost=8627.55..8971.08 rows=68707 width=36) (actual time=25.587..43.626 rows=100000 loops=1)
        Output: t2.id, t2.name
        ->  Sort  (cost=8627.55..8799.32 rows=68707 width=36) (actual time=25.579..33.886 rows=100000 loops=1)
              Output: t2.id, t2.name
              Sort Key: t2.id
              Sort Method: external merge  Disk: 2456kB
              ->  Seq Scan on public.t2  (cost=0.00..1228.07 rows=68707 width=36) (actual time=0.034..8.969 rows=100000 loops=1)
                    Output: t2.id, t2.name
Planning Time: 1.356 ms
Execution Time: 115.322 ms
----------------------------------------------------------------------------------------------------
INDEXES:
INDEX ON t1(id): True, INDEX ON t2(id): False
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id = 10
QUERYPLAN: 
Nested Loop  (cost=0.29..1799.32 rows=1 width=30) (actual time=0.084..9.902 rows=1 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  ->  Index Scan using t1_id_idx on public.t1  (cost=0.29..8.31 rows=1 width=15) (actual time=0.056..0.057 rows=1 loops=1)
        Output: t1.id, t1.name
        Index Cond: (t1.id = 10)
  ->  Seq Scan on public.t2  (cost=0.00..1791.00 rows=1 width=15) (actual time=0.027..9.842 rows=1 loops=1)
        Output: t2.id, t2.name
        Filter: (t2.id = 10)
        Rows Removed by Filter: 99999
Planning Time: 2.412 ms
Execution Time: 10.024 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 10
QUERYPLAN: 
Hash Join  (cost=8.56..1924.65 rows=9 width=30) (actual time=0.053..16.504 rows=9 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Hash Cond: (t2.id = t1.id)
  ->  Seq Scan on public.t2  (cost=0.00..1541.00 rows=100000 width=15) (actual time=0.026..9.161 rows=100000 loops=1)
        Output: t2.id, t2.name
  ->  Hash  (cost=8.45..8.45 rows=9 width=15) (actual time=0.017..0.018 rows=9 loops=1)
        Output: t1.id, t1.name
        Buckets: 1024  Batches: 1  Memory Usage: 9kB
        ->  Index Scan using t1_id_idx on public.t1  (cost=0.29..8.45 rows=9 width=15) (actual time=0.006..0.008 rows=9 loops=1)
              Output: t1.id, t1.name
              Index Cond: (t1.id < 10)
Planning Time: 2.139 ms
Execution Time: 16.537 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 1000
QUERYPLAN: 
Hash Join  (cost=52.22..1978.53 rows=1031 width=30) (actual time=0.405..17.964 rows=999 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Hash Cond: (t2.id = t1.id)
  ->  Seq Scan on public.t2  (cost=0.00..1541.00 rows=100000 width=15) (actual time=0.026..9.066 rows=100000 loops=1)
        Output: t2.id, t2.name
  ->  Hash  (cost=39.34..39.34 rows=1031 width=15) (actual time=0.371..0.372 rows=999 loops=1)
        Output: t1.id, t1.name
        Buckets: 2048  Batches: 1  Memory Usage: 62kB
        ->  Index Scan using t1_id_idx on public.t1  (cost=0.29..39.34 rows=1031 width=15) (actual time=0.016..0.243 rows=999 loops=1)
              Output: t1.id, t1.name
              Index Cond: (t1.id < 1000)
Planning Time: 2.335 ms
Execution Time: 18.027 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id
QUERYPLAN: 
Hash Join  (cost=2791.00..5707.00 rows=100000 width=30) (actual time=25.302..64.199 rows=100000 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Hash Cond: (t1.id = t2.id)
  ->  Seq Scan on public.t1  (cost=0.00..1541.00 rows=100000 width=15) (actual time=0.017..9.412 rows=100000 loops=1)
        Output: t1.id, t1.name
  ->  Hash  (cost=1541.00..1541.00 rows=100000 width=15) (actual time=25.023..25.024 rows=100000 loops=1)
        Output: t2.id, t2.name
        Buckets: 131072  Batches: 1  Memory Usage: 5614kB
        ->  Seq Scan on public.t2  (cost=0.00..1541.00 rows=100000 width=15) (actual time=0.024..10.011 rows=100000 loops=1)
              Output: t2.id, t2.name
Planning Time: 2.757 ms
Execution Time: 67.630 ms
----------------------------------------------------------------------------------------------------
INDEXES:
INDEX ON t1(id): True, INDEX ON t2(id): True
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id = 10
QUERYPLAN: 
Nested Loop  (cost=0.58..16.63 rows=1 width=30) (actual time=0.104..0.105 rows=1 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  ->  Index Scan using t1_id_idx on public.t1  (cost=0.29..8.31 rows=1 width=15) (actual time=0.052..0.053 rows=1 loops=1)
        Output: t1.id, t1.name
        Index Cond: (t1.id = 10)
  ->  Index Scan using t2_id_idx on public.t2  (cost=0.29..8.31 rows=1 width=15) (actual time=0.048..0.049 rows=1 loops=1)
        Output: t2.id, t2.name
        Index Cond: (t2.id = 10)
Planning Time: 2.621 ms
Execution Time: 0.228 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 10
QUERYPLAN: 
Nested Loop  (cost=0.58..83.33 rows=9 width=30) (actual time=0.010..0.026 rows=9 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  ->  Index Scan using t1_id_idx on public.t1  (cost=0.29..8.45 rows=9 width=15) (actual time=0.004..0.005 rows=9 loops=1)
        Output: t1.id, t1.name
        Index Cond: (t1.id < 10)
  ->  Index Scan using t2_id_idx on public.t2  (cost=0.29..8.31 rows=1 width=15) (actual time=0.001..0.001 rows=1 loops=9)
        Output: t2.id, t2.name
        Index Cond: (t2.id = t1.id)
Planning Time: 2.970 ms
Execution Time: 0.055 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 1000
QUERYPLAN: 
Hash Join  (cost=51.83..1978.01 rows=1018 width=30) (actual time=0.391..18.135 rows=999 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Hash Cond: (t2.id = t1.id)
  ->  Seq Scan on public.t2  (cost=0.00..1541.00 rows=100000 width=15) (actual time=0.016..8.991 rows=100000 loops=1)
        Output: t2.id, t2.name
  ->  Hash  (cost=39.11..39.11 rows=1018 width=15) (actual time=0.364..0.364 rows=999 loops=1)
        Output: t1.id, t1.name
        Buckets: 1024  Batches: 1  Memory Usage: 54kB
        ->  Index Scan using t1_id_idx on public.t1  (cost=0.29..39.11 rows=1018 width=15) (actual time=0.014..0.239 rows=999 loops=1)
              Output: t1.id, t1.name
              Index Cond: (t1.id < 1000)
Planning Time: 2.824 ms
Execution Time: 18.218 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id
QUERYPLAN: 
Hash Join  (cost=2791.00..5707.00 rows=100000 width=30) (actual time=21.848..60.772 rows=100000 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Hash Cond: (t1.id = t2.id)
  ->  Seq Scan on public.t1  (cost=0.00..1541.00 rows=100000 width=15) (actual time=0.015..9.798 rows=100000 loops=1)
        Output: t1.id, t1.name
  ->  Hash  (cost=1541.00..1541.00 rows=100000 width=15) (actual time=21.570..21.571 rows=100000 loops=1)
        Output: t2.id, t2.name
        Buckets: 131072  Batches: 1  Memory Usage: 5614kB
        ->  Seq Scan on public.t2  (cost=0.00..1541.00 rows=100000 width=15) (actual time=0.013..9.772 rows=100000 loops=1)
              Output: t2.id, t2.name
Planning Time: 2.743 ms
Execution Time: 64.190 ms
----------------------------------------------------------------------------------------------------


----------------------------------------------------------------------------------------------------
TABLE SIZES:
T1 SIZE: 10000, T2 SIZE: 100
----------------------------------------------------------------------------------------------------
INDEXES:
INDEX ON t1(id): False, INDEX ON t2(id): False
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id = 10
QUERYPLAN: 
Nested Loop  (cost=0.00..4279.74 rows=118336 width=72) (actual time=0.078..26.899 rows=1 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  ->  Seq Scan on public.t1  (cost=0.00..1399.84 rows=344 width=36) (actual time=0.040..13.363 rows=1 loops=1)
        Output: t1.id, t1.name
        Filter: (t1.id = 10)
        Rows Removed by Filter: 99999
  ->  Materialize  (cost=0.00..1401.56 rows=344 width=36) (actual time=0.036..13.533 rows=1 loops=1)
        Output: t2.id, t2.name
        ->  Seq Scan on public.t2  (cost=0.00..1399.84 rows=344 width=36) (actual time=0.031..13.528 rows=1 loops=1)
              Output: t2.id, t2.name
              Filter: (t2.id = 10)
              Rows Removed by Filter: 99999
Planning Time: 1.401 ms
Execution Time: 27.020 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 10
QUERYPLAN: 
Merge Join  (cost=11685.86..129986.72 rows=7867639 width=72) (actual time=35.473..35.481 rows=9 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Merge Cond: (t1.id = t2.id)
  ->  Sort  (cost=3058.31..3115.56 rows=22902 width=36) (actual time=10.173..10.174 rows=9 loops=1)
        Output: t1.id, t1.name
        Sort Key: t1.id
        Sort Method: quicksort  Memory: 25kB
        ->  Seq Scan on public.t1  (cost=0.00..1399.84 rows=22902 width=36) (actual time=0.026..10.148 rows=9 loops=1)
              Output: t1.id, t1.name
              Filter: (t1.id < 10)
              Rows Removed by Filter: 99991
  ->  Materialize  (cost=8627.55..8971.08 rows=68707 width=36) (actual time=25.293..25.295 rows=10 loops=1)
        Output: t2.id, t2.name
        ->  Sort  (cost=8627.55..8799.32 rows=68707 width=36) (actual time=25.282..25.283 rows=10 loops=1)
              Output: t2.id, t2.name
              Sort Key: t2.id
              Sort Method: external merge  Disk: 2456kB
              ->  Seq Scan on public.t2  (cost=0.00..1228.07 rows=68707 width=36) (actual time=0.042..9.050 rows=100000 loops=1)
                    Output: t2.id, t2.name
Planning Time: 1.320 ms
Execution Time: 37.292 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 1000
QUERYPLAN: 
Merge Join  (cost=11685.86..129986.72 rows=7867639 width=72) (actual time=35.519..36.040 rows=999 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Merge Cond: (t1.id = t2.id)
  ->  Sort  (cost=3058.31..3115.56 rows=22902 width=36) (actual time=10.163..10.204 rows=999 loops=1)
        Output: t1.id, t1.name
        Sort Key: t1.id
        Sort Method: quicksort  Memory: 64kB
        ->  Seq Scan on public.t1  (cost=0.00..1399.84 rows=22902 width=36) (actual time=0.027..10.065 rows=999 loops=1)
              Output: t1.id, t1.name
              Filter: (t1.id < 1000)
              Rows Removed by Filter: 99001
  ->  Materialize  (cost=8627.55..8971.08 rows=68707 width=36) (actual time=25.350..25.528 rows=1000 loops=1)
        Output: t2.id, t2.name
        ->  Sort  (cost=8627.55..8799.32 rows=68707 width=36) (actual time=25.340..25.421 rows=1000 loops=1)
              Output: t2.id, t2.name
              Sort Key: t2.id
              Sort Method: external merge  Disk: 2456kB
              ->  Seq Scan on public.t2  (cost=0.00..1228.07 rows=68707 width=36) (actual time=0.025..9.052 rows=100000 loops=1)
                    Output: t2.id, t2.name
Planning Time: 1.287 ms
Execution Time: 37.916 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id
QUERYPLAN: 
Merge Join  (cost=17255.10..371819.28 rows=23603259 width=72) (actual time=51.932..110.020 rows=100000 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Merge Cond: (t1.id = t2.id)
  ->  Sort  (cost=8627.55..8799.32 rows=68707 width=36) (actual time=26.202..34.521 rows=100000 loops=1)
        Output: t1.id, t1.name
        Sort Key: t1.id
        Sort Method: external merge  Disk: 2456kB
        ->  Seq Scan on public.t1  (cost=0.00..1228.07 rows=68707 width=36) (actual time=0.025..9.462 rows=100000 loops=1)
              Output: t1.id, t1.name
  ->  Materialize  (cost=8627.55..8971.08 rows=68707 width=36) (actual time=25.722..44.223 rows=100000 loops=1)
        Output: t2.id, t2.name
        ->  Sort  (cost=8627.55..8799.32 rows=68707 width=36) (actual time=25.714..34.333 rows=100000 loops=1)
              Output: t2.id, t2.name
              Sort Key: t2.id
              Sort Method: external merge  Disk: 2456kB
              ->  Seq Scan on public.t2  (cost=0.00..1228.07 rows=68707 width=36) (actual time=0.034..8.965 rows=100000 loops=1)
                    Output: t2.id, t2.name
Planning Time: 1.273 ms
Execution Time: 115.402 ms
----------------------------------------------------------------------------------------------------
INDEXES:
INDEX ON t1(id): True, INDEX ON t2(id): False
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id = 10
QUERYPLAN: 
Nested Loop  (cost=0.29..1799.32 rows=1 width=30) (actual time=0.075..9.908 rows=1 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  ->  Index Scan using t1_id_idx on public.t1  (cost=0.29..8.31 rows=1 width=15) (actual time=0.048..0.049 rows=1 loops=1)
        Output: t1.id, t1.name
        Index Cond: (t1.id = 10)
  ->  Seq Scan on public.t2  (cost=0.00..1791.00 rows=1 width=15) (actual time=0.025..9.857 rows=1 loops=1)
        Output: t2.id, t2.name
        Filter: (t2.id = 10)
        Rows Removed by Filter: 99999
Planning Time: 1.960 ms
Execution Time: 10.021 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 10
QUERYPLAN: 
Hash Join  (cost=8.56..1924.65 rows=9 width=30) (actual time=0.055..16.479 rows=9 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Hash Cond: (t2.id = t1.id)
  ->  Seq Scan on public.t2  (cost=0.00..1541.00 rows=100000 width=15) (actual time=0.025..9.200 rows=100000 loops=1)
        Output: t2.id, t2.name
  ->  Hash  (cost=8.45..8.45 rows=9 width=15) (actual time=0.016..0.016 rows=9 loops=1)
        Output: t1.id, t1.name
        Buckets: 1024  Batches: 1  Memory Usage: 9kB
        ->  Index Scan using t1_id_idx on public.t1  (cost=0.29..8.45 rows=9 width=15) (actual time=0.004..0.006 rows=9 loops=1)
              Output: t1.id, t1.name
              Index Cond: (t1.id < 10)
Planning Time: 2.200 ms
Execution Time: 16.513 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 1000
QUERYPLAN: 
Hash Join  (cost=49.85..1975.37 rows=952 width=30) (actual time=0.405..18.441 rows=999 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Hash Cond: (t2.id = t1.id)
  ->  Seq Scan on public.t2  (cost=0.00..1541.00 rows=100000 width=15) (actual time=0.027..9.325 rows=100000 loops=1)
        Output: t2.id, t2.name
  ->  Hash  (cost=37.95..37.95 rows=952 width=15) (actual time=0.363..0.364 rows=999 loops=1)
        Output: t1.id, t1.name
        Buckets: 1024  Batches: 1  Memory Usage: 54kB
        ->  Index Scan using t1_id_idx on public.t1  (cost=0.29..37.95 rows=952 width=15) (actual time=0.011..0.239 rows=999 loops=1)
              Output: t1.id, t1.name
              Index Cond: (t1.id < 1000)
Planning Time: 2.224 ms
Execution Time: 18.501 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id
QUERYPLAN: 
Hash Join  (cost=2791.00..5707.00 rows=100000 width=30) (actual time=22.205..60.694 rows=100000 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Hash Cond: (t1.id = t2.id)
  ->  Seq Scan on public.t1  (cost=0.00..1541.00 rows=100000 width=15) (actual time=0.016..9.373 rows=100000 loops=1)
        Output: t1.id, t1.name
  ->  Hash  (cost=1541.00..1541.00 rows=100000 width=15) (actual time=21.889..21.890 rows=100000 loops=1)
        Output: t2.id, t2.name
        Buckets: 131072  Batches: 1  Memory Usage: 5614kB
        ->  Seq Scan on public.t2  (cost=0.00..1541.00 rows=100000 width=15) (actual time=0.023..9.605 rows=100000 loops=1)
              Output: t2.id, t2.name
Planning Time: 2.481 ms
Execution Time: 64.186 ms
----------------------------------------------------------------------------------------------------
INDEXES:
INDEX ON t1(id): True, INDEX ON t2(id): True
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id = 10
QUERYPLAN: 
Nested Loop  (cost=0.58..16.63 rows=1 width=30) (actual time=0.109..0.110 rows=1 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  ->  Index Scan using t1_id_idx on public.t1  (cost=0.29..8.31 rows=1 width=15) (actual time=0.048..0.048 rows=1 loops=1)
        Output: t1.id, t1.name
        Index Cond: (t1.id = 10)
  ->  Index Scan using t2_id_idx on public.t2  (cost=0.29..8.31 rows=1 width=15) (actual time=0.058..0.058 rows=1 loops=1)
        Output: t2.id, t2.name
        Index Cond: (t2.id = 10)
Planning Time: 2.843 ms
Execution Time: 0.229 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 10
QUERYPLAN: 
Nested Loop  (cost=0.58..83.33 rows=9 width=30) (actual time=0.010..0.026 rows=9 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  ->  Index Scan using t1_id_idx on public.t1  (cost=0.29..8.45 rows=9 width=15) (actual time=0.004..0.005 rows=9 loops=1)
        Output: t1.id, t1.name
        Index Cond: (t1.id < 10)
  ->  Index Scan using t2_id_idx on public.t2  (cost=0.29..8.31 rows=1 width=15) (actual time=0.001..0.001 rows=1 loops=9)
        Output: t2.id, t2.name
        Index Cond: (t2.id = t1.id)
Planning Time: 2.749 ms
Execution Time: 0.056 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 1000
QUERYPLAN: 
Hash Join  (cost=51.44..1977.49 rows=1005 width=30) (actual time=0.379..18.064 rows=999 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Hash Cond: (t2.id = t1.id)
  ->  Seq Scan on public.t2  (cost=0.00..1541.00 rows=100000 width=15) (actual time=0.014..9.011 rows=100000 loops=1)
        Output: t2.id, t2.name
  ->  Hash  (cost=38.88..38.88 rows=1005 width=15) (actual time=0.352..0.353 rows=999 loops=1)
        Output: t1.id, t1.name
        Buckets: 1024  Batches: 1  Memory Usage: 54kB
        ->  Index Scan using t1_id_idx on public.t1  (cost=0.29..38.88 rows=1005 width=15) (actual time=0.010..0.230 rows=999 loops=1)
              Output: t1.id, t1.name
              Index Cond: (t1.id < 1000)
Planning Time: 2.498 ms
Execution Time: 18.119 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id
QUERYPLAN: 
Hash Join  (cost=2791.00..5707.00 rows=100000 width=30) (actual time=21.906..60.546 rows=100000 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Hash Cond: (t1.id = t2.id)
  ->  Seq Scan on public.t1  (cost=0.00..1541.00 rows=100000 width=15) (actual time=0.015..9.512 rows=100000 loops=1)
        Output: t1.id, t1.name
  ->  Hash  (cost=1541.00..1541.00 rows=100000 width=15) (actual time=21.603..21.604 rows=100000 loops=1)
        Output: t2.id, t2.name
        Buckets: 131072  Batches: 1  Memory Usage: 5614kB
        ->  Seq Scan on public.t2  (cost=0.00..1541.00 rows=100000 width=15) (actual time=0.012..9.346 rows=100000 loops=1)
              Output: t2.id, t2.name
Planning Time: 2.758 ms
Execution Time: 64.077 ms
----------------------------------------------------------------------------------------------------


----------------------------------------------------------------------------------------------------
TABLE SIZES:
T1 SIZE: 10000, T2 SIZE: 10000
----------------------------------------------------------------------------------------------------
INDEXES:
INDEX ON t1(id): False, INDEX ON t2(id): False
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id = 10
QUERYPLAN: 
Nested Loop  (cost=0.00..4279.74 rows=118336 width=72) (actual time=0.080..26.753 rows=1 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  ->  Seq Scan on public.t1  (cost=0.00..1399.84 rows=344 width=36) (actual time=0.041..13.385 rows=1 loops=1)
        Output: t1.id, t1.name
        Filter: (t1.id = 10)
        Rows Removed by Filter: 99999
  ->  Materialize  (cost=0.00..1401.56 rows=344 width=36) (actual time=0.037..13.365 rows=1 loops=1)
        Output: t2.id, t2.name
        ->  Seq Scan on public.t2  (cost=0.00..1399.84 rows=344 width=36) (actual time=0.031..13.358 rows=1 loops=1)
              Output: t2.id, t2.name
              Filter: (t2.id = 10)
              Rows Removed by Filter: 99999
Planning Time: 1.437 ms
Execution Time: 26.961 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 10
QUERYPLAN: 
Merge Join  (cost=11685.86..129986.72 rows=7867639 width=72) (actual time=36.198..36.206 rows=9 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Merge Cond: (t1.id = t2.id)
  ->  Sort  (cost=3058.31..3115.56 rows=22902 width=36) (actual time=10.155..10.156 rows=9 loops=1)
        Output: t1.id, t1.name
        Sort Key: t1.id
        Sort Method: quicksort  Memory: 25kB
        ->  Seq Scan on public.t1  (cost=0.00..1399.84 rows=22902 width=36) (actual time=0.025..10.135 rows=9 loops=1)
              Output: t1.id, t1.name
              Filter: (t1.id < 10)
              Rows Removed by Filter: 99991
  ->  Materialize  (cost=8627.55..8971.08 rows=68707 width=36) (actual time=26.037..26.040 rows=10 loops=1)
        Output: t2.id, t2.name
        ->  Sort  (cost=8627.55..8799.32 rows=68707 width=36) (actual time=26.030..26.031 rows=10 loops=1)
              Output: t2.id, t2.name
              Sort Key: t2.id
              Sort Method: external merge  Disk: 2456kB
              ->  Seq Scan on public.t2  (cost=0.00..1228.07 rows=68707 width=36) (actual time=0.026..9.148 rows=100000 loops=1)
                    Output: t2.id, t2.name
Planning Time: 1.265 ms
Execution Time: 38.013 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 1000
QUERYPLAN: 
Merge Join  (cost=11685.86..129986.72 rows=7867639 width=72) (actual time=35.717..36.241 rows=999 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Merge Cond: (t1.id = t2.id)
  ->  Sort  (cost=3058.31..3115.56 rows=22902 width=36) (actual time=10.205..10.247 rows=999 loops=1)
        Output: t1.id, t1.name
        Sort Key: t1.id
        Sort Method: quicksort  Memory: 64kB
        ->  Seq Scan on public.t1  (cost=0.00..1399.84 rows=22902 width=36) (actual time=0.026..10.105 rows=999 loops=1)
              Output: t1.id, t1.name
              Filter: (t1.id < 1000)
              Rows Removed by Filter: 99001
  ->  Materialize  (cost=8627.55..8971.08 rows=68707 width=36) (actual time=25.507..25.685 rows=1000 loops=1)
        Output: t2.id, t2.name
        ->  Sort  (cost=8627.55..8799.32 rows=68707 width=36) (actual time=25.500..25.583 rows=1000 loops=1)
              Output: t2.id, t2.name
              Sort Key: t2.id
              Sort Method: external merge  Disk: 2456kB
              ->  Seq Scan on public.t2  (cost=0.00..1228.07 rows=68707 width=36) (actual time=0.026..8.864 rows=100000 loops=1)
                    Output: t2.id, t2.name
Planning Time: 1.409 ms
Execution Time: 38.127 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id
QUERYPLAN: 
Merge Join  (cost=17255.10..371819.28 rows=23603259 width=72) (actual time=51.459..107.774 rows=100000 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Merge Cond: (t1.id = t2.id)
  ->  Sort  (cost=8627.55..8799.32 rows=68707 width=36) (actual time=25.966..33.956 rows=100000 loops=1)
        Output: t1.id, t1.name
        Sort Key: t1.id
        Sort Method: external merge  Disk: 2456kB
        ->  Seq Scan on public.t1  (cost=0.00..1228.07 rows=68707 width=36) (actual time=0.025..9.269 rows=100000 loops=1)
              Output: t1.id, t1.name
  ->  Materialize  (cost=8627.55..8971.08 rows=68707 width=36) (actual time=25.486..43.081 rows=100000 loops=1)
        Output: t2.id, t2.name
        ->  Sort  (cost=8627.55..8799.32 rows=68707 width=36) (actual time=25.478..33.602 rows=100000 loops=1)
              Output: t2.id, t2.name
              Sort Key: t2.id
              Sort Method: external merge  Disk: 2456kB
              ->  Seq Scan on public.t2  (cost=0.00..1228.07 rows=68707 width=36) (actual time=0.032..8.895 rows=100000 loops=1)
                    Output: t2.id, t2.name
Planning Time: 1.313 ms
Execution Time: 113.444 ms
----------------------------------------------------------------------------------------------------
INDEXES:
INDEX ON t1(id): True, INDEX ON t2(id): False
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id = 10
QUERYPLAN: 
Nested Loop  (cost=0.29..1799.32 rows=1 width=30) (actual time=0.091..10.450 rows=1 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  ->  Index Scan using t1_id_idx on public.t1  (cost=0.29..8.31 rows=1 width=15) (actual time=0.061..0.063 rows=1 loops=1)
        Output: t1.id, t1.name
        Index Cond: (t1.id = 10)
  ->  Seq Scan on public.t2  (cost=0.00..1791.00 rows=1 width=15) (actual time=0.028..10.383 rows=1 loops=1)
        Output: t2.id, t2.name
        Filter: (t2.id = 10)
        Rows Removed by Filter: 99999
Planning Time: 2.024 ms
Execution Time: 10.583 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 10
QUERYPLAN: 
Hash Join  (cost=8.56..1924.65 rows=9 width=30) (actual time=0.068..17.091 rows=9 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Hash Cond: (t2.id = t1.id)
  ->  Seq Scan on public.t2  (cost=0.00..1541.00 rows=100000 width=15) (actual time=0.034..9.441 rows=100000 loops=1)
        Output: t2.id, t2.name
  ->  Hash  (cost=8.45..8.45 rows=9 width=15) (actual time=0.019..0.020 rows=9 loops=1)
        Output: t1.id, t1.name
        Buckets: 1024  Batches: 1  Memory Usage: 9kB
        ->  Index Scan using t1_id_idx on public.t1  (cost=0.29..8.45 rows=9 width=15) (actual time=0.004..0.006 rows=9 loops=1)
              Output: t1.id, t1.name
              Index Cond: (t1.id < 10)
Planning Time: 2.304 ms
Execution Time: 17.130 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 1000
QUERYPLAN: 
Hash Join  (cost=51.35..1977.37 rows=1002 width=30) (actual time=0.406..18.517 rows=999 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Hash Cond: (t2.id = t1.id)
  ->  Seq Scan on public.t2  (cost=0.00..1541.00 rows=100000 width=15) (actual time=0.029..9.126 rows=100000 loops=1)
        Output: t2.id, t2.name
  ->  Hash  (cost=38.83..38.83 rows=1002 width=15) (actual time=0.365..0.367 rows=999 loops=1)
        Output: t1.id, t1.name
        Buckets: 1024  Batches: 1  Memory Usage: 54kB
        ->  Index Scan using t1_id_idx on public.t1  (cost=0.29..38.83 rows=1002 width=15) (actual time=0.018..0.243 rows=999 loops=1)
              Output: t1.id, t1.name
              Index Cond: (t1.id < 1000)
Planning Time: 2.109 ms
Execution Time: 18.575 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id
QUERYPLAN: 
Hash Join  (cost=2791.00..5707.00 rows=100000 width=30) (actual time=21.761..60.057 rows=100000 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Hash Cond: (t1.id = t2.id)
  ->  Seq Scan on public.t1  (cost=0.00..1541.00 rows=100000 width=15) (actual time=0.015..9.373 rows=100000 loops=1)
        Output: t1.id, t1.name
  ->  Hash  (cost=1541.00..1541.00 rows=100000 width=15) (actual time=21.506..21.507 rows=100000 loops=1)
        Output: t2.id, t2.name
        Buckets: 131072  Batches: 1  Memory Usage: 5614kB
        ->  Seq Scan on public.t2  (cost=0.00..1541.00 rows=100000 width=15) (actual time=0.024..9.514 rows=100000 loops=1)
              Output: t2.id, t2.name
Planning Time: 2.154 ms
Execution Time: 63.519 ms
----------------------------------------------------------------------------------------------------
INDEXES:
INDEX ON t1(id): True, INDEX ON t2(id): True
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id = 10
QUERYPLAN: 
Nested Loop  (cost=0.58..16.63 rows=1 width=30) (actual time=0.111..0.112 rows=1 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  ->  Index Scan using t1_id_idx on public.t1  (cost=0.29..8.31 rows=1 width=15) (actual time=0.054..0.054 rows=1 loops=1)
        Output: t1.id, t1.name
        Index Cond: (t1.id = 10)
  ->  Index Scan using t2_id_idx on public.t2  (cost=0.29..8.31 rows=1 width=15) (actual time=0.054..0.054 rows=1 loops=1)
        Output: t2.id, t2.name
        Index Cond: (t2.id = 10)
Planning Time: 2.444 ms
Execution Time: 0.225 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 10
QUERYPLAN: 
Nested Loop  (cost=0.58..83.33 rows=9 width=30) (actual time=0.014..0.030 rows=9 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  ->  Index Scan using t1_id_idx on public.t1  (cost=0.29..8.45 rows=9 width=15) (actual time=0.008..0.010 rows=9 loops=1)
        Output: t1.id, t1.name
        Index Cond: (t1.id < 10)
  ->  Index Scan using t2_id_idx on public.t2  (cost=0.29..8.31 rows=1 width=15) (actual time=0.001..0.001 rows=1 loops=9)
        Output: t2.id, t2.name
        Index Cond: (t2.id = t1.id)
Planning Time: 2.795 ms
Execution Time: 0.060 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 1000
QUERYPLAN: 
Hash Join  (cost=50.21..1975.85 rows=964 width=30) (actual time=0.386..18.266 rows=999 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Hash Cond: (t2.id = t1.id)
  ->  Seq Scan on public.t2  (cost=0.00..1541.00 rows=100000 width=15) (actual time=0.016..9.140 rows=100000 loops=1)
        Output: t2.id, t2.name
  ->  Hash  (cost=38.16..38.16 rows=964 width=15) (actual time=0.358..0.359 rows=999 loops=1)
        Output: t1.id, t1.name
        Buckets: 1024  Batches: 1  Memory Usage: 54kB
        ->  Index Scan using t1_id_idx on public.t1  (cost=0.29..38.16 rows=964 width=15) (actual time=0.014..0.236 rows=999 loops=1)
              Output: t1.id, t1.name
              Index Cond: (t1.id < 1000)
Planning Time: 3.165 ms
Execution Time: 18.325 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id
QUERYPLAN: 
Hash Join  (cost=2791.00..5707.00 rows=100000 width=30) (actual time=21.962..60.495 rows=100000 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Hash Cond: (t1.id = t2.id)
  ->  Seq Scan on public.t1  (cost=0.00..1541.00 rows=100000 width=15) (actual time=0.015..9.298 rows=100000 loops=1)
        Output: t1.id, t1.name
  ->  Hash  (cost=1541.00..1541.00 rows=100000 width=15) (actual time=21.670..21.671 rows=100000 loops=1)
        Output: t2.id, t2.name
        Buckets: 131072  Batches: 1  Memory Usage: 5614kB
        ->  Seq Scan on public.t2  (cost=0.00..1541.00 rows=100000 width=15) (actual time=0.012..9.359 rows=100000 loops=1)
              Output: t2.id, t2.name
Planning Time: 3.192 ms
Execution Time: 63.919 ms
----------------------------------------------------------------------------------------------------


----------------------------------------------------------------------------------------------------
TABLE SIZES:
T1 SIZE: 10000, T2 SIZE: 1000000
----------------------------------------------------------------------------------------------------
INDEXES:
INDEX ON t1(id): False, INDEX ON t2(id): False
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id = 10
QUERYPLAN: 
Nested Loop  (cost=1000.00..26487.74 rows=1180952 width=72) (actual time=0.669..94.558 rows=1 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  ->  Gather  (cost=1000.00..10325.14 rows=3433 width=36) (actual time=0.615..68.646 rows=1 loops=1)
        Output: t2.id, t2.name
        Workers Planned: 2
        Workers Launched: 2
        ->  Parallel Seq Scan on public.t2  (cost=0.00..8981.84 rows=1430 width=36) (actual time=25.211..46.024 rows=0 loops=3)
              Output: t2.id, t2.name
              Filter: (t2.id = 10)
              Rows Removed by Filter: 333333
              Worker 0:  actual time=39.843..39.843 rows=0 loops=1
              Worker 1:  actual time=35.748..35.748 rows=0 loops=1
  ->  Materialize  (cost=0.00..1401.56 rows=344 width=36) (actual time=0.052..25.908 rows=1 loops=1)
        Output: t1.id, t1.name
        ->  Seq Scan on public.t1  (cost=0.00..1399.84 rows=344 width=36) (actual time=0.041..25.897 rows=1 loops=1)
              Output: t1.id, t1.name
              Filter: (t1.id = 10)
              Rows Removed by Filter: 99999
Planning Time: 1.165 ms
Execution Time: 94.697 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 10
QUERYPLAN: 
Merge Join  (cost=100662.78..1281766.92 rows=78618215 width=72) (actual time=336.901..336.912 rows=9 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Merge Cond: (t1.id = t2.id)
  ->  Sort  (cost=3058.31..3115.56 rows=22902 width=36) (actual time=10.136..10.138 rows=9 loops=1)
        Output: t1.id, t1.name
        Sort Key: t1.id
        Sort Method: quicksort  Memory: 25kB
        ->  Seq Scan on public.t1  (cost=0.00..1399.84 rows=22902 width=36) (actual time=0.030..10.115 rows=9 loops=1)
              Output: t1.id, t1.name
              Filter: (t1.id < 10)
              Rows Removed by Filter: 99991
  ->  Materialize  (cost=97604.48..101037.29 rows=686562 width=36) (actual time=326.760..326.765 rows=10 loops=1)
        Output: t2.id, t2.name
        ->  Sort  (cost=97604.48..99320.88 rows=686562 width=36) (actual time=326.753..326.754 rows=10 loops=1)
              Output: t2.id, t2.name
              Sort Key: t2.id
              Sort Method: external merge  Disk: 24464kB
              ->  Seq Scan on public.t2  (cost=0.00..12271.62 rows=686562 width=36) (actual time=0.030..88.522 rows=1000000 loops=1)
                    Output: t2.id, t2.name
Planning Time: 1.281 ms
Execution Time: 341.542 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 1000
QUERYPLAN: 
Merge Join  (cost=100662.78..1281766.92 rows=78618215 width=72) (actual time=340.295..340.821 rows=999 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Merge Cond: (t1.id = t2.id)
  ->  Sort  (cost=3058.31..3115.56 rows=22902 width=36) (actual time=10.271..10.315 rows=999 loops=1)
        Output: t1.id, t1.name
        Sort Key: t1.id
        Sort Method: quicksort  Memory: 64kB
        ->  Seq Scan on public.t1  (cost=0.00..1399.84 rows=22902 width=36) (actual time=0.034..10.168 rows=999 loops=1)
              Output: t1.id, t1.name
              Filter: (t1.id < 1000)
              Rows Removed by Filter: 99001
  ->  Materialize  (cost=97604.48..101037.29 rows=686562 width=36) (actual time=330.019..330.201 rows=1000 loops=1)
        Output: t2.id, t2.name
        ->  Sort  (cost=97604.48..99320.88 rows=686562 width=36) (actual time=330.011..330.099 rows=1000 loops=1)
              Output: t2.id, t2.name
              Sort Key: t2.id
              Sort Method: external merge  Disk: 24464kB
              ->  Seq Scan on public.t2  (cost=0.00..12271.62 rows=686562 width=36) (actual time=0.035..89.812 rows=1000000 loops=1)
                    Output: t2.id, t2.name
Planning Time: 1.910 ms
Execution Time: 345.490 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id
QUERYPLAN: 
Merge Join  (cost=106232.03..3646163.12 rows=235858077 width=72) (actual time=358.490..417.226 rows=100000 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Merge Cond: (t1.id = t2.id)
  ->  Sort  (cost=8627.55..8799.32 rows=68707 width=36) (actual time=26.460..34.804 rows=100000 loops=1)
        Output: t1.id, t1.name
        Sort Key: t1.id
        Sort Method: external merge  Disk: 2456kB
        ->  Seq Scan on public.t1  (cost=0.00..1228.07 rows=68707 width=36) (actual time=0.032..9.383 rows=100000 loops=1)
              Output: t1.id, t1.name
  ->  Materialize  (cost=97604.48..101037.29 rows=686562 width=36) (actual time=332.022..351.562 rows=100001 loops=1)
        Output: t2.id, t2.name
        ->  Sort  (cost=97604.48..99320.88 rows=686562 width=36) (actual time=332.017..342.082 rows=100001 loops=1)
              Output: t2.id, t2.name
              Sort Key: t2.id
              Sort Method: external merge  Disk: 24464kB
              ->  Seq Scan on public.t2  (cost=0.00..12271.62 rows=686562 width=36) (actual time=0.037..90.781 rows=1000000 loops=1)
                    Output: t2.id, t2.name
Planning Time: 1.538 ms
Execution Time: 425.587 ms
----------------------------------------------------------------------------------------------------
INDEXES:
INDEX ON t1(id): True, INDEX ON t2(id): False
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id = 10
QUERYPLAN: 
Nested Loop  (cost=1000.29..11622.75 rows=1 width=30) (actual time=0.612..74.662 rows=1 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  ->  Index Scan using t1_id_idx on public.t1  (cost=0.29..8.31 rows=1 width=15) (actual time=0.048..0.050 rows=1 loops=1)
        Output: t1.id, t1.name
        Index Cond: (t1.id = 10)
  ->  Gather  (cost=1000.00..11614.43 rows=1 width=15) (actual time=0.561..74.608 rows=1 loops=1)
        Output: t2.id, t2.name
        Workers Planned: 2
        Workers Launched: 2
        ->  Parallel Seq Scan on public.t2  (cost=0.00..10614.33 rows=1 width=15) (actual time=12.820..35.640 rows=0 loops=3)
              Output: t2.id, t2.name
              Filter: (t2.id = 10)
              Rows Removed by Filter: 333333
              Worker 0:  actual time=17.230..17.231 rows=0 loops=1
              Worker 1:  actual time=21.206..21.206 rows=0 loops=1
Planning Time: 1.875 ms
Execution Time: 74.780 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 10
QUERYPLAN: 
Gather  (cost=1008.56..12144.67 rows=9 width=30) (actual time=0.684..102.879 rows=9 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Workers Planned: 2
  Workers Launched: 2
  ->  Hash Join  (cost=8.56..11143.77 rows=4 width=30) (actual time=29.575..61.713 rows=3 loops=3)
        Output: t1.id, t1.name, t2.id, t2.name
        Hash Cond: (t2.id = t1.id)
        Worker 0:  actual time=45.713..45.715 rows=0 loops=1
        Worker 1:  actual time=42.944..42.945 rows=0 loops=1
        ->  Parallel Seq Scan on public.t2  (cost=0.00..9572.67 rows=416667 width=15) (actual time=0.020..33.374 rows=333333 loops=3)
              Output: t2.id, t2.name
              Worker 0:  actual time=0.020..25.466 rows=278980 loops=1
              Worker 1:  actual time=0.019..23.917 rows=258260 loops=1
        ->  Hash  (cost=8.45..8.45 rows=9 width=15) (actual time=0.045..0.046 rows=9 loops=3)
              Output: t1.id, t1.name
              Buckets: 1024  Batches: 1  Memory Usage: 9kB
              Worker 0:  actual time=0.056..0.056 rows=9 loops=1
              Worker 1:  actual time=0.052..0.052 rows=9 loops=1
              ->  Index Scan using t1_id_idx on public.t1  (cost=0.29..8.45 rows=9 width=15) (actual time=0.033..0.035 rows=9 loops=3)
                    Output: t1.id, t1.name
                    Index Cond: (t1.id < 10)
                    Worker 0:  actual time=0.045..0.047 rows=9 loops=1
                    Worker 1:  actual time=0.040..0.042 rows=9 loops=1
Planning Time: 2.212 ms
Execution Time: 102.929 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 1000
QUERYPLAN: 
Gather  (cost=1051.92..12293.44 rows=1021 width=30) (actual time=1.030..102.830 rows=999 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Workers Planned: 2
  Workers Launched: 2
  ->  Hash Join  (cost=51.92..11191.34 rows=425 width=30) (actual time=31.876..63.792 rows=333 loops=3)
        Output: t1.id, t1.name, t2.id, t2.name
        Hash Cond: (t2.id = t1.id)
        Worker 0:  actual time=49.231..49.232 rows=0 loops=1
        Worker 1:  actual time=45.980..45.981 rows=0 loops=1
        ->  Parallel Seq Scan on public.t2  (cost=0.00..9572.67 rows=416667 width=15) (actual time=0.020..31.704 rows=333333 loops=3)
              Output: t2.id, t2.name
              Worker 0:  actual time=0.020..24.836 rows=272875 loops=1
              Worker 1:  actual time=0.018..22.865 rows=245200 loops=1
        ->  Hash  (cost=39.16..39.16 rows=1021 width=15) (actual time=0.357..0.357 rows=999 loops=3)
              Output: t1.id, t1.name
              Buckets: 1024  Batches: 1  Memory Usage: 54kB
              Worker 0:  actual time=0.355..0.355 rows=999 loops=1
              Worker 1:  actual time=0.341..0.341 rows=999 loops=1
              ->  Index Scan using t1_id_idx on public.t1  (cost=0.29..39.16 rows=1021 width=15) (actual time=0.039..0.234 rows=999 loops=3)
                    Output: t1.id, t1.name
                    Index Cond: (t1.id < 1000)
                    Worker 0:  actual time=0.049..0.232 rows=999 loops=1
                    Worker 1:  actual time=0.045..0.218 rows=999 loops=1
Planning Time: 2.480 ms
Execution Time: 102.939 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id
QUERYPLAN: 
Hash Join  (cost=2791.00..22947.00 rows=100000 width=30) (actual time=21.983..258.137 rows=100000 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Hash Cond: (t2.id = t1.id)
  ->  Seq Scan on public.t2  (cost=0.00..15406.00 rows=1000000 width=15) (actual time=0.027..91.122 rows=1000000 loops=1)
        Output: t2.id, t2.name
  ->  Hash  (cost=1541.00..1541.00 rows=100000 width=15) (actual time=21.695..21.696 rows=100000 loops=1)
        Output: t1.id, t1.name
        Buckets: 131072  Batches: 1  Memory Usage: 5614kB
        ->  Seq Scan on public.t1  (cost=0.00..1541.00 rows=100000 width=15) (actual time=0.012..9.678 rows=100000 loops=1)
              Output: t1.id, t1.name
Planning Time: 1.819 ms
Execution Time: 261.563 ms
----------------------------------------------------------------------------------------------------
INDEXES:
INDEX ON t1(id): True, INDEX ON t2(id): True
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id = 10
QUERYPLAN: 
Nested Loop  (cost=0.72..16.76 rows=1 width=30) (actual time=0.114..0.115 rows=1 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  ->  Index Scan using t1_id_idx on public.t1  (cost=0.29..8.31 rows=1 width=15) (actual time=0.046..0.046 rows=1 loops=1)
        Output: t1.id, t1.name
        Index Cond: (t1.id = 10)
  ->  Index Scan using t2_id_idx on public.t2  (cost=0.42..8.44 rows=1 width=15) (actual time=0.064..0.065 rows=1 loops=1)
        Output: t2.id, t2.name
        Index Cond: (t2.id = 10)
Planning Time: 2.170 ms
Execution Time: 0.228 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 10
QUERYPLAN: 
Nested Loop  (cost=0.72..84.52 rows=9 width=30) (actual time=0.019..0.037 rows=9 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  ->  Index Scan using t1_id_idx on public.t1  (cost=0.29..8.45 rows=9 width=15) (actual time=0.008..0.009 rows=9 loops=1)
        Output: t1.id, t1.name
        Index Cond: (t1.id < 10)
  ->  Index Scan using t2_id_idx on public.t2  (cost=0.42..8.44 rows=1 width=15) (actual time=0.002..0.002 rows=1 loops=9)
        Output: t2.id, t2.name
        Index Cond: (t2.id = t1.id)
Planning Time: 2.846 ms
Execution Time: 0.064 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 1000
QUERYPLAN: 
Merge Join  (cost=0.76..3483.92 rows=1037 width=30) (actual time=0.019..0.718 rows=999 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Merge Cond: (t1.id = t2.id)
  ->  Index Scan using t1_id_idx on public.t1  (cost=0.29..39.44 rows=1037 width=15) (actual time=0.010..0.210 rows=999 loops=1)
        Output: t1.id, t1.name
        Index Cond: (t1.id < 1000)
  ->  Index Scan using t2_id_idx on public.t2  (cost=0.42..31389.42 rows=1000000 width=15) (actual time=0.005..0.220 rows=1000 loops=1)
        Output: t2.id, t2.name
Planning Time: 2.732 ms
Execution Time: 0.787 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id
QUERYPLAN: 
Merge Join  (cost=3.13..7829.81 rows=100000 width=30) (actual time=0.021..67.977 rows=100000 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Merge Cond: (t1.id = t2.id)
  ->  Index Scan using t1_id_idx on public.t1  (cost=0.29..3148.29 rows=100000 width=15) (actual time=0.005..19.209 rows=100000 loops=1)
        Output: t1.id, t1.name
  ->  Index Scan using t2_id_idx on public.t2  (cost=0.42..31389.42 rows=1000000 width=15) (actual time=0.010..19.248 rows=100001 loops=1)
        Output: t2.id, t2.name
Planning Time: 3.070 ms
Execution Time: 70.673 ms
----------------------------------------------------------------------------------------------------


----------------------------------------------------------------------------------------------------
TABLE SIZES:
T1 SIZE: 10000, T2 SIZE: 10000000
----------------------------------------------------------------------------------------------------
INDEXES:
INDEX ON t1(id): False, INDEX ON t2(id): False
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id = 10
QUERYPLAN: 
Nested Loop  (cost=1000.00..243240.83 rows=11807800 width=72) (actual time=0.681..684.039 rows=1 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  ->  Gather  (cost=1000.00..94242.63 rows=34325 width=36) (actual time=0.629..656.830 rows=1 loops=1)
        Output: t2.id, t2.name
        Workers Planned: 2
        Workers Launched: 2
        ->  Parallel Seq Scan on public.t2  (cost=0.00..89810.13 rows=14302 width=36) (actual time=414.562..630.379 rows=0 loops=3)
              Output: t2.id, t2.name
              Filter: (t2.id = 10)
              Rows Removed by Filter: 3333333
              Worker 0:  actual time=622.590..622.591 rows=0 loops=1
              Worker 1:  actual time=621.039..621.040 rows=0 loops=1
  ->  Materialize  (cost=0.00..1401.56 rows=344 width=36) (actual time=0.051..27.204 rows=1 loops=1)
        Output: t1.id, t1.name
        ->  Seq Scan on public.t1  (cost=0.00..1399.84 rows=344 width=36) (actual time=0.040..27.193 rows=1 loops=1)
              Output: t1.id, t1.name
              Filter: (t1.id = 10)
              Rows Removed by Filter: 99999
Planning Time: 4.374 ms
Execution Time: 684.233 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 10
QUERYPLAN: 
Merge Join  (cost=1280741.53..13089659.98 rows=786109432 width=72) (actual time=3266.179..3266.188 rows=9 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Merge Cond: (t1.id = t2.id)
  ->  Sort  (cost=3058.31..3115.56 rows=22902 width=36) (actual time=9.883..9.884 rows=9 loops=1)
        Output: t1.id, t1.name
        Sort Key: t1.id
        Sort Method: quicksort  Memory: 25kB
        ->  Seq Scan on public.t1  (cost=0.00..1399.84 rows=22902 width=36) (actual time=0.027..9.865 rows=9 loops=1)
              Output: t1.id, t1.name
              Filter: (t1.id < 10)
              Rows Removed by Filter: 99991
  ->  Materialize  (cost=1277683.22..1312008.14 rows=6864985 width=36) (actual time=3256.291..3256.293 rows=10 loops=1)
        Output: t2.id, t2.name
        ->  Sort  (cost=1277683.22..1294845.68 rows=6864985 width=36) (actual time=3256.286..3256.288 rows=10 loops=1)
              Output: t2.id, t2.name
              Sort Key: t2.id
              Sort Method: external merge  Disk: 244440kB
              ->  Seq Scan on public.t2  (cost=0.00..122704.85 rows=6864985 width=36) (actual time=0.066..964.065 rows=10000000 loops=1)
                    Output: t2.id, t2.name
Planning Time: 4.984 ms
Execution Time: 3292.053 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 1000
QUERYPLAN: 
Merge Join  (cost=1281978.31..18461598.31 rows=1144152725 width=72) (actual time=3025.477..3026.023 rows=999 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Merge Cond: (t1.id = t2.id)
  ->  Sort  (cost=4295.09..4378.42 rows=33333 width=36) (actual time=21.470..21.514 rows=999 loops=1)
        Output: t1.id, t1.name
        Sort Key: t1.id
        Sort Method: quicksort  Memory: 64kB
        ->  Seq Scan on public.t1  (cost=0.00..1791.00 rows=33333 width=36) (actual time=0.028..21.299 rows=999 loops=1)
              Output: t1.id, t1.name
              Filter: (t1.id < 1000)
              Rows Removed by Filter: 99001
  ->  Materialize  (cost=1277683.22..1312008.14 rows=6864985 width=36) (actual time=3004.001..3004.192 rows=1000 loops=1)
        Output: t2.id, t2.name
        ->  Sort  (cost=1277683.22..1294845.68 rows=6864985 width=36) (actual time=3003.980..3004.075 rows=1000 loops=1)
              Output: t2.id, t2.name
              Sort Key: t2.id
              Sort Method: external merge  Disk: 244440kB
              ->  Seq Scan on public.t2  (cost=0.00..122704.85 rows=6864985 width=36) (actual time=0.080..862.441 rows=10000000 loops=1)
                    Output: t2.id, t2.name
Planning Time: 1.613 ms
Execution Time: 3051.897 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id
QUERYPLAN: 
Hash Join  (cost=2791.00..219889.39 rows=6864985 width=51) (actual time=21.773..2354.942 rows=100000 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Hash Cond: (t2.id = t1.id)
  ->  Seq Scan on public.t2  (cost=0.00..122704.85 rows=6864985 width=36) (actual time=1.361..972.059 rows=10000000 loops=1)
        Output: t2.id, t2.name
  ->  Hash  (cost=1541.00..1541.00 rows=100000 width=15) (actual time=20.164..20.165 rows=100000 loops=1)
        Output: t1.id, t1.name
        Buckets: 131072  Batches: 1  Memory Usage: 5614kB
        ->  Seq Scan on public.t1  (cost=0.00..1541.00 rows=100000 width=15) (actual time=0.016..7.090 rows=100000 loops=1)
              Output: t1.id, t1.name
Planning Time: 1.533 ms
Execution Time: 2358.466 ms
----------------------------------------------------------------------------------------------------
INDEXES:
INDEX ON t1(id): True, INDEX ON t2(id): False
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id = 10
QUERYPLAN: 
Nested Loop  (cost=1000.29..107146.02 rows=1 width=30) (actual time=0.607..415.074 rows=1 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  ->  Index Scan using t1_id_idx on public.t1  (cost=0.29..8.31 rows=1 width=15) (actual time=0.055..0.058 rows=1 loops=1)
        Output: t1.id, t1.name
        Index Cond: (t1.id = 10)
  ->  Gather  (cost=1000.00..107137.70 rows=1 width=15) (actual time=0.550..415.013 rows=1 loops=1)
        Output: t2.id, t2.name
        Workers Planned: 2
        Workers Launched: 2
        ->  Parallel Seq Scan on public.t2  (cost=0.00..106137.60 rows=1 width=15) (actual time=234.981..370.198 rows=0 loops=3)
              Output: t2.id, t2.name
              Filter: (t2.id = 10)
              Rows Removed by Filter: 3333333
              Worker 0:  actual time=351.851..351.851 rows=0 loops=1
              Worker 1:  actual time=353.042..353.043 rows=0 loops=1
Planning Time: 1.872 ms
Execution Time: 415.259 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 10
QUERYPLAN: 
Gather  (cost=1008.59..112355.50 rows=10 width=30) (actual time=0.637..633.865 rows=9 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Workers Planned: 2
  Workers Launched: 2
  ->  Hash Join  (cost=8.59..111354.50 rows=4 width=30) (actual time=383.295..591.224 rows=3 loops=3)
        Output: t1.id, t1.name, t2.id, t2.name
        Hash Cond: (t2.id = t1.id)
        Worker 0:  actual time=573.747..573.749 rows=0 loops=1
        Worker 1:  actual time=576.041..576.043 rows=0 loops=1
        ->  Parallel Seq Scan on public.t2  (cost=0.00..95721.08 rows=4166608 width=15) (actual time=0.301..341.654 rows=3333333 loops=3)
              Output: t2.id, t2.name
              Worker 0:  actual time=0.443..334.755 rows=3289865 loops=1
              Worker 1:  actual time=0.408..333.488 rows=3285785 loops=1
        ->  Hash  (cost=8.47..8.47 rows=10 width=15) (actual time=0.042..0.042 rows=9 loops=3)
              Output: t1.id, t1.name
              Buckets: 1024  Batches: 1  Memory Usage: 9kB
              Worker 0:  actual time=0.048..0.048 rows=9 loops=1
              Worker 1:  actual time=0.049..0.050 rows=9 loops=1
              ->  Index Scan using t1_id_idx on public.t1  (cost=0.29..8.47 rows=10 width=15) (actual time=0.029..0.031 rows=9 loops=3)
                    Output: t1.id, t1.name
                    Index Cond: (t1.id < 10)
                    Worker 0:  actual time=0.036..0.038 rows=9 loops=1
                    Worker 1:  actual time=0.037..0.039 rows=9 loops=1
Planning Time: 2.477 ms
Execution Time: 633.968 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 1000
QUERYPLAN: 
Gather  (cost=1053.15..112509.64 rows=1062 width=30) (actual time=1.950..686.984 rows=999 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Workers Planned: 2
  Workers Launched: 2
  ->  Hash Join  (cost=53.15..111403.44 rows=442 width=30) (actual time=417.518..642.739 rows=333 loops=3)
        Output: t1.id, t1.name, t2.id, t2.name
        Hash Cond: (t2.id = t1.id)
        Worker 0:  actual time=625.207..625.208 rows=0 loops=1
        Worker 1:  actual time=625.981..625.983 rows=0 loops=1
        ->  Parallel Seq Scan on public.t2  (cost=0.00..95721.08 rows=4166608 width=15) (actual time=0.628..354.564 rows=3333333 loops=3)
              Output: t2.id, t2.name
              Worker 0:  actual time=0.445..345.537 rows=3358860 loops=1
              Worker 1:  actual time=0.874..343.075 rows=3235835 loops=1
        ->  Hash  (cost=39.88..39.88 rows=1062 width=15) (actual time=0.508..0.508 rows=999 loops=3)
              Output: t1.id, t1.name
              Buckets: 2048  Batches: 1  Memory Usage: 62kB
              Worker 0:  actual time=0.381..0.382 rows=999 loops=1
              Worker 1:  actual time=0.364..0.364 rows=999 loops=1
              ->  Index Scan using t1_id_idx on public.t1  (cost=0.29..39.88 rows=1062 width=15) (actual time=0.041..0.378 rows=999 loops=3)
                    Output: t1.id, t1.name
                    Index Cond: (t1.id < 1000)
                    Worker 0:  actual time=0.038..0.244 rows=999 loops=1
                    Worker 1:  actual time=0.050..0.246 rows=999 loops=1
Planning Time: 2.730 ms
Execution Time: 687.155 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id
QUERYPLAN: 
Gather  (cost=3791.00..125553.53 rows=100000 width=30) (actual time=40.102..1013.488 rows=100000 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Workers Planned: 2
  Workers Launched: 2
  ->  Hash Join  (cost=2791.00..114553.53 rows=41667 width=30) (actual time=28.891..963.764 rows=33333 loops=3)
        Output: t1.id, t1.name, t2.id, t2.name
        Hash Cond: (t2.id = t1.id)
        Worker 0:  actual time=22.891..949.609 rows=17760 loops=1
        Worker 1:  actual time=24.209..952.887 rows=17760 loops=1
        ->  Parallel Seq Scan on public.t2  (cost=0.00..95721.08 rows=4166608 width=15) (actual time=0.734..348.584 rows=3333333 loops=3)
              Output: t2.id, t2.name
              Worker 0:  actual time=0.410..347.110 rows=3368665 loops=1
              Worker 1:  actual time=0.450..345.625 rows=3361275 loops=1
        ->  Hash  (cost=1541.00..1541.00 rows=100000 width=15) (actual time=27.643..27.644 rows=100000 loops=3)
              Output: t1.id, t1.name
              Buckets: 131072  Batches: 1  Memory Usage: 5614kB
              Worker 0:  actual time=21.895..21.896 rows=100000 loops=1
              Worker 1:  actual time=23.161..23.162 rows=100000 loops=1
              ->  Seq Scan on public.t1  (cost=0.00..1541.00 rows=100000 width=15) (actual time=0.289..11.162 rows=100000 loops=3)
                    Output: t1.id, t1.name
                    Worker 0:  actual time=0.442..7.629 rows=100000 loops=1
                    Worker 1:  actual time=0.390..8.008 rows=100000 loops=1
Planning Time: 2.196 ms
Execution Time: 1017.283 ms
----------------------------------------------------------------------------------------------------
INDEXES:
INDEX ON t1(id): True, INDEX ON t2(id): True
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id = 10
QUERYPLAN: 
Nested Loop  (cost=0.73..16.77 rows=1 width=30) (actual time=0.173..0.175 rows=1 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  ->  Index Scan using t1_id_idx on public.t1  (cost=0.29..8.31 rows=1 width=15) (actual time=0.069..0.069 rows=1 loops=1)
        Output: t1.id, t1.name
        Index Cond: (t1.id = 10)
  ->  Index Scan using t2_id_idx on public.t2  (cost=0.43..8.45 rows=1 width=15) (actual time=0.101..0.101 rows=1 loops=1)
        Output: t2.id, t2.name
        Index Cond: (t2.id = 10)
Planning Time: 3.707 ms
Execution Time: 0.311 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 10
QUERYPLAN: 
Nested Loop  (cost=0.73..84.61 rows=9 width=30) (actual time=0.043..0.062 rows=9 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  ->  Index Scan using t1_id_idx on public.t1  (cost=0.29..8.45 rows=9 width=15) (actual time=0.025..0.027 rows=9 loops=1)
        Output: t1.id, t1.name
        Index Cond: (t1.id < 10)
  ->  Index Scan using t2_id_idx on public.t2  (cost=0.43..8.45 rows=1 width=15) (actual time=0.003..0.003 rows=1 loops=9)
        Output: t2.id, t2.name
        Index Cond: (t2.id = t1.id)
Planning Time: 4.735 ms
Execution Time: 0.097 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 1000
QUERYPLAN: 
Merge Join  (cost=0.98..3744.09 rows=982 width=30) (actual time=0.037..0.841 rows=999 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Merge Cond: (t1.id = t2.id)
  ->  Index Scan using t1_id_idx on public.t1  (cost=0.29..38.48 rows=982 width=15) (actual time=0.016..0.232 rows=999 loops=1)
        Output: t1.id, t1.name
        Index Cond: (t1.id < 1000)
  ->  Index Scan using t2_id_idx on public.t2  (cost=0.43..313744.34 rows=9999860 width=15) (actual time=0.016..0.321 rows=1000 loops=1)
        Output: t2.id, t2.name
Planning Time: 3.708 ms
Execution Time: 0.919 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id
QUERYPLAN: 
Merge Join  (cost=20.84..8091.63 rows=100000 width=30) (actual time=0.033..69.668 rows=100000 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Merge Cond: (t1.id = t2.id)
  ->  Index Scan using t1_id_idx on public.t1  (cost=0.29..3148.29 rows=100000 width=15) (actual time=0.013..19.119 rows=100000 loops=1)
        Output: t1.id, t1.name
  ->  Index Scan using t2_id_idx on public.t2  (cost=0.43..313744.34 rows=9999860 width=15) (actual time=0.016..22.110 rows=100001 loops=1)
        Output: t2.id, t2.name
Planning Time: 3.965 ms
Execution Time: 72.492 ms
----------------------------------------------------------------------------------------------------


----------------------------------------------------------------------------------------------------
TABLE SIZES:
T1 SIZE: 1000000, T2 SIZE: 1
----------------------------------------------------------------------------------------------------
INDEXES:
INDEX ON t1(id): False, INDEX ON t2(id): False
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id = 10
QUERYPLAN: 
Nested Loop  (cost=1000.00..26487.74 rows=1180952 width=72) (actual time=0.674..101.514 rows=1 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  ->  Gather  (cost=1000.00..10325.14 rows=3433 width=36) (actual time=0.625..81.207 rows=1 loops=1)
        Output: t1.id, t1.name
        Workers Planned: 2
        Workers Launched: 2
        ->  Parallel Seq Scan on public.t1  (cost=0.00..8981.84 rows=1430 width=36) (actual time=28.026..52.784 rows=0 loops=3)
              Output: t1.id, t1.name
              Filter: (t1.id = 10)
              Rows Removed by Filter: 333333
              Worker 0:  actual time=42.259..42.260 rows=0 loops=1
              Worker 1:  actual time=41.772..41.773 rows=0 loops=1
  ->  Materialize  (cost=0.00..1401.56 rows=344 width=36) (actual time=0.047..20.303 rows=1 loops=1)
        Output: t2.id, t2.name
        ->  Seq Scan on public.t2  (cost=0.00..1399.84 rows=344 width=36) (actual time=0.042..20.297 rows=1 loops=1)
              Output: t2.id, t2.name
              Filter: (t2.id = 10)
              Rows Removed by Filter: 99999
Planning Time: 1.302 ms
Execution Time: 101.629 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 10
QUERYPLAN: 
Merge Join  (cost=49246.23..1229452.29 rows=78619359 width=72) (actual time=121.967..121.976 rows=9 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Merge Cond: (t2.id = t1.id)
  ->  Sort  (cost=8627.55..8799.32 rows=68707 width=36) (actual time=25.891..25.893 rows=10 loops=1)
        Output: t2.id, t2.name
        Sort Key: t2.id
        Sort Method: external merge  Disk: 2456kB
        ->  Seq Scan on public.t2  (cost=0.00..1228.07 rows=68707 width=36) (actual time=0.034..9.286 rows=100000 loops=1)
              Output: t2.id, t2.name
  ->  Materialize  (cost=40618.69..41762.96 rows=228854 width=36) (actual time=96.070..96.072 rows=9 loops=1)
        Output: t1.id, t1.name
        ->  Sort  (cost=40618.69..41190.82 rows=228854 width=36) (actual time=96.065..96.066 rows=9 loops=1)
              Output: t1.id, t1.name
              Sort Key: t1.id
              Sort Method: quicksort  Memory: 25kB
              ->  Seq Scan on public.t1  (cost=0.00..13988.02 rows=228854 width=36) (actual time=0.040..96.053 rows=9 loops=1)
                    Output: t1.id, t1.name
                    Filter: (t1.id < 10)
                    Rows Removed by Filter: 999991
Planning Time: 1.791 ms
Execution Time: 123.804 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 1000
QUERYPLAN: 
Merge Join  (cost=49246.23..1229452.29 rows=78619359 width=72) (actual time=122.811..123.333 rows=999 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Merge Cond: (t2.id = t1.id)
  ->  Sort  (cost=8627.55..8799.32 rows=68707 width=36) (actual time=25.919..26.002 rows=1000 loops=1)
        Output: t2.id, t2.name
        Sort Key: t2.id
        Sort Method: external merge  Disk: 2456kB
        ->  Seq Scan on public.t2  (cost=0.00..1228.07 rows=68707 width=36) (actual time=0.030..9.507 rows=100000 loops=1)
              Output: t2.id, t2.name
  ->  Materialize  (cost=40618.69..41762.96 rows=228854 width=36) (actual time=96.887..97.023 rows=999 loops=1)
        Output: t1.id, t1.name
        ->  Sort  (cost=40618.69..41190.82 rows=228854 width=36) (actual time=96.882..96.923 rows=999 loops=1)
              Output: t1.id, t1.name
              Sort Key: t1.id
              Sort Method: quicksort  Memory: 64kB
              ->  Seq Scan on public.t1  (cost=0.00..13988.02 rows=228854 width=36) (actual time=0.037..96.795 rows=999 loops=1)
                    Output: t1.id, t1.name
                    Filter: (t1.id < 1000)
                    Rows Removed by Filter: 999001
Planning Time: 1.314 ms
Execution Time: 125.344 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id
QUERYPLAN: 
Merge Join  (cost=106232.03..3646163.12 rows=235858077 width=72) (actual time=343.457..408.992 rows=100000 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Merge Cond: (t2.id = t1.id)
  ->  Sort  (cost=8627.55..8799.32 rows=68707 width=36) (actual time=26.409..35.827 rows=100000 loops=1)
        Output: t2.id, t2.name
        Sort Key: t2.id
        Sort Method: external merge  Disk: 2456kB
        ->  Seq Scan on public.t2  (cost=0.00..1228.07 rows=68707 width=36) (actual time=0.030..9.408 rows=100000 loops=1)
              Output: t2.id, t2.name
  ->  Materialize  (cost=97604.48..101037.29 rows=686562 width=36) (actual time=317.041..338.467 rows=100001 loops=1)
        Output: t1.id, t1.name
        ->  Sort  (cost=97604.48..99320.88 rows=686562 width=36) (actual time=317.031..327.719 rows=100001 loops=1)
              Output: t1.id, t1.name
              Sort Key: t1.id
              Sort Method: external merge  Disk: 24464kB
              ->  Seq Scan on public.t1  (cost=0.00..12271.62 rows=686562 width=36) (actual time=0.039..90.060 rows=1000000 loops=1)
                    Output: t1.id, t1.name
Planning Time: 1.321 ms
Execution Time: 417.340 ms
----------------------------------------------------------------------------------------------------
INDEXES:
INDEX ON t1(id): True, INDEX ON t2(id): False
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id = 10
QUERYPLAN: 
Nested Loop  (cost=0.42..1799.45 rows=1 width=30) (actual time=0.110..10.066 rows=1 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  ->  Index Scan using t1_id_idx on public.t1  (cost=0.42..8.44 rows=1 width=15) (actual time=0.079..0.081 rows=1 loops=1)
        Output: t1.id, t1.name
        Index Cond: (t1.id = 10)
  ->  Seq Scan on public.t2  (cost=0.00..1791.00 rows=1 width=15) (actual time=0.029..9.981 rows=1 loops=1)
        Output: t2.id, t2.name
        Filter: (t2.id = 10)
        Rows Removed by Filter: 99999
Planning Time: 1.814 ms
Execution Time: 10.183 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 10
QUERYPLAN: 
Hash Join  (cost=8.70..1924.70 rows=1 width=30) (actual time=0.060..17.065 rows=9 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Hash Cond: (t2.id = t1.id)
  ->  Seq Scan on public.t2  (cost=0.00..1541.00 rows=100000 width=15) (actual time=0.026..9.802 rows=100000 loops=1)
        Output: t2.id, t2.name
  ->  Hash  (cost=8.58..8.58 rows=9 width=15) (actual time=0.024..0.025 rows=9 loops=1)
        Output: t1.id, t1.name
        Buckets: 1024  Batches: 1  Memory Usage: 9kB
        ->  Index Scan using t1_id_idx on public.t1  (cost=0.42..8.58 rows=9 width=15) (actual time=0.014..0.015 rows=9 loops=1)
              Output: t1.id, t1.name
              Index Cond: (t1.id < 10)
Planning Time: 2.107 ms
Execution Time: 17.092 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 1000
QUERYPLAN: 
Hash Join  (cost=51.72..1968.73 rows=101 width=30) (actual time=0.400..18.710 rows=999 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Hash Cond: (t2.id = t1.id)
  ->  Seq Scan on public.t2  (cost=0.00..1541.00 rows=100000 width=15) (actual time=0.029..9.528 rows=100000 loops=1)
        Output: t2.id, t2.name
  ->  Hash  (cost=39.10..39.10 rows=1010 width=15) (actual time=0.361..0.362 rows=999 loops=1)
        Output: t1.id, t1.name
        Buckets: 1024  Batches: 1  Memory Usage: 54kB
        ->  Index Scan using t1_id_idx on public.t1  (cost=0.42..39.10 rows=1010 width=15) (actual time=0.015..0.239 rows=999 loops=1)
              Output: t1.id, t1.name
              Index Cond: (t1.id < 1000)
Planning Time: 2.494 ms
Execution Time: 18.770 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id
QUERYPLAN: 
Merge Join  (cost=9846.30..14764.22 rows=100000 width=30) (actual time=37.003..95.593 rows=100000 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Merge Cond: (t1.id = t2.id)
  ->  Index Scan using t1_id_idx on public.t1  (cost=0.42..31389.42 rows=1000000 width=15) (actual time=0.008..19.412 rows=100001 loops=1)
        Output: t1.id, t1.name
  ->  Sort  (cost=9845.82..10095.82 rows=100000 width=15) (actual time=36.988..46.346 rows=100000 loops=1)
        Output: t2.id, t2.name
        Sort Key: t2.id
        Sort Method: external sort  Disk: 2848kB
        ->  Seq Scan on public.t2  (cost=0.00..1541.00 rows=100000 width=15) (actual time=0.031..9.206 rows=100000 loops=1)
              Output: t2.id, t2.name
Planning Time: 2.325 ms
Execution Time: 99.889 ms
----------------------------------------------------------------------------------------------------
INDEXES:
INDEX ON t1(id): True, INDEX ON t2(id): True
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id = 10
QUERYPLAN: 
Nested Loop  (cost=0.72..16.76 rows=1 width=30) (actual time=0.127..0.129 rows=1 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  ->  Index Scan using t1_id_idx on public.t1  (cost=0.42..8.44 rows=1 width=15) (actual time=0.069..0.070 rows=1 loops=1)
        Output: t1.id, t1.name
        Index Cond: (t1.id = 10)
  ->  Index Scan using t2_id_idx on public.t2  (cost=0.29..8.31 rows=1 width=15) (actual time=0.054..0.055 rows=1 loops=1)
        Output: t2.id, t2.name
        Index Cond: (t2.id = 10)
Planning Time: 2.216 ms
Execution Time: 0.255 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 10
QUERYPLAN: 
Nested Loop  (cost=0.72..83.46 rows=1 width=30) (actual time=0.014..0.029 rows=9 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  ->  Index Scan using t1_id_idx on public.t1  (cost=0.42..8.58 rows=9 width=15) (actual time=0.004..0.005 rows=9 loops=1)
        Output: t1.id, t1.name
        Index Cond: (t1.id < 10)
  ->  Index Scan using t2_id_idx on public.t2  (cost=0.29..8.31 rows=1 width=15) (actual time=0.002..0.002 rows=1 loops=9)
        Output: t2.id, t2.name
        Index Cond: (t2.id = t1.id)
Planning Time: 2.596 ms
Execution Time: 0.056 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 1000
QUERYPLAN: 
Hash Join  (cost=50.64..1967.62 rows=97 width=30) (actual time=0.391..18.112 rows=999 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Hash Cond: (t2.id = t1.id)
  ->  Seq Scan on public.t2  (cost=0.00..1541.00 rows=100000 width=15) (actual time=0.015..8.963 rows=100000 loops=1)
        Output: t2.id, t2.name
  ->  Hash  (cost=38.47..38.47 rows=974 width=15) (actual time=0.365..0.366 rows=999 loops=1)
        Output: t1.id, t1.name
        Buckets: 1024  Batches: 1  Memory Usage: 54kB
        ->  Index Scan using t1_id_idx on public.t1  (cost=0.42..38.47 rows=974 width=15) (actual time=0.020..0.244 rows=999 loops=1)
              Output: t1.id, t1.name
              Index Cond: (t1.id < 1000)
Planning Time: 2.965 ms
Execution Time: 18.172 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id
QUERYPLAN: 
Merge Join  (cost=0.75..7789.11 rows=100000 width=30) (actual time=0.016..66.159 rows=100000 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Merge Cond: (t1.id = t2.id)
  ->  Index Scan using t1_id_idx on public.t1  (cost=0.42..31389.42 rows=1000000 width=15) (actual time=0.007..19.118 rows=100001 loops=1)
        Output: t1.id, t1.name
  ->  Index Scan using t2_id_idx on public.t2  (cost=0.29..3148.29 rows=100000 width=15) (actual time=0.005..19.282 rows=100000 loops=1)
        Output: t2.id, t2.name
Planning Time: 3.046 ms
Execution Time: 68.837 ms
----------------------------------------------------------------------------------------------------


----------------------------------------------------------------------------------------------------
TABLE SIZES:
T1 SIZE: 1000000, T2 SIZE: 100
----------------------------------------------------------------------------------------------------
INDEXES:
INDEX ON t1(id): False, INDEX ON t2(id): False
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id = 10
QUERYPLAN: 
Nested Loop  (cost=1000.00..26487.74 rows=1180952 width=72) (actual time=0.685..91.065 rows=1 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  ->  Gather  (cost=1000.00..10325.14 rows=3433 width=36) (actual time=0.633..71.018 rows=1 loops=1)
        Output: t1.id, t1.name
        Workers Planned: 2
        Workers Launched: 2
        ->  Parallel Seq Scan on public.t1  (cost=0.00..8981.84 rows=1430 width=36) (actual time=23.776..45.158 rows=0 loops=3)
              Output: t1.id, t1.name
              Filter: (t1.id = 10)
              Rows Removed by Filter: 333333
              Worker 0:  actual time=37.283..37.284 rows=0 loops=1
              Worker 1:  actual time=34.000..34.000 rows=0 loops=1
  ->  Materialize  (cost=0.00..1401.56 rows=344 width=36) (actual time=0.050..20.042 rows=1 loops=1)
        Output: t2.id, t2.name
        ->  Seq Scan on public.t2  (cost=0.00..1399.84 rows=344 width=36) (actual time=0.036..20.027 rows=1 loops=1)
              Output: t2.id, t2.name
              Filter: (t2.id = 10)
              Rows Removed by Filter: 99999
Planning Time: 1.254 ms
Execution Time: 91.178 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 10
QUERYPLAN: 
Merge Join  (cost=49246.23..1229452.29 rows=78619359 width=72) (actual time=123.224..123.233 rows=9 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Merge Cond: (t2.id = t1.id)
  ->  Sort  (cost=8627.55..8799.32 rows=68707 width=36) (actual time=26.088..26.090 rows=10 loops=1)
        Output: t2.id, t2.name
        Sort Key: t2.id
        Sort Method: external merge  Disk: 2456kB
        ->  Seq Scan on public.t2  (cost=0.00..1228.07 rows=68707 width=36) (actual time=0.030..9.193 rows=100000 loops=1)
              Output: t2.id, t2.name
  ->  Materialize  (cost=40618.69..41762.96 rows=228854 width=36) (actual time=97.130..97.132 rows=9 loops=1)
        Output: t1.id, t1.name
        ->  Sort  (cost=40618.69..41190.82 rows=228854 width=36) (actual time=97.125..97.127 rows=9 loops=1)
              Output: t1.id, t1.name
              Sort Key: t1.id
              Sort Method: quicksort  Memory: 25kB
              ->  Seq Scan on public.t1  (cost=0.00..13988.02 rows=228854 width=36) (actual time=0.033..97.112 rows=9 loops=1)
                    Output: t1.id, t1.name
                    Filter: (t1.id < 10)
                    Rows Removed by Filter: 999991
Planning Time: 1.789 ms
Execution Time: 125.196 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 1000
QUERYPLAN: 
Merge Join  (cost=49246.23..1229452.29 rows=78619359 width=72) (actual time=123.303..123.830 rows=999 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Merge Cond: (t2.id = t1.id)
  ->  Sort  (cost=8627.55..8799.32 rows=68707 width=36) (actual time=25.846..25.933 rows=1000 loops=1)
        Output: t2.id, t2.name
        Sort Key: t2.id
        Sort Method: external merge  Disk: 2456kB
        ->  Seq Scan on public.t2  (cost=0.00..1228.07 rows=68707 width=36) (actual time=0.031..9.270 rows=100000 loops=1)
              Output: t2.id, t2.name
  ->  Materialize  (cost=40618.69..41762.96 rows=228854 width=36) (actual time=97.451..97.590 rows=999 loops=1)
        Output: t1.id, t1.name
        ->  Sort  (cost=40618.69..41190.82 rows=228854 width=36) (actual time=97.442..97.484 rows=999 loops=1)
              Output: t1.id, t1.name
              Sort Key: t1.id
              Sort Method: quicksort  Memory: 64kB
              ->  Seq Scan on public.t1  (cost=0.00..13988.02 rows=228854 width=36) (actual time=0.030..97.364 rows=999 loops=1)
                    Output: t1.id, t1.name
                    Filter: (t1.id < 1000)
                    Rows Removed by Filter: 999001
Planning Time: 1.508 ms
Execution Time: 125.745 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id
QUERYPLAN: 
Merge Join  (cost=106232.03..3646163.12 rows=235858077 width=72) (actual time=361.236..426.386 rows=100000 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Merge Cond: (t2.id = t1.id)
  ->  Sort  (cost=8627.55..8799.32 rows=68707 width=36) (actual time=25.935..34.918 rows=100000 loops=1)
        Output: t2.id, t2.name
        Sort Key: t2.id
        Sort Method: external merge  Disk: 2456kB
        ->  Seq Scan on public.t2  (cost=0.00..1228.07 rows=68707 width=36) (actual time=0.030..9.257 rows=100000 loops=1)
              Output: t2.id, t2.name
  ->  Materialize  (cost=97604.48..101037.29 rows=686562 width=36) (actual time=335.294..356.542 rows=100001 loops=1)
        Output: t1.id, t1.name
        ->  Sort  (cost=97604.48..99320.88 rows=686562 width=36) (actual time=335.284..345.861 rows=100001 loops=1)
              Output: t1.id, t1.name
              Sort Key: t1.id
              Sort Method: external merge  Disk: 24464kB
              ->  Seq Scan on public.t1  (cost=0.00..12271.62 rows=686562 width=36) (actual time=0.032..94.964 rows=1000000 loops=1)
                    Output: t1.id, t1.name
Planning Time: 1.508 ms
Execution Time: 435.009 ms
----------------------------------------------------------------------------------------------------
INDEXES:
INDEX ON t1(id): True, INDEX ON t2(id): False
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id = 10
QUERYPLAN: 
Nested Loop  (cost=0.42..1799.45 rows=1 width=30) (actual time=0.111..10.253 rows=1 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  ->  Index Scan using t1_id_idx on public.t1  (cost=0.42..8.44 rows=1 width=15) (actual time=0.084..0.087 rows=1 loops=1)
        Output: t1.id, t1.name
        Index Cond: (t1.id = 10)
  ->  Seq Scan on public.t2  (cost=0.00..1791.00 rows=1 width=15) (actual time=0.025..10.162 rows=1 loops=1)
        Output: t2.id, t2.name
        Filter: (t2.id = 10)
        Rows Removed by Filter: 99999
Planning Time: 1.967 ms
Execution Time: 10.374 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 10
QUERYPLAN: 
Hash Join  (cost=8.70..1924.70 rows=1 width=30) (actual time=0.052..16.158 rows=9 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Hash Cond: (t2.id = t1.id)
  ->  Seq Scan on public.t2  (cost=0.00..1541.00 rows=100000 width=15) (actual time=0.022..9.063 rows=100000 loops=1)
        Output: t2.id, t2.name
  ->  Hash  (cost=8.58..8.58 rows=9 width=15) (actual time=0.016..0.017 rows=9 loops=1)
        Output: t1.id, t1.name
        Buckets: 1024  Batches: 1  Memory Usage: 9kB
        ->  Index Scan using t1_id_idx on public.t1  (cost=0.42..8.58 rows=9 width=15) (actual time=0.004..0.006 rows=9 loops=1)
              Output: t1.id, t1.name
              Index Cond: (t1.id < 10)
Planning Time: 2.278 ms
Execution Time: 16.189 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 1000
QUERYPLAN: 
Hash Join  (cost=52.83..1969.88 rows=105 width=30) (actual time=0.395..17.857 rows=999 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Hash Cond: (t2.id = t1.id)
  ->  Seq Scan on public.t2  (cost=0.00..1541.00 rows=100000 width=15) (actual time=0.023..9.387 rows=100000 loops=1)
        Output: t2.id, t2.name
  ->  Hash  (cost=39.75..39.75 rows=1047 width=15) (actual time=0.365..0.366 rows=999 loops=1)
        Output: t1.id, t1.name
        Buckets: 2048  Batches: 1  Memory Usage: 62kB
        ->  Index Scan using t1_id_idx on public.t1  (cost=0.42..39.75 rows=1047 width=15) (actual time=0.015..0.242 rows=999 loops=1)
              Output: t1.id, t1.name
              Index Cond: (t1.id < 1000)
Planning Time: 2.639 ms
Execution Time: 17.943 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id
QUERYPLAN: 
Merge Join  (cost=9846.30..14755.31 rows=100000 width=30) (actual time=37.750..96.572 rows=100000 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Merge Cond: (t1.id = t2.id)
  ->  Index Scan using t1_id_idx on public.t1  (cost=0.42..31389.42 rows=1000000 width=15) (actual time=0.007..19.349 rows=100001 loops=1)
        Output: t1.id, t1.name
  ->  Sort  (cost=9845.82..10095.82 rows=100000 width=15) (actual time=37.735..47.302 rows=100000 loops=1)
        Output: t2.id, t2.name
        Sort Key: t2.id
        Sort Method: external sort  Disk: 2848kB
        ->  Seq Scan on public.t2  (cost=0.00..1541.00 rows=100000 width=15) (actual time=0.027..9.505 rows=100000 loops=1)
              Output: t2.id, t2.name
Planning Time: 2.275 ms
Execution Time: 100.640 ms
----------------------------------------------------------------------------------------------------
INDEXES:
INDEX ON t1(id): True, INDEX ON t2(id): True
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id = 10
QUERYPLAN: 
Nested Loop  (cost=0.72..16.76 rows=1 width=30) (actual time=0.126..0.128 rows=1 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  ->  Index Scan using t1_id_idx on public.t1  (cost=0.42..8.44 rows=1 width=15) (actual time=0.073..0.073 rows=1 loops=1)
        Output: t1.id, t1.name
        Index Cond: (t1.id = 10)
  ->  Index Scan using t2_id_idx on public.t2  (cost=0.29..8.31 rows=1 width=15) (actual time=0.049..0.050 rows=1 loops=1)
        Output: t2.id, t2.name
        Index Cond: (t2.id = 10)
Planning Time: 2.294 ms
Execution Time: 0.254 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 10
QUERYPLAN: 
Nested Loop  (cost=0.72..83.46 rows=1 width=30) (actual time=0.018..0.047 rows=9 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  ->  Index Scan using t1_id_idx on public.t1  (cost=0.42..8.58 rows=9 width=15) (actual time=0.006..0.008 rows=9 loops=1)
        Output: t1.id, t1.name
        Index Cond: (t1.id < 10)
  ->  Index Scan using t2_id_idx on public.t2  (cost=0.29..8.31 rows=1 width=15) (actual time=0.003..0.003 rows=1 loops=9)
        Output: t2.id, t2.name
        Index Cond: (t2.id = t1.id)
Planning Time: 3.096 ms
Execution Time: 0.082 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 1000
QUERYPLAN: 
Hash Join  (cost=50.38..1967.34 rows=96 width=30) (actual time=0.378..18.066 rows=999 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Hash Cond: (t2.id = t1.id)
  ->  Seq Scan on public.t2  (cost=0.00..1541.00 rows=100000 width=15) (actual time=0.015..8.953 rows=100000 loops=1)
        Output: t2.id, t2.name
  ->  Hash  (cost=38.31..38.31 rows=965 width=15) (actual time=0.349..0.350 rows=999 loops=1)
        Output: t1.id, t1.name
        Buckets: 1024  Batches: 1  Memory Usage: 54kB
        ->  Index Scan using t1_id_idx on public.t1  (cost=0.42..38.31 rows=965 width=15) (actual time=0.011..0.232 rows=999 loops=1)
              Output: t1.id, t1.name
              Index Cond: (t1.id < 1000)
Planning Time: 2.691 ms
Execution Time: 18.124 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id
QUERYPLAN: 
Merge Join  (cost=1.06..7667.01 rows=100000 width=30) (actual time=0.020..65.988 rows=100000 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Merge Cond: (t1.id = t2.id)
  ->  Index Scan using t1_id_idx on public.t1  (cost=0.42..31389.42 rows=1000000 width=15) (actual time=0.006..18.879 rows=100001 loops=1)
        Output: t1.id, t1.name
  ->  Index Scan using t2_id_idx on public.t2  (cost=0.29..3148.29 rows=100000 width=15) (actual time=0.010..18.943 rows=100000 loops=1)
        Output: t2.id, t2.name
Planning Time: 2.892 ms
Execution Time: 68.574 ms
----------------------------------------------------------------------------------------------------


----------------------------------------------------------------------------------------------------
TABLE SIZES:
T1 SIZE: 1000000, T2 SIZE: 10000
----------------------------------------------------------------------------------------------------
INDEXES:
INDEX ON t1(id): False, INDEX ON t2(id): False
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id = 10
QUERYPLAN: 
Nested Loop  (cost=1000.00..26487.74 rows=1180952 width=72) (actual time=0.653..95.998 rows=1 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  ->  Gather  (cost=1000.00..10325.14 rows=3433 width=36) (actual time=0.586..70.621 rows=1 loops=1)
        Output: t1.id, t1.name
        Workers Planned: 2
        Workers Launched: 2
        ->  Parallel Seq Scan on public.t1  (cost=0.00..8981.84 rows=1430 width=36) (actual time=25.716..46.836 rows=0 loops=3)
              Output: t1.id, t1.name
              Filter: (t1.id = 10)
              Rows Removed by Filter: 333333
              Worker 0:  actual time=34.782..34.783 rows=0 loops=1
              Worker 1:  actual time=42.310..42.310 rows=0 loops=1
  ->  Materialize  (cost=0.00..1401.56 rows=344 width=36) (actual time=0.064..25.371 rows=1 loops=1)
        Output: t2.id, t2.name
        ->  Seq Scan on public.t2  (cost=0.00..1399.84 rows=344 width=36) (actual time=0.049..25.356 rows=1 loops=1)
              Output: t2.id, t2.name
              Filter: (t2.id = 10)
              Rows Removed by Filter: 99999
Planning Time: 1.295 ms
Execution Time: 96.110 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 10
QUERYPLAN: 
Merge Join  (cost=49246.23..1229452.29 rows=78619359 width=72) (actual time=128.384..128.392 rows=9 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Merge Cond: (t2.id = t1.id)
  ->  Sort  (cost=8627.55..8799.32 rows=68707 width=36) (actual time=26.110..26.113 rows=10 loops=1)
        Output: t2.id, t2.name
        Sort Key: t2.id
        Sort Method: external merge  Disk: 2456kB
        ->  Seq Scan on public.t2  (cost=0.00..1228.07 rows=68707 width=36) (actual time=0.029..9.274 rows=100000 loops=1)
              Output: t2.id, t2.name
  ->  Materialize  (cost=40618.69..41762.96 rows=228854 width=36) (actual time=102.267..102.269 rows=9 loops=1)
        Output: t1.id, t1.name
        ->  Sort  (cost=40618.69..41190.82 rows=228854 width=36) (actual time=102.258..102.259 rows=9 loops=1)
              Output: t1.id, t1.name
              Sort Key: t1.id
              Sort Method: quicksort  Memory: 25kB
              ->  Seq Scan on public.t1  (cost=0.00..13988.02 rows=228854 width=36) (actual time=0.032..102.248 rows=9 loops=1)
                    Output: t1.id, t1.name
                    Filter: (t1.id < 10)
                    Rows Removed by Filter: 999991
Planning Time: 1.421 ms
Execution Time: 130.216 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 1000
QUERYPLAN: 
Merge Join  (cost=49246.23..1229452.29 rows=78619359 width=72) (actual time=103.128..103.549 rows=999 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Merge Cond: (t2.id = t1.id)
  ->  Sort  (cost=8627.55..8799.32 rows=68707 width=36) (actual time=23.742..23.811 rows=1000 loops=1)
        Output: t2.id, t2.name
        Sort Key: t2.id
        Sort Method: external merge  Disk: 2456kB
        ->  Seq Scan on public.t2  (cost=0.00..1228.07 rows=68707 width=36) (actual time=0.028..8.319 rows=100000 loops=1)
              Output: t2.id, t2.name
  ->  Materialize  (cost=40618.69..41762.96 rows=228854 width=36) (actual time=79.379..79.488 rows=999 loops=1)
        Output: t1.id, t1.name
        ->  Sort  (cost=40618.69..41190.82 rows=228854 width=36) (actual time=79.370..79.402 rows=999 loops=1)
              Output: t1.id, t1.name
              Sort Key: t1.id
              Sort Method: quicksort  Memory: 64kB
              ->  Seq Scan on public.t1  (cost=0.00..13988.02 rows=228854 width=36) (actual time=0.032..79.282 rows=999 loops=1)
                    Output: t1.id, t1.name
                    Filter: (t1.id < 1000)
                    Rows Removed by Filter: 999001
Planning Time: 1.804 ms
Execution Time: 105.567 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id
QUERYPLAN: 
Merge Join  (cost=106232.03..3646163.12 rows=235858077 width=72) (actual time=356.707..564.196 rows=100000 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Merge Cond: (t2.id = t1.id)
  ->  Sort  (cost=8627.55..8799.32 rows=68707 width=36) (actual time=22.147..50.933 rows=100000 loops=1)
        Output: t2.id, t2.name
        Sort Key: t2.id
        Sort Method: external merge  Disk: 2456kB
        ->  Seq Scan on public.t2  (cost=0.00..1228.07 rows=68707 width=36) (actual time=0.029..7.997 rows=100000 loops=1)
              Output: t2.id, t2.name
  ->  Materialize  (cost=97604.48..101037.29 rows=686562 width=36) (actual time=334.546..404.112 rows=100001 loops=1)
        Output: t1.id, t1.name
        ->  Sort  (cost=97604.48..99320.88 rows=686562 width=36) (actual time=334.540..369.367 rows=100001 loops=1)
              Output: t1.id, t1.name
              Sort Key: t1.id
              Sort Method: external merge  Disk: 24464kB
              ->  Seq Scan on public.t1  (cost=0.00..12271.62 rows=686562 width=36) (actual time=0.026..81.775 rows=1000000 loops=1)
                    Output: t1.id, t1.name
Planning Time: 1.592 ms
Execution Time: 590.547 ms
----------------------------------------------------------------------------------------------------
INDEXES:
INDEX ON t1(id): True, INDEX ON t2(id): False
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id = 10
QUERYPLAN: 
Nested Loop  (cost=0.42..1799.45 rows=1 width=30) (actual time=0.082..8.272 rows=1 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  ->  Index Scan using t1_id_idx on public.t1  (cost=0.42..8.44 rows=1 width=15) (actual time=0.062..0.064 rows=1 loops=1)
        Output: t1.id, t1.name
        Index Cond: (t1.id = 10)
  ->  Seq Scan on public.t2  (cost=0.00..1791.00 rows=1 width=15) (actual time=0.018..8.206 rows=1 loops=1)
        Output: t2.id, t2.name
        Filter: (t2.id = 10)
        Rows Removed by Filter: 99999
Planning Time: 2.331 ms
Execution Time: 8.372 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 10
QUERYPLAN: 
Hash Join  (cost=8.70..1924.70 rows=1 width=30) (actual time=0.065..13.394 rows=9 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Hash Cond: (t2.id = t1.id)
  ->  Seq Scan on public.t2  (cost=0.00..1541.00 rows=100000 width=15) (actual time=0.041..7.469 rows=100000 loops=1)
        Output: t2.id, t2.name
  ->  Hash  (cost=8.58..8.58 rows=9 width=15) (actual time=0.017..0.018 rows=9 loops=1)
        Output: t1.id, t1.name
        Buckets: 1024  Batches: 1  Memory Usage: 9kB
        ->  Index Scan using t1_id_idx on public.t1  (cost=0.42..8.58 rows=9 width=15) (actual time=0.007..0.009 rows=9 loops=1)
              Output: t1.id, t1.name
              Index Cond: (t1.id < 10)
Planning Time: 2.184 ms
Execution Time: 13.446 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 1000
QUERYPLAN: 
Hash Join  (cost=50.05..1967.00 rows=95 width=30) (actual time=0.310..14.960 rows=999 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Hash Cond: (t2.id = t1.id)
  ->  Seq Scan on public.t2  (cost=0.00..1541.00 rows=100000 width=15) (actual time=0.018..7.566 rows=100000 loops=1)
        Output: t2.id, t2.name
  ->  Hash  (cost=38.12..38.12 rows=954 width=15) (actual time=0.280..0.280 rows=999 loops=1)
        Output: t1.id, t1.name
        Buckets: 1024  Batches: 1  Memory Usage: 54kB
        ->  Index Scan using t1_id_idx on public.t1  (cost=0.42..38.12 rows=954 width=15) (actual time=0.008..0.183 rows=999 loops=1)
              Output: t1.id, t1.name
              Index Cond: (t1.id < 1000)
Planning Time: 2.671 ms
Execution Time: 15.031 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id
QUERYPLAN: 
Merge Join  (cost=9846.34..14750.29 rows=100000 width=30) (actual time=33.522..90.140 rows=100000 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Merge Cond: (t1.id = t2.id)
  ->  Index Scan using t1_id_idx on public.t1  (cost=0.42..31389.42 rows=1000000 width=15) (actual time=0.005..18.678 rows=100001 loops=1)
        Output: t1.id, t1.name
  ->  Sort  (cost=9845.82..10095.82 rows=100000 width=15) (actual time=33.511..42.525 rows=100000 loops=1)
        Output: t2.id, t2.name
        Sort Key: t2.id
        Sort Method: external sort  Disk: 2848kB
        ->  Seq Scan on public.t2  (cost=0.00..1541.00 rows=100000 width=15) (actual time=0.017..8.010 rows=100000 loops=1)
              Output: t2.id, t2.name
Planning Time: 1.695 ms
Execution Time: 94.151 ms
----------------------------------------------------------------------------------------------------
INDEXES:
INDEX ON t1(id): True, INDEX ON t2(id): True
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id = 10
QUERYPLAN: 
Nested Loop  (cost=0.72..16.76 rows=1 width=30) (actual time=0.123..0.124 rows=1 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  ->  Index Scan using t1_id_idx on public.t1  (cost=0.42..8.44 rows=1 width=15) (actual time=0.071..0.071 rows=1 loops=1)
        Output: t1.id, t1.name
        Index Cond: (t1.id = 10)
  ->  Index Scan using t2_id_idx on public.t2  (cost=0.29..8.31 rows=1 width=15) (actual time=0.048..0.049 rows=1 loops=1)
        Output: t2.id, t2.name
        Index Cond: (t2.id = 10)
Planning Time: 2.579 ms
Execution Time: 0.248 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 10
QUERYPLAN: 
Nested Loop  (cost=0.72..83.46 rows=1 width=30) (actual time=0.011..0.026 rows=9 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  ->  Index Scan using t1_id_idx on public.t1  (cost=0.42..8.58 rows=9 width=15) (actual time=0.004..0.005 rows=9 loops=1)
        Output: t1.id, t1.name
        Index Cond: (t1.id < 10)
  ->  Index Scan using t2_id_idx on public.t2  (cost=0.29..8.31 rows=1 width=15) (actual time=0.001..0.001 rows=1 loops=9)
        Output: t2.id, t2.name
        Index Cond: (t2.id = t1.id)
Planning Time: 2.854 ms
Execution Time: 0.056 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 1000
QUERYPLAN: 
Hash Join  (cost=50.31..1967.28 rows=96 width=30) (actual time=0.381..18.204 rows=999 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Hash Cond: (t2.id = t1.id)
  ->  Seq Scan on public.t2  (cost=0.00..1541.00 rows=100000 width=15) (actual time=0.016..9.098 rows=100000 loops=1)
        Output: t2.id, t2.name
  ->  Hash  (cost=38.28..38.28 rows=963 width=15) (actual time=0.354..0.355 rows=999 loops=1)
        Output: t1.id, t1.name
        Buckets: 1024  Batches: 1  Memory Usage: 54kB
        ->  Index Scan using t1_id_idx on public.t1  (cost=0.42..38.28 rows=963 width=15) (actual time=0.014..0.236 rows=999 loops=1)
              Output: t1.id, t1.name
              Index Cond: (t1.id < 1000)
Planning Time: 2.797 ms
Execution Time: 18.265 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id
QUERYPLAN: 
Merge Join  (cost=0.82..7723.74 rows=100000 width=30) (actual time=0.015..67.657 rows=100000 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Merge Cond: (t1.id = t2.id)
  ->  Index Scan using t1_id_idx on public.t1  (cost=0.42..31389.42 rows=1000000 width=15) (actual time=0.006..19.397 rows=100001 loops=1)
        Output: t1.id, t1.name
  ->  Index Scan using t2_id_idx on public.t2  (cost=0.29..3148.29 rows=100000 width=15) (actual time=0.005..19.614 rows=100000 loops=1)
        Output: t2.id, t2.name
Planning Time: 2.559 ms
Execution Time: 70.282 ms
----------------------------------------------------------------------------------------------------


----------------------------------------------------------------------------------------------------
TABLE SIZES:
T1 SIZE: 1000000, T2 SIZE: 1000000
----------------------------------------------------------------------------------------------------
INDEXES:
INDEX ON t1(id): False, INDEX ON t2(id): False
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id = 10
QUERYPLAN: 
Nested Loop  (cost=2000.00..167977.48 rows=11785489 width=72) (actual time=1.022..147.476 rows=1 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  ->  Gather  (cost=1000.00..10325.14 rows=3433 width=36) (actual time=0.557..29.932 rows=1 loops=1)
        Output: t1.id, t1.name
        Workers Planned: 2
        Workers Launched: 2
        ->  Parallel Seq Scan on public.t1  (cost=0.00..8981.84 rows=1430 width=36) (actual time=48.398..56.121 rows=0 loops=3)
              Output: t1.id, t1.name
              Filter: (t1.id = 10)
              Rows Removed by Filter: 333333
              Worker 0:  actual time=70.785..70.785 rows=0 loops=1
              Worker 1:  actual time=74.369..74.370 rows=0 loops=1
  ->  Materialize  (cost=1000.00..10342.31 rows=3433 width=36) (actual time=0.463..117.538 rows=1 loops=1)
        Output: t2.id, t2.name
        ->  Gather  (cost=1000.00..10325.14 rows=3433 width=36) (actual time=0.451..117.524 rows=1 loops=1)
              Output: t2.id, t2.name
              Workers Planned: 2
              Workers Launched: 2
              ->  Parallel Seq Scan on public.t2  (cost=0.00..8981.84 rows=1430 width=36) (actual time=28.919..67.884 rows=0 loops=3)
                    Output: t2.id, t2.name
                    Filter: (t2.id = 10)
                    Rows Removed by Filter: 333333
                    Worker 0:  actual time=38.699..38.699 rows=0 loops=1
                    Worker 1:  actual time=48.028..48.029 rows=0 loops=1
Planning Time: 1.215 ms
Execution Time: 147.683 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 10
QUERYPLAN: 
Merge Join  (cost=138223.16..11925268.34 rows=785612300 width=72) (actual time=425.617..425.625 rows=9 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Merge Cond: (t1.id = t2.id)
  ->  Sort  (cost=40618.69..41190.82 rows=228854 width=36) (actual time=98.648..98.649 rows=9 loops=1)
        Output: t1.id, t1.name
        Sort Key: t1.id
        Sort Method: quicksort  Memory: 25kB
        ->  Seq Scan on public.t1  (cost=0.00..13988.02 rows=228854 width=36) (actual time=0.030..98.625 rows=9 loops=1)
              Output: t1.id, t1.name
              Filter: (t1.id < 10)
              Rows Removed by Filter: 999991
  ->  Materialize  (cost=97604.48..101037.29 rows=686562 width=36) (actual time=326.963..326.966 rows=10 loops=1)
        Output: t2.id, t2.name
        ->  Sort  (cost=97604.48..99320.88 rows=686562 width=36) (actual time=326.956..326.957 rows=10 loops=1)
              Output: t2.id, t2.name
              Sort Key: t2.id
              Sort Method: external merge  Disk: 24464kB
              ->  Seq Scan on public.t2  (cost=0.00..12271.62 rows=686562 width=36) (actual time=0.032..91.816 rows=1000000 loops=1)
                    Output: t2.id, t2.name
Planning Time: 1.258 ms
Execution Time: 430.299 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 1000
QUERYPLAN: 
Merge Join  (cost=138223.16..11925268.34 rows=785612300 width=72) (actual time=430.840..431.381 rows=999 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Merge Cond: (t1.id = t2.id)
  ->  Sort  (cost=40618.69..41190.82 rows=228854 width=36) (actual time=98.109..98.153 rows=999 loops=1)
        Output: t1.id, t1.name
        Sort Key: t1.id
        Sort Method: quicksort  Memory: 64kB
        ->  Seq Scan on public.t1  (cost=0.00..13988.02 rows=228854 width=36) (actual time=0.039..97.995 rows=999 loops=1)
              Output: t1.id, t1.name
              Filter: (t1.id < 1000)
              Rows Removed by Filter: 999001
  ->  Materialize  (cost=97604.48..101037.29 rows=686562 width=36) (actual time=332.724..332.912 rows=1000 loops=1)
        Output: t2.id, t2.name
        ->  Sort  (cost=97604.48..99320.88 rows=686562 width=36) (actual time=332.716..332.804 rows=1000 loops=1)
              Output: t2.id, t2.name
              Sort Key: t2.id
              Sort Method: external merge  Disk: 24464kB
              ->  Seq Scan on public.t2  (cost=0.00..12271.62 rows=686562 width=36) (actual time=0.032..90.511 rows=1000000 loops=1)
                    Output: t2.id, t2.name
Planning Time: 1.422 ms
Execution Time: 436.029 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id
QUERYPLAN: 
Merge Join  (cost=195208.96..35552911.66 rows=2356836899 width=72) (actual time=663.092..1298.287 rows=1000000 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Merge Cond: (t1.id = t2.id)
  ->  Sort  (cost=97604.48..99320.88 rows=686562 width=36) (actual time=331.917..435.071 rows=1000000 loops=1)
        Output: t1.id, t1.name
        Sort Key: t1.id
        Sort Method: external merge  Disk: 24464kB
        ->  Seq Scan on public.t1  (cost=0.00..12271.62 rows=686562 width=36) (actual time=0.030..91.884 rows=1000000 loops=1)
              Output: t1.id, t1.name
  ->  Materialize  (cost=97604.48..101037.29 rows=686562 width=36) (actual time=331.167..530.741 rows=1000000 loops=1)
        Output: t2.id, t2.name
        ->  Sort  (cost=97604.48..99320.88 rows=686562 width=36) (actual time=331.158..432.629 rows=1000000 loops=1)
              Output: t2.id, t2.name
              Sort Key: t2.id
              Sort Method: external merge  Disk: 24464kB
              ->  Seq Scan on public.t2  (cost=0.00..12271.62 rows=686562 width=36) (actual time=0.037..90.605 rows=1000000 loops=1)
                    Output: t2.id, t2.name
Planning Time: 1.734 ms
Execution Time: 1332.117 ms
----------------------------------------------------------------------------------------------------
INDEXES:
INDEX ON t1(id): True, INDEX ON t2(id): False
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id = 10
QUERYPLAN: 
Nested Loop  (cost=1000.42..11622.89 rows=1 width=30) (actual time=0.657..72.976 rows=1 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  ->  Index Scan using t1_id_idx on public.t1  (cost=0.42..8.44 rows=1 width=15) (actual time=0.066..0.069 rows=1 loops=1)
        Output: t1.id, t1.name
        Index Cond: (t1.id = 10)
  ->  Gather  (cost=1000.00..11614.43 rows=1 width=15) (actual time=0.588..72.902 rows=1 loops=1)
        Output: t2.id, t2.name
        Workers Planned: 2
        Workers Launched: 2
        ->  Parallel Seq Scan on public.t2  (cost=0.00..10614.33 rows=1 width=15) (actual time=11.183..33.228 rows=0 loops=3)
              Output: t2.id, t2.name
              Filter: (t2.id = 10)
              Rows Removed by Filter: 333333
              Worker 0:  actual time=18.507..18.508 rows=0 loops=1
              Worker 1:  actual time=15.021..15.021 rows=0 loops=1
Planning Time: 1.972 ms
Execution Time: 73.085 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 10
QUERYPLAN: 
Gather  (cost=1008.73..12144.93 rows=10 width=30) (actual time=0.714..108.396 rows=9 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Workers Planned: 2
  Workers Launched: 2
  ->  Hash Join  (cost=8.72..11143.93 rows=4 width=30) (actual time=33.225..66.988 rows=3 loops=3)
        Output: t1.id, t1.name, t2.id, t2.name
        Hash Cond: (t2.id = t1.id)
        Worker 0:  actual time=49.959..49.961 rows=0 loops=1
        Worker 1:  actual time=49.643..49.645 rows=0 loops=1
        ->  Parallel Seq Scan on public.t2  (cost=0.00..9572.67 rows=416667 width=15) (actual time=0.015..30.398 rows=333333 loops=3)
              Output: t2.id, t2.name
              Worker 0:  actual time=0.014..22.239 rows=222000 loops=1
              Worker 1:  actual time=0.015..22.880 rows=316980 loops=1
        ->  Hash  (cost=8.60..8.60 rows=10 width=15) (actual time=0.050..0.050 rows=9 loops=3)
              Output: t1.id, t1.name
              Buckets: 1024  Batches: 1  Memory Usage: 9kB
              Worker 0:  actual time=0.059..0.059 rows=9 loops=1
              Worker 1:  actual time=0.064..0.064 rows=9 loops=1
              ->  Index Scan using t1_id_idx on public.t1  (cost=0.42..8.60 rows=10 width=15) (actual time=0.038..0.039 rows=9 loops=3)
                    Output: t1.id, t1.name
                    Index Cond: (t1.id < 10)
                    Worker 0:  actual time=0.045..0.047 rows=9 loops=1
                    Worker 1:  actual time=0.053..0.054 rows=9 loops=1
Planning Time: 2.245 ms
Execution Time: 108.430 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 1000
QUERYPLAN: 
Gather  (cost=1058.28..12307.50 rows=1095 width=30) (actual time=1.003..99.970 rows=999 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Workers Planned: 2
  Workers Launched: 2
  ->  Hash Join  (cost=58.27..11198.00 rows=456 width=30) (actual time=28.087..59.053 rows=333 loops=3)
        Output: t1.id, t1.name, t2.id, t2.name
        Hash Cond: (t2.id = t1.id)
        Worker 0:  actual time=40.338..40.339 rows=0 loops=1
        Worker 1:  actual time=43.477..43.479 rows=0 loops=1
        ->  Parallel Seq Scan on public.t2  (cost=0.00..9572.67 rows=416667 width=15) (actual time=0.016..25.657 rows=333333 loops=3)
              Output: t2.id, t2.name
              Worker 0:  actual time=0.017..17.580 rows=242535 loops=1
              Worker 1:  actual time=0.016..19.235 rows=257335 loops=1
        ->  Hash  (cost=44.59..44.59 rows=1095 width=15) (actual time=0.383..0.383 rows=999 loops=3)
              Output: t1.id, t1.name
              Buckets: 2048  Batches: 1  Memory Usage: 62kB
              Worker 0:  actual time=0.357..0.357 rows=999 loops=1
              Worker 1:  actual time=0.378..0.379 rows=999 loops=1
              ->  Index Scan using t1_id_idx on public.t1  (cost=0.42..44.59 rows=1095 width=15) (actual time=0.045..0.241 rows=999 loops=3)
                    Output: t1.id, t1.name
                    Index Cond: (t1.id < 1000)
                    Worker 0:  actual time=0.062..0.237 rows=999 loops=1
                    Worker 1:  actual time=0.060..0.240 rows=999 loops=1
Planning Time: 2.105 ms
Execution Time: 100.067 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id
QUERYPLAN: 
Hash Join  (cost=32789.00..76594.00 rows=1000000 width=30) (actual time=231.511..980.389 rows=1000000 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Hash Cond: (t1.id = t2.id)
  ->  Seq Scan on public.t1  (cost=0.00..15406.00 rows=1000000 width=15) (actual time=0.019..91.047 rows=1000000 loops=1)
        Output: t1.id, t1.name
  ->  Hash  (cost=15406.00..15406.00 rows=1000000 width=15) (actual time=229.537..229.538 rows=1000000 loops=1)
        Output: t2.id, t2.name
        Buckets: 262144  Batches: 8  Memory Usage: 7790kB
        ->  Seq Scan on public.t2  (cost=0.00..15406.00 rows=1000000 width=15) (actual time=0.016..72.629 rows=1000000 loops=1)
              Output: t2.id, t2.name
Planning Time: 2.309 ms
Execution Time: 1007.454 ms
----------------------------------------------------------------------------------------------------
INDEXES:
INDEX ON t1(id): True, INDEX ON t2(id): True
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id = 10
QUERYPLAN: 
Nested Loop  (cost=0.85..16.90 rows=1 width=30) (actual time=0.122..0.123 rows=1 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  ->  Index Scan using t1_id_idx on public.t1  (cost=0.42..8.44 rows=1 width=15) (actual time=0.060..0.060 rows=1 loops=1)
        Output: t1.id, t1.name
        Index Cond: (t1.id = 10)
  ->  Index Scan using t2_id_idx on public.t2  (cost=0.42..8.44 rows=1 width=15) (actual time=0.059..0.059 rows=1 loops=1)
        Output: t2.id, t2.name
        Index Cond: (t2.id = 10)
Planning Time: 2.145 ms
Execution Time: 0.231 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 10
QUERYPLAN: 
Nested Loop  (cost=0.85..84.66 rows=9 width=30) (actual time=0.019..0.037 rows=9 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  ->  Index Scan using t1_id_idx on public.t1  (cost=0.42..8.58 rows=9 width=15) (actual time=0.004..0.006 rows=9 loops=1)
        Output: t1.id, t1.name
        Index Cond: (t1.id < 10)
  ->  Index Scan using t2_id_idx on public.t2  (cost=0.42..8.44 rows=1 width=15) (actual time=0.003..0.003 rows=1 loops=9)
        Output: t2.id, t2.name
        Index Cond: (t2.id = t1.id)
Planning Time: 3.588 ms
Execution Time: 0.068 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 1000
QUERYPLAN: 
Nested Loop  (cost=0.85..7900.80 rows=1054 width=30) (actual time=0.031..2.384 rows=999 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  ->  Index Scan using t1_id_idx on public.t1  (cost=0.42..39.87 rows=1054 width=15) (actual time=0.011..0.291 rows=999 loops=1)
        Output: t1.id, t1.name
        Index Cond: (t1.id < 1000)
  ->  Index Scan using t2_id_idx on public.t2  (cost=0.42..7.45 rows=1 width=15) (actual time=0.002..0.002 rows=1 loops=999)
        Output: t2.id, t2.name
        Index Cond: (t2.id = t1.id)
Planning Time: 3.232 ms
Execution Time: 2.451 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id
QUERYPLAN: 
Hash Join  (cost=32789.00..76594.00 rows=1000000 width=30) (actual time=229.368..970.876 rows=1000000 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Hash Cond: (t1.id = t2.id)
  ->  Seq Scan on public.t1  (cost=0.00..15406.00 rows=1000000 width=15) (actual time=0.019..92.232 rows=1000000 loops=1)
        Output: t1.id, t1.name
  ->  Hash  (cost=15406.00..15406.00 rows=1000000 width=15) (actual time=227.358..227.359 rows=1000000 loops=1)
        Output: t2.id, t2.name
        Buckets: 262144  Batches: 8  Memory Usage: 7790kB
        ->  Seq Scan on public.t2  (cost=0.00..15406.00 rows=1000000 width=15) (actual time=0.018..72.731 rows=1000000 loops=1)
              Output: t2.id, t2.name
Planning Time: 3.058 ms
Execution Time: 997.618 ms
----------------------------------------------------------------------------------------------------


----------------------------------------------------------------------------------------------------
TABLE SIZES:
T1 SIZE: 1000000, T2 SIZE: 10000000
----------------------------------------------------------------------------------------------------
INDEXES:
INDEX ON t1(id): False, INDEX ON t2(id): False
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id = 10
QUERYPLAN: 
Nested Loop  (cost=1000.00..1581288.03 rows=117837725 width=72) (actual time=0.613..783.846 rows=1 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  ->  Seq Scan on public.t1  (cost=0.00..13988.02 rows=3433 width=36) (actual time=0.049..133.093 rows=1 loops=1)
        Output: t1.id, t1.name
        Filter: (t1.id = 10)
        Rows Removed by Filter: 999999
  ->  Materialize  (cost=1000.00..94414.26 rows=34325 width=36) (actual time=0.562..650.750 rows=1 loops=1)
        Output: t2.id, t2.name
        ->  Gather  (cost=1000.00..94242.63 rows=34325 width=36) (actual time=0.558..650.746 rows=1 loops=1)
              Output: t2.id, t2.name
              Workers Planned: 2
              Workers Launched: 2
              ->  Parallel Seq Scan on public.t2  (cost=0.00..89810.13 rows=14302 width=36) (actual time=400.938..617.608 rows=0 loops=3)
                    Output: t2.id, t2.name
                    Filter: (t2.id = 10)
                    Rows Removed by Filter: 3333333
                    Worker 0:  actual time=602.317..602.318 rows=0 loops=1
                    Worker 1:  actual time=600.465..600.466 rows=0 loops=1
Planning Time: 3.540 ms
Execution Time: 784.049 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 10
QUERYPLAN: 
Merge Join  (cost=1318301.91..119167554.43 rows=7855396386 width=72) (actual time=5114.206..5114.215 rows=9 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Merge Cond: (t1.id = t2.id)
  ->  Sort  (cost=40618.69..41190.82 rows=228854 width=36) (actual time=98.339..98.341 rows=9 loops=1)
        Output: t1.id, t1.name
        Sort Key: t1.id
        Sort Method: quicksort  Memory: 25kB
        ->  Seq Scan on public.t1  (cost=0.00..13988.02 rows=228854 width=36) (actual time=0.042..98.320 rows=9 loops=1)
              Output: t1.id, t1.name
              Filter: (t1.id < 10)
              Rows Removed by Filter: 999991
  ->  Materialize  (cost=1277683.22..1312008.14 rows=6864985 width=36) (actual time=5015.859..5015.862 rows=10 loops=1)
        Output: t2.id, t2.name
        ->  Sort  (cost=1277683.22..1294845.68 rows=6864985 width=36) (actual time=5015.849..5015.851 rows=10 loops=1)
              Output: t2.id, t2.name
              Sort Key: t2.id
              Sort Method: external merge  Disk: 244440kB
              ->  Seq Scan on public.t2  (cost=0.00..122704.85 rows=6864985 width=36) (actual time=0.046..1727.074 rows=10000000 loops=1)
                    Output: t2.id, t2.name
Planning Time: 2.868 ms
Execution Time: 5140.448 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 1000
QUERYPLAN: 
Merge Join  (cost=1318301.91..119167554.43 rows=7855396386 width=72) (actual time=3368.735..3369.280 rows=999 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Merge Cond: (t1.id = t2.id)
  ->  Sort  (cost=40618.69..41190.82 rows=228854 width=36) (actual time=106.654..106.699 rows=999 loops=1)
        Output: t1.id, t1.name
        Sort Key: t1.id
        Sort Method: quicksort  Memory: 64kB
        ->  Seq Scan on public.t1  (cost=0.00..13988.02 rows=228854 width=36) (actual time=1.430..106.552 rows=999 loops=1)
              Output: t1.id, t1.name
              Filter: (t1.id < 1000)
              Rows Removed by Filter: 999001
  ->  Materialize  (cost=1277683.22..1312008.14 rows=6864985 width=36) (actual time=3262.074..3262.268 rows=1000 loops=1)
        Output: t2.id, t2.name
        ->  Sort  (cost=1277683.22..1294845.68 rows=6864985 width=36) (actual time=3262.064..3262.160 rows=1000 loops=1)
              Output: t2.id, t2.name
              Sort Key: t2.id
              Sort Method: external merge  Disk: 244440kB
              ->  Seq Scan on public.t2  (cost=0.00..122704.85 rows=6864985 width=36) (actual time=0.046..991.741 rows=10000000 loops=1)
                    Output: t2.id, t2.name
Planning Time: 1.532 ms
Execution Time: 3395.827 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id
QUERYPLAN: 
Merge Join  (cost=1375287.70..354888720.34 rows=23566189158 width=72) (actual time=3567.655..4178.801 rows=1000000 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Merge Cond: (t1.id = t2.id)
  ->  Sort  (cost=97604.48..99320.88 rows=686562 width=36) (actual time=340.636..438.943 rows=1000000 loops=1)
        Output: t1.id, t1.name
        Sort Key: t1.id
        Sort Method: external merge  Disk: 24464kB
        ->  Seq Scan on public.t1  (cost=0.00..12271.62 rows=686562 width=36) (actual time=1.396..105.247 rows=1000000 loops=1)
              Output: t1.id, t1.name
  ->  Materialize  (cost=1277683.22..1312008.14 rows=6864985 width=36) (actual time=3227.012..3429.331 rows=1000001 loops=1)
        Output: t2.id, t2.name
        ->  Sort  (cost=1277683.22..1294845.68 rows=6864985 width=36) (actual time=3227.003..3333.522 rows=1000001 loops=1)
              Output: t2.id, t2.name
              Sort Key: t2.id
              Sort Method: external merge  Disk: 244440kB
              ->  Seq Scan on public.t2  (cost=0.00..122704.85 rows=6864985 width=36) (actual time=0.053..955.990 rows=10000000 loops=1)
                    Output: t2.id, t2.name
Planning Time: 1.430 ms
Execution Time: 4234.852 ms
----------------------------------------------------------------------------------------------------
INDEXES:
INDEX ON t1(id): True, INDEX ON t2(id): False
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id = 10
QUERYPLAN: 
Nested Loop  (cost=1000.42..107147.80 rows=1 width=30) (actual time=0.634..427.618 rows=1 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  ->  Index Scan using t1_id_idx on public.t1  (cost=0.42..8.44 rows=1 width=15) (actual time=0.082..0.085 rows=1 loops=1)
        Output: t1.id, t1.name
        Index Cond: (t1.id = 10)
  ->  Gather  (cost=1000.00..107139.34 rows=1 width=15) (actual time=0.550..427.529 rows=1 loops=1)
        Output: t2.id, t2.name
        Workers Planned: 2
        Workers Launched: 2
        ->  Parallel Seq Scan on public.t2  (cost=0.00..106139.24 rows=1 width=15) (actual time=247.874..387.397 rows=0 loops=3)
              Output: t2.id, t2.name
              Filter: (t2.id = 10)
              Rows Removed by Filter: 3333333
              Worker 0:  actual time=369.114..369.115 rows=0 loops=1
              Worker 1:  actual time=374.455..374.455 rows=0 loops=1
Planning Time: 1.626 ms
Execution Time: 427.773 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 10
QUERYPLAN: 
Gather  (cost=1008.70..112357.31 rows=9 width=30) (actual time=0.646..633.511 rows=9 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Workers Planned: 2
  Workers Launched: 2
  ->  Hash Join  (cost=8.70..111356.41 rows=4 width=30) (actual time=385.257..593.172 rows=3 loops=3)
        Output: t1.id, t1.name, t2.id, t2.name
        Hash Cond: (t2.id = t1.id)
        Worker 0:  actual time=575.328..575.329 rows=0 loops=1
        Worker 1:  actual time=580.372..580.373 rows=0 loops=1
        ->  Parallel Seq Scan on public.t2  (cost=0.00..95722.40 rows=4166740 width=15) (actual time=0.324..344.489 rows=3333333 loops=3)
              Output: t2.id, t2.name
              Worker 0:  actual time=0.449..331.928 rows=3251190 loops=1
              Worker 1:  actual time=0.483..340.900 rows=3271355 loops=1
        ->  Hash  (cost=8.58..8.58 rows=9 width=15) (actual time=0.035..0.036 rows=9 loops=3)
              Output: t1.id, t1.name
              Buckets: 1024  Batches: 1  Memory Usage: 9kB
              Worker 0:  actual time=0.045..0.046 rows=9 loops=1
              Worker 1:  actual time=0.041..0.041 rows=9 loops=1
              ->  Index Scan using t1_id_idx on public.t1  (cost=0.42..8.58 rows=9 width=15) (actual time=0.024..0.026 rows=9 loops=3)
                    Output: t1.id, t1.name
                    Index Cond: (t1.id < 10)
                    Worker 0:  actual time=0.034..0.035 rows=9 loops=1
                    Worker 1:  actual time=0.030..0.031 rows=9 loops=1
Planning Time: 2.196 ms
Execution Time: 633.595 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 1000
QUERYPLAN: 
Gather  (cost=1050.16..112497.63 rows=958 width=30) (actual time=2.871..683.490 rows=999 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Workers Planned: 2
  Workers Launched: 2
  ->  Hash Join  (cost=50.16..111401.83 rows=399 width=30) (actual time=415.459..639.207 rows=333 loops=3)
        Output: t1.id, t1.name, t2.id, t2.name
        Hash Cond: (t2.id = t1.id)
        Worker 0:  actual time=622.328..622.330 rows=0 loops=1
        Worker 1:  actual time=621.741..621.742 rows=0 loops=1
        ->  Parallel Seq Scan on public.t2  (cost=0.00..95722.40 rows=4166740 width=15) (actual time=0.387..339.817 rows=3333333 loops=3)
              Output: t2.id, t2.name
              Worker 0:  actual time=0.428..333.677 rows=3298560 loops=1
              Worker 1:  actual time=0.452..328.976 rows=3236760 loops=1
        ->  Hash  (cost=38.19..38.19 rows=958 width=15) (actual time=0.907..0.908 rows=999 loops=3)
              Output: t1.id, t1.name
              Buckets: 1024  Batches: 1  Memory Usage: 54kB
              Worker 0:  actual time=0.362..0.362 rows=999 loops=1
              Worker 1:  actual time=0.361..0.361 rows=999 loops=1
              ->  Index Scan using t1_id_idx on public.t1  (cost=0.42..38.19 rows=958 width=15) (actual time=0.042..0.752 rows=999 loops=3)
                    Output: t1.id, t1.name
                    Index Cond: (t1.id < 1000)
                    Worker 0:  actual time=0.041..0.240 rows=999 loops=1
                    Worker 1:  actual time=0.043..0.242 rows=999 loops=1
Planning Time: 1.888 ms
Execution Time: 683.642 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id
QUERYPLAN: 
Gather  (cost=17816.00..273626.78 rows=1000000 width=30) (actual time=976.057..2010.245 rows=1000000 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Workers Planned: 2
  Workers Launched: 2
  ->  Parallel Hash Join  (cost=16816.00..172626.79 rows=416667 width=30) (actual time=959.760..1696.617 rows=333333 loops=3)
        Output: t1.id, t1.name, t2.id, t2.name
        Hash Cond: (t2.id = t1.id)
        Worker 0:  actual time=955.439..1654.552 rows=340978 loops=1
        Worker 1:  actual time=948.306..1656.726 rows=296350 loops=1
        ->  Parallel Seq Scan on public.t2  (cost=0.00..95722.40 rows=4166740 width=15) (actual time=0.437..348.178 rows=3333333 loops=3)
              Output: t2.id, t2.name
              Worker 0:  actual time=0.791..348.951 rows=3303740 loops=1
              Worker 1:  actual time=0.467..350.877 rows=3347205 loops=1
        ->  Parallel Hash  (cost=9572.67..9572.67 rows=416667 width=15) (actual time=96.203..96.204 rows=333333 loops=3)
              Output: t1.id, t1.name
              Buckets: 262144  Batches: 8  Memory Usage: 7968kB
              Worker 0:  actual time=82.433..82.434 rows=288415 loops=1
              Worker 1:  actual time=77.168..77.169 rows=272580 loops=1
              ->  Parallel Seq Scan on public.t1  (cost=0.00..9572.67 rows=416667 width=15) (actual time=0.300..37.761 rows=333333 loops=3)
                    Output: t1.id, t1.name
                    Worker 0:  actual time=0.435..32.632 rows=288415 loops=1
                    Worker 1:  actual time=0.451..30.518 rows=272580 loops=1
Planning Time: 2.119 ms
Execution Time: 2038.246 ms
----------------------------------------------------------------------------------------------------
INDEXES:
INDEX ON t1(id): True, INDEX ON t2(id): True
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id = 10
QUERYPLAN: 
Nested Loop  (cost=0.86..16.91 rows=1 width=30) (actual time=0.201..0.203 rows=1 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  ->  Index Scan using t1_id_idx on public.t1  (cost=0.42..8.44 rows=1 width=15) (actual time=0.088..0.089 rows=1 loops=1)
        Output: t1.id, t1.name
        Index Cond: (t1.id = 10)
  ->  Index Scan using t2_id_idx on public.t2  (cost=0.43..8.45 rows=1 width=15) (actual time=0.110..0.111 rows=1 loops=1)
        Output: t2.id, t2.name
        Index Cond: (t2.id = 10)
Planning Time: 2.913 ms
Execution Time: 0.311 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 10
QUERYPLAN: 
Nested Loop  (cost=0.86..76.27 rows=8 width=30) (actual time=0.017..0.032 rows=9 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  ->  Index Scan using t1_id_idx on public.t1  (cost=0.42..8.56 rows=8 width=15) (actual time=0.005..0.006 rows=9 loops=1)
        Output: t1.id, t1.name
        Index Cond: (t1.id < 10)
  ->  Index Scan using t2_id_idx on public.t2  (cost=0.43..8.45 rows=1 width=15) (actual time=0.002..0.002 rows=1 loops=9)
        Output: t2.id, t2.name
        Index Cond: (t2.id = t1.id)
Planning Time: 2.677 ms
Execution Time: 0.055 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 1000
QUERYPLAN: 
Nested Loop  (cost=0.86..7750.98 rows=922 width=30) (actual time=0.023..1.848 rows=999 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  ->  Index Scan using t1_id_idx on public.t1  (cost=0.42..36.56 rows=922 width=15) (actual time=0.011..0.193 rows=999 loops=1)
        Output: t1.id, t1.name
        Index Cond: (t1.id < 1000)
  ->  Index Scan using t2_id_idx on public.t2  (cost=0.43..8.36 rows=1 width=15) (actual time=0.001..0.001 rows=1 loops=999)
        Output: t2.id, t2.name
        Index Cond: (t2.id = t1.id)
Planning Time: 2.789 ms
Execution Time: 1.893 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id
QUERYPLAN: 
Merge Join  (cost=14.42..77657.74 rows=1000000 width=30) (actual time=0.022..729.607 rows=1000000 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Merge Cond: (t1.id = t2.id)
  ->  Index Scan using t1_id_idx on public.t1  (cost=0.42..31389.42 rows=1000000 width=15) (actual time=0.007..231.007 rows=1000000 loops=1)
        Output: t1.id, t1.name
  ->  Index Scan using t2_id_idx on public.t2  (cost=0.43..313749.06 rows=10000175 width=15) (actual time=0.011..235.532 rows=1000001 loops=1)
        Output: t2.id, t2.name
Planning Time: 3.524 ms
Execution Time: 753.946 ms
----------------------------------------------------------------------------------------------------


----------------------------------------------------------------------------------------------------
TABLE SIZES:
T1 SIZE: 10000000, T2 SIZE: 1
----------------------------------------------------------------------------------------------------
INDEXES:
INDEX ON t1(id): False, INDEX ON t2(id): False
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id = 10
QUERYPLAN: 
Nested Loop  (cost=1000.00..243240.83 rows=11807800 width=72) (actual time=0.683..675.846 rows=1 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  ->  Gather  (cost=1000.00..94242.63 rows=34325 width=36) (actual time=0.641..656.266 rows=1 loops=1)
        Output: t1.id, t1.name
        Workers Planned: 2
        Workers Launched: 2
        ->  Parallel Seq Scan on public.t1  (cost=0.00..89810.13 rows=14302 width=36) (actual time=409.554..625.425 rows=0 loops=3)
              Output: t1.id, t1.name
              Filter: (t1.id = 10)
              Rows Removed by Filter: 3333333
              Worker 0:  actual time=614.174..614.174 rows=0 loops=1
              Worker 1:  actual time=614.426..614.426 rows=0 loops=1
  ->  Materialize  (cost=0.00..1401.56 rows=344 width=36) (actual time=0.039..19.575 rows=1 loops=1)
        Output: t2.id, t2.name
        ->  Seq Scan on public.t2  (cost=0.00..1399.84 rows=344 width=36) (actual time=0.034..19.569 rows=1 loops=1)
              Output: t2.id, t2.name
              Filter: (t2.id = 10)
              Rows Removed by Filter: 99999
Planning Time: 3.049 ms
Execution Time: 676.024 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 10
QUERYPLAN: 
Merge Join  (cost=515355.37..12313231.11 rows=786120759 width=72) (actual time=1019.284..1019.293 rows=9 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Merge Cond: (t2.id = t1.id)
  ->  Sort  (cost=8627.55..8799.32 rows=68707 width=36) (actual time=25.360..25.363 rows=10 loops=1)
        Output: t2.id, t2.name
        Sort Key: t2.id
        Sort Method: external merge  Disk: 2456kB
        ->  Seq Scan on public.t2  (cost=0.00..1228.07 rows=68707 width=36) (actual time=0.026..9.062 rows=100000 loops=1)
              Output: t2.id, t2.name
  ->  Materialize  (cost=506727.83..518169.47 rows=2288328 width=36) (actual time=993.917..993.920 rows=9 loops=1)
        Output: t1.id, t1.name
        ->  Sort  (cost=506727.83..512448.65 rows=2288328 width=36) (actual time=993.913..993.914 rows=9 loops=1)
              Output: t1.id, t1.name
              Sort Key: t1.id
              Sort Method: quicksort  Memory: 25kB
              ->  Seq Scan on public.t1  (cost=0.00..139867.31 rows=2288328 width=36) (actual time=0.125..993.900 rows=9 loops=1)
                    Output: t1.id, t1.name
                    Filter: (t1.id < 10)
                    Rows Removed by Filter: 9999991
Planning Time: 3.765 ms
Execution Time: 1021.075 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 1000
QUERYPLAN: 
Merge Join  (cost=515355.37..12313231.11 rows=786120759 width=72) (actual time=897.535..897.969 rows=999 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Merge Cond: (t2.id = t1.id)
  ->  Sort  (cost=8627.55..8799.32 rows=68707 width=36) (actual time=21.312..21.383 rows=1000 loops=1)
        Output: t2.id, t2.name
        Sort Key: t2.id
        Sort Method: external merge  Disk: 2456kB
        ->  Seq Scan on public.t2  (cost=0.00..1228.07 rows=68707 width=36) (actual time=0.019..7.554 rows=100000 loops=1)
              Output: t2.id, t2.name
  ->  Materialize  (cost=506727.83..518169.47 rows=2288328 width=36) (actual time=876.217..876.328 rows=999 loops=1)
        Output: t1.id, t1.name
        ->  Sort  (cost=506727.83..512448.65 rows=2288328 width=36) (actual time=876.213..876.247 rows=999 loops=1)
              Output: t1.id, t1.name
              Sort Key: t1.id
              Sort Method: quicksort  Memory: 64kB
              ->  Seq Scan on public.t1  (cost=0.00..139867.31 rows=2288328 width=36) (actual time=0.241..876.139 rows=999 loops=1)
                    Output: t1.id, t1.name
                    Filter: (t1.id < 1000)
                    Rows Removed by Filter: 9999001
Planning Time: 1.050 ms
Execution Time: 899.596 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id
QUERYPLAN: 
Merge Join  (cost=1286310.77..36679256.10 rows=2358362622 width=72) (actual time=3162.547..3219.017 rows=100000 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Merge Cond: (t2.id = t1.id)
  ->  Sort  (cost=8627.55..8799.32 rows=68707 width=36) (actual time=20.830..28.589 rows=100000 loops=1)
        Output: t2.id, t2.name
        Sort Key: t2.id
        Sort Method: external merge  Disk: 2456kB
        ->  Seq Scan on public.t2  (cost=0.00..1228.07 rows=68707 width=36) (actual time=0.021..7.230 rows=100000 loops=1)
              Output: t2.id, t2.name
  ->  Materialize  (cost=1277683.22..1312008.14 rows=6864985 width=36) (actual time=3141.710..3160.836 rows=100001 loops=1)
        Output: t1.id, t1.name
        ->  Sort  (cost=1277683.22..1294845.68 rows=6864985 width=36) (actual time=3141.702..3151.721 rows=100001 loops=1)
              Output: t1.id, t1.name
              Sort Key: t1.id
              Sort Method: external merge  Disk: 244440kB
              ->  Seq Scan on public.t1  (cost=0.00..122704.85 rows=6864985 width=36) (actual time=0.051..898.814 rows=10000000 loops=1)
                    Output: t1.id, t1.name
Planning Time: 1.171 ms
Execution Time: 3246.585 ms
----------------------------------------------------------------------------------------------------
INDEXES:
INDEX ON t1(id): True, INDEX ON t2(id): False
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id = 10
QUERYPLAN: 
Nested Loop  (cost=0.43..1799.46 rows=1 width=30) (actual time=0.102..7.980 rows=1 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  ->  Index Scan using t1_id_idx on public.t1  (cost=0.43..8.45 rows=1 width=15) (actual time=0.082..0.083 rows=1 loops=1)
        Output: t1.id, t1.name
        Index Cond: (t1.id = 10)
  ->  Seq Scan on public.t2  (cost=0.00..1791.00 rows=1 width=15) (actual time=0.018..7.894 rows=1 loops=1)
        Output: t2.id, t2.name
        Filter: (t2.id = 10)
        Rows Removed by Filter: 99999
Planning Time: 1.887 ms
Execution Time: 8.074 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 10
QUERYPLAN: 
Hash Join  (cost=8.67..1924.68 rows=1 width=30) (actual time=0.046..13.077 rows=9 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Hash Cond: (t2.id = t1.id)
  ->  Seq Scan on public.t2  (cost=0.00..1541.00 rows=100000 width=15) (actual time=0.020..7.398 rows=100000 loops=1)
        Output: t2.id, t2.name
  ->  Hash  (cost=8.57..8.57 rows=8 width=15) (actual time=0.019..0.019 rows=9 loops=1)
        Output: t1.id, t1.name
        Buckets: 1024  Batches: 1  Memory Usage: 9kB
        ->  Index Scan using t1_id_idx on public.t1  (cost=0.43..8.57 rows=8 width=15) (actual time=0.011..0.012 rows=9 loops=1)
              Output: t1.id, t1.name
              Index Cond: (t1.id < 10)
Planning Time: 2.135 ms
Execution Time: 13.100 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 1000
QUERYPLAN: 
Hash Join  (cost=49.58..1965.66 rows=9 width=30) (actual time=0.354..15.390 rows=999 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Hash Cond: (t2.id = t1.id)
  ->  Seq Scan on public.t2  (cost=0.00..1541.00 rows=100000 width=15) (actual time=0.018..7.740 rows=100000 loops=1)
        Output: t2.id, t2.name
  ->  Hash  (cost=37.85..37.85 rows=938 width=15) (actual time=0.329..0.329 rows=999 loops=1)
        Output: t1.id, t1.name
        Buckets: 1024  Batches: 1  Memory Usage: 54kB
        ->  Index Scan using t1_id_idx on public.t1  (cost=0.43..37.85 rows=938 width=15) (actual time=0.011..0.232 rows=999 loops=1)
              Output: t1.id, t1.name
              Index Cond: (t1.id < 1000)
Planning Time: 1.783 ms
Execution Time: 15.438 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id
QUERYPLAN: 
Merge Join  (cost=9846.63..14525.81 rows=100000 width=30) (actual time=31.853..93.245 rows=100000 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Merge Cond: (t1.id = t2.id)
  ->  Index Scan using t1_id_idx on public.t1  (cost=0.43..313744.34 rows=9999860 width=15) (actual time=0.005..22.364 rows=100001 loops=1)
        Output: t1.id, t1.name
  ->  Sort  (cost=9845.82..10095.82 rows=100000 width=15) (actual time=31.842..41.331 rows=100000 loops=1)
        Output: t2.id, t2.name
        Sort Key: t2.id
        Sort Method: external sort  Disk: 2848kB
        ->  Seq Scan on public.t2  (cost=0.00..1541.00 rows=100000 width=15) (actual time=0.017..7.616 rows=100000 loops=1)
              Output: t2.id, t2.name
Planning Time: 1.626 ms
Execution Time: 97.330 ms
----------------------------------------------------------------------------------------------------
INDEXES:
INDEX ON t1(id): True, INDEX ON t2(id): True
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id = 10
QUERYPLAN: 
Nested Loop  (cost=0.73..16.77 rows=1 width=30) (actual time=0.110..0.112 rows=1 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  ->  Index Scan using t1_id_idx on public.t1  (cost=0.43..8.45 rows=1 width=15) (actual time=0.058..0.059 rows=1 loops=1)
        Output: t1.id, t1.name
        Index Cond: (t1.id = 10)
  ->  Index Scan using t2_id_idx on public.t2  (cost=0.29..8.31 rows=1 width=15) (actual time=0.049..0.049 rows=1 loops=1)
        Output: t2.id, t2.name
        Index Cond: (t2.id = 10)
Planning Time: 2.205 ms
Execution Time: 0.233 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 10
QUERYPLAN: 
Nested Loop  (cost=0.73..75.14 rows=1 width=30) (actual time=0.016..0.031 rows=9 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  ->  Index Scan using t1_id_idx on public.t1  (cost=0.43..8.57 rows=8 width=15) (actual time=0.006..0.008 rows=9 loops=1)
        Output: t1.id, t1.name
        Index Cond: (t1.id < 10)
  ->  Index Scan using t2_id_idx on public.t2  (cost=0.29..8.31 rows=1 width=15) (actual time=0.002..0.002 rows=1 loops=9)
        Output: t2.id, t2.name
        Index Cond: (t2.id = t1.id)
Planning Time: 2.844 ms
Execution Time: 0.058 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 1000
QUERYPLAN: 
Hash Join  (cost=47.32..1963.40 rows=9 width=30) (actual time=0.379..18.135 rows=999 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Hash Cond: (t2.id = t1.id)
  ->  Seq Scan on public.t2  (cost=0.00..1541.00 rows=100000 width=15) (actual time=0.016..9.031 rows=100000 loops=1)
        Output: t2.id, t2.name
  ->  Hash  (cost=36.12..36.12 rows=896 width=15) (actual time=0.354..0.355 rows=999 loops=1)
        Output: t1.id, t1.name
        Buckets: 1024  Batches: 1  Memory Usage: 54kB
        ->  Index Scan using t1_id_idx on public.t1  (cost=0.43..36.12 rows=896 width=15) (actual time=0.019..0.234 rows=999 loops=1)
              Output: t1.id, t1.name
              Index Cond: (t1.id < 1000)
Planning Time: 2.832 ms
Execution Time: 18.224 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id
QUERYPLAN: 
Merge Join  (cost=2.05..7435.56 rows=100000 width=30) (actual time=0.015..66.162 rows=100000 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Merge Cond: (t1.id = t2.id)
  ->  Index Scan using t1_id_idx on public.t1  (cost=0.43..313749.06 rows=10000175 width=15) (actual time=0.006..18.816 rows=100001 loops=1)
        Output: t1.id, t1.name
  ->  Index Scan using t2_id_idx on public.t2  (cost=0.29..3148.29 rows=100000 width=15) (actual time=0.005..19.248 rows=100000 loops=1)
        Output: t2.id, t2.name
Planning Time: 2.485 ms
Execution Time: 68.832 ms
----------------------------------------------------------------------------------------------------


----------------------------------------------------------------------------------------------------
TABLE SIZES:
T1 SIZE: 10000000, T2 SIZE: 100
----------------------------------------------------------------------------------------------------
INDEXES:
INDEX ON t1(id): False, INDEX ON t2(id): False
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id = 10
QUERYPLAN: 
Nested Loop  (cost=1000.00..243240.83 rows=11807800 width=72) (actual time=0.704..709.832 rows=1 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  ->  Gather  (cost=1000.00..94242.63 rows=34325 width=36) (actual time=0.656..688.986 rows=1 loops=1)
        Output: t1.id, t1.name
        Workers Planned: 2
        Workers Launched: 2
        ->  Parallel Seq Scan on public.t1  (cost=0.00..89810.13 rows=14302 width=36) (actual time=430.006..656.387 rows=0 loops=3)
              Output: t1.id, t1.name
              Filter: (t1.id = 10)
              Rows Removed by Filter: 3333333
              Worker 0:  actual time=647.055..647.056 rows=0 loops=1
              Worker 1:  actual time=642.905..642.906 rows=0 loops=1
  ->  Materialize  (cost=0.00..1401.56 rows=344 width=36) (actual time=0.046..20.842 rows=1 loops=1)
        Output: t2.id, t2.name
        ->  Seq Scan on public.t2  (cost=0.00..1399.84 rows=344 width=36) (actual time=0.034..20.828 rows=1 loops=1)
              Output: t2.id, t2.name
              Filter: (t2.id = 10)
              Rows Removed by Filter: 99999
Planning Time: 3.261 ms
Execution Time: 710.029 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 10
QUERYPLAN: 
Merge Join  (cost=515355.37..12313231.11 rows=786120759 width=72) (actual time=1053.522..1053.531 rows=9 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Merge Cond: (t2.id = t1.id)
  ->  Sort  (cost=8627.55..8799.32 rows=68707 width=36) (actual time=25.628..25.631 rows=10 loops=1)
        Output: t2.id, t2.name
        Sort Key: t2.id
        Sort Method: external merge  Disk: 2456kB
        ->  Seq Scan on public.t2  (cost=0.00..1228.07 rows=68707 width=36) (actual time=0.023..9.165 rows=100000 loops=1)
              Output: t2.id, t2.name
  ->  Materialize  (cost=506727.83..518169.47 rows=2288328 width=36) (actual time=1027.887..1027.889 rows=9 loops=1)
        Output: t1.id, t1.name
        ->  Sort  (cost=506727.83..512448.65 rows=2288328 width=36) (actual time=1027.882..1027.883 rows=9 loops=1)
              Output: t1.id, t1.name
              Sort Key: t1.id
              Sort Method: quicksort  Memory: 25kB
              ->  Seq Scan on public.t1  (cost=0.00..139867.31 rows=2288328 width=36) (actual time=0.062..1027.873 rows=9 loops=1)
                    Output: t1.id, t1.name
                    Filter: (t1.id < 10)
                    Rows Removed by Filter: 9999991
Planning Time: 3.570 ms
Execution Time: 1055.440 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 1000
QUERYPLAN: 
Merge Join  (cost=515355.37..12313231.11 rows=786120759 width=72) (actual time=1043.785..1044.309 rows=999 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Merge Cond: (t2.id = t1.id)
  ->  Sort  (cost=8627.55..8799.32 rows=68707 width=36) (actual time=25.971..26.057 rows=1000 loops=1)
        Output: t2.id, t2.name
        Sort Key: t2.id
        Sort Method: external merge  Disk: 2456kB
        ->  Seq Scan on public.t2  (cost=0.00..1228.07 rows=68707 width=36) (actual time=0.025..9.178 rows=100000 loops=1)
              Output: t2.id, t2.name
  ->  Materialize  (cost=506727.83..518169.47 rows=2288328 width=36) (actual time=1017.807..1017.942 rows=999 loops=1)
        Output: t1.id, t1.name
        ->  Sort  (cost=506727.83..512448.65 rows=2288328 width=36) (actual time=1017.802..1017.844 rows=999 loops=1)
              Output: t1.id, t1.name
              Sort Key: t1.id
              Sort Method: quicksort  Memory: 64kB
              ->  Seq Scan on public.t1  (cost=0.00..139867.31 rows=2288328 width=36) (actual time=1.353..1017.710 rows=999 loops=1)
                    Output: t1.id, t1.name
                    Filter: (t1.id < 1000)
                    Rows Removed by Filter: 9999001
Planning Time: 1.437 ms
Execution Time: 1046.263 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id
QUERYPLAN: 
Merge Join  (cost=1286310.77..36679256.10 rows=2358362622 width=72) (actual time=3295.785..3354.762 rows=100000 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Merge Cond: (t2.id = t1.id)
  ->  Sort  (cost=8627.55..8799.32 rows=68707 width=36) (actual time=25.950..34.104 rows=100000 loops=1)
        Output: t2.id, t2.name
        Sort Key: t2.id
        Sort Method: external merge  Disk: 2456kB
        ->  Seq Scan on public.t2  (cost=0.00..1228.07 rows=68707 width=36) (actual time=0.024..9.064 rows=100000 loops=1)
              Output: t2.id, t2.name
  ->  Materialize  (cost=1277683.22..1312008.14 rows=6864985 width=36) (actual time=3269.827..3289.957 rows=100001 loops=1)
        Output: t1.id, t1.name
        ->  Sort  (cost=1277683.22..1294845.68 rows=6864985 width=36) (actual time=3269.818..3280.229 rows=100001 loops=1)
              Output: t1.id, t1.name
              Sort Key: t1.id
              Sort Method: external merge  Disk: 244440kB
              ->  Seq Scan on public.t1  (cost=0.00..122704.85 rows=6864985 width=36) (actual time=0.063..963.284 rows=10000000 loops=1)
                    Output: t1.id, t1.name
Planning Time: 1.318 ms
Execution Time: 3386.098 ms
----------------------------------------------------------------------------------------------------
INDEXES:
INDEX ON t1(id): True, INDEX ON t2(id): False
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id = 10
QUERYPLAN: 
Nested Loop  (cost=0.43..1799.46 rows=1 width=30) (actual time=0.117..9.953 rows=1 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  ->  Index Scan using t1_id_idx on public.t1  (cost=0.43..8.45 rows=1 width=15) (actual time=0.094..0.095 rows=1 loops=1)
        Output: t1.id, t1.name
        Index Cond: (t1.id = 10)
  ->  Seq Scan on public.t2  (cost=0.00..1791.00 rows=1 width=15) (actual time=0.022..9.855 rows=1 loops=1)
        Output: t2.id, t2.name
        Filter: (t2.id = 10)
        Rows Removed by Filter: 99999
Planning Time: 2.452 ms
Execution Time: 10.065 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 10
QUERYPLAN: 
Hash Join  (cost=8.71..1924.71 rows=1 width=30) (actual time=0.052..16.132 rows=9 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Hash Cond: (t2.id = t1.id)
  ->  Seq Scan on public.t2  (cost=0.00..1541.00 rows=100000 width=15) (actual time=0.022..9.018 rows=100000 loops=1)
        Output: t2.id, t2.name
  ->  Hash  (cost=8.59..8.59 rows=9 width=15) (actual time=0.017..0.017 rows=9 loops=1)
        Output: t1.id, t1.name
        Buckets: 1024  Batches: 1  Memory Usage: 9kB
        ->  Index Scan using t1_id_idx on public.t1  (cost=0.43..8.59 rows=9 width=15) (actual time=0.004..0.006 rows=9 loops=1)
              Output: t1.id, t1.name
              Index Cond: (t1.id < 10)
Planning Time: 2.606 ms
Execution Time: 16.165 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 1000
QUERYPLAN: 
Hash Join  (cost=52.84..1968.94 rows=10 width=30) (actual time=0.448..18.291 rows=999 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Hash Cond: (t2.id = t1.id)
  ->  Seq Scan on public.t2  (cost=0.00..1541.00 rows=100000 width=15) (actual time=0.019..9.294 rows=100000 loops=1)
        Output: t2.id, t2.name
  ->  Hash  (cost=39.76..39.76 rows=1047 width=15) (actual time=0.421..0.421 rows=999 loops=1)
        Output: t1.id, t1.name
        Buckets: 2048  Batches: 1  Memory Usage: 62kB
        ->  Index Scan using t1_id_idx on public.t1  (cost=0.43..39.76 rows=1047 width=15) (actual time=0.014..0.296 rows=999 loops=1)
              Output: t1.id, t1.name
              Index Cond: (t1.id < 1000)
Planning Time: 2.003 ms
Execution Time: 18.375 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id
QUERYPLAN: 
Merge Join  (cost=9846.31..14870.19 rows=100000 width=30) (actual time=36.194..97.981 rows=100000 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Merge Cond: (t1.id = t2.id)
  ->  Index Scan using t1_id_idx on public.t1  (cost=0.43..313744.34 rows=9999860 width=15) (actual time=0.006..22.481 rows=100001 loops=1)
        Output: t1.id, t1.name
  ->  Sort  (cost=9845.82..10095.82 rows=100000 width=15) (actual time=36.182..45.703 rows=100000 loops=1)
        Output: t2.id, t2.name
        Sort Key: t2.id
        Sort Method: external sort  Disk: 2848kB
        ->  Seq Scan on public.t2  (cost=0.00..1541.00 rows=100000 width=15) (actual time=0.019..9.093 rows=100000 loops=1)
              Output: t2.id, t2.name
Planning Time: 1.992 ms
Execution Time: 102.068 ms
----------------------------------------------------------------------------------------------------
INDEXES:
INDEX ON t1(id): True, INDEX ON t2(id): True
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id = 10
QUERYPLAN: 
Nested Loop  (cost=0.73..16.77 rows=1 width=30) (actual time=0.106..0.107 rows=1 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  ->  Index Scan using t1_id_idx on public.t1  (cost=0.43..8.45 rows=1 width=15) (actual time=0.059..0.059 rows=1 loops=1)
        Output: t1.id, t1.name
        Index Cond: (t1.id = 10)
  ->  Index Scan using t2_id_idx on public.t2  (cost=0.29..8.31 rows=1 width=15) (actual time=0.044..0.044 rows=1 loops=1)
        Output: t2.id, t2.name
        Index Cond: (t2.id = 10)
Planning Time: 2.326 ms
Execution Time: 0.218 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 10
QUERYPLAN: 
Nested Loop  (cost=0.73..83.47 rows=1 width=30) (actual time=0.010..0.025 rows=9 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  ->  Index Scan using t1_id_idx on public.t1  (cost=0.43..8.59 rows=9 width=15) (actual time=0.004..0.005 rows=9 loops=1)
        Output: t1.id, t1.name
        Index Cond: (t1.id < 10)
  ->  Index Scan using t2_id_idx on public.t2  (cost=0.29..8.31 rows=1 width=15) (actual time=0.001..0.001 rows=1 loops=9)
        Output: t2.id, t2.name
        Index Cond: (t2.id = t1.id)
Planning Time: 2.670 ms
Execution Time: 0.055 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 1000
QUERYPLAN: 
Hash Join  (cost=50.84..1966.93 rows=10 width=30) (actual time=0.381..18.190 rows=999 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Hash Cond: (t2.id = t1.id)
  ->  Seq Scan on public.t2  (cost=0.00..1541.00 rows=100000 width=15) (actual time=0.015..9.062 rows=100000 loops=1)
        Output: t2.id, t2.name
  ->  Hash  (cost=38.59..38.59 rows=980 width=15) (actual time=0.351..0.352 rows=999 loops=1)
        Output: t1.id, t1.name
        Buckets: 1024  Batches: 1  Memory Usage: 54kB
        ->  Index Scan using t1_id_idx on public.t1  (cost=0.43..38.59 rows=980 width=15) (actual time=0.011..0.229 rows=999 loops=1)
              Output: t1.id, t1.name
              Index Cond: (t1.id < 1000)
Planning Time: 2.550 ms
Execution Time: 18.273 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id
QUERYPLAN: 
Merge Join  (cost=9.80..7722.93 rows=100000 width=30) (actual time=0.019..66.579 rows=100000 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Merge Cond: (t1.id = t2.id)
  ->  Index Scan using t1_id_idx on public.t1  (cost=0.43..313744.34 rows=9999860 width=15) (actual time=0.006..19.042 rows=100001 loops=1)
        Output: t1.id, t1.name
  ->  Index Scan using t2_id_idx on public.t2  (cost=0.29..3148.29 rows=100000 width=15) (actual time=0.008..19.259 rows=100000 loops=1)
        Output: t2.id, t2.name
Planning Time: 2.515 ms
Execution Time: 69.185 ms
----------------------------------------------------------------------------------------------------


----------------------------------------------------------------------------------------------------
TABLE SIZES:
T1 SIZE: 10000000, T2 SIZE: 10000
----------------------------------------------------------------------------------------------------
INDEXES:
INDEX ON t1(id): False, INDEX ON t2(id): False
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id = 10
QUERYPLAN: 
Nested Loop  (cost=1000.00..243240.83 rows=11807800 width=72) (actual time=0.786..684.652 rows=1 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  ->  Gather  (cost=1000.00..94242.63 rows=34325 width=36) (actual time=0.721..666.598 rows=1 loops=1)
        Output: t1.id, t1.name
        Workers Planned: 2
        Workers Launched: 2
        ->  Parallel Seq Scan on public.t1  (cost=0.00..89810.13 rows=14302 width=36) (actual time=417.369..636.309 rows=0 loops=3)
              Output: t1.id, t1.name
              Filter: (t1.id = 10)
              Rows Removed by Filter: 3333333
              Worker 0:  actual time=628.039..628.040 rows=0 loops=1
              Worker 1:  actual time=623.962..623.962 rows=0 loops=1
  ->  Materialize  (cost=0.00..1401.56 rows=344 width=36) (actual time=0.062..18.049 rows=1 loops=1)
        Output: t2.id, t2.name
        ->  Seq Scan on public.t2  (cost=0.00..1399.84 rows=344 width=36) (actual time=0.057..18.043 rows=1 loops=1)
              Output: t2.id, t2.name
              Filter: (t2.id = 10)
              Rows Removed by Filter: 99999
Planning Time: 2.845 ms
Execution Time: 684.881 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 10
QUERYPLAN: 
Merge Join  (cost=515355.37..12313231.11 rows=786120759 width=72) (actual time=1044.872..1044.882 rows=9 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Merge Cond: (t2.id = t1.id)
  ->  Sort  (cost=8627.55..8799.32 rows=68707 width=36) (actual time=25.489..25.491 rows=10 loops=1)
        Output: t2.id, t2.name
        Sort Key: t2.id
        Sort Method: external merge  Disk: 2456kB
        ->  Seq Scan on public.t2  (cost=0.00..1228.07 rows=68707 width=36) (actual time=0.025..8.920 rows=100000 loops=1)
              Output: t2.id, t2.name
  ->  Materialize  (cost=506727.83..518169.47 rows=2288328 width=36) (actual time=1019.376..1019.379 rows=9 loops=1)
        Output: t1.id, t1.name
        ->  Sort  (cost=506727.83..512448.65 rows=2288328 width=36) (actual time=1019.372..1019.373 rows=9 loops=1)
              Output: t1.id, t1.name
              Sort Key: t1.id
              Sort Method: quicksort  Memory: 25kB
              ->  Seq Scan on public.t1  (cost=0.00..139867.31 rows=2288328 width=36) (actual time=0.062..1019.358 rows=9 loops=1)
                    Output: t1.id, t1.name
                    Filter: (t1.id < 10)
                    Rows Removed by Filter: 9999991
Planning Time: 3.463 ms
Execution Time: 1046.649 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 1000
QUERYPLAN: 
Merge Join  (cost=515355.37..12313231.11 rows=786120759 width=72) (actual time=1055.846..1056.378 rows=999 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Merge Cond: (t2.id = t1.id)
  ->  Sort  (cost=8627.55..8799.32 rows=68707 width=36) (actual time=26.842..26.927 rows=1000 loops=1)
        Output: t2.id, t2.name
        Sort Key: t2.id
        Sort Method: external merge  Disk: 2456kB
        ->  Seq Scan on public.t2  (cost=0.00..1228.07 rows=68707 width=36) (actual time=0.025..9.971 rows=100000 loops=1)
              Output: t2.id, t2.name
  ->  Materialize  (cost=506727.83..518169.47 rows=2288328 width=36) (actual time=1028.998..1029.138 rows=999 loops=1)
        Output: t1.id, t1.name
        ->  Sort  (cost=506727.83..512448.65 rows=2288328 width=36) (actual time=1028.993..1029.036 rows=999 loops=1)
              Output: t1.id, t1.name
              Sort Key: t1.id
              Sort Method: quicksort  Memory: 64kB
              ->  Seq Scan on public.t1  (cost=0.00..139867.31 rows=2288328 width=36) (actual time=0.953..1028.901 rows=999 loops=1)
                    Output: t1.id, t1.name
                    Filter: (t1.id < 1000)
                    Rows Removed by Filter: 9999001
Planning Time: 1.427 ms
Execution Time: 1058.320 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id
QUERYPLAN: 
Merge Join  (cost=1286310.77..36679256.10 rows=2358362622 width=72) (actual time=3283.349..3345.870 rows=100000 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Merge Cond: (t2.id = t1.id)
  ->  Sort  (cost=8627.55..8799.32 rows=68707 width=36) (actual time=26.064..34.575 rows=100000 loops=1)
        Output: t2.id, t2.name
        Sort Key: t2.id
        Sort Method: external merge  Disk: 2456kB
        ->  Seq Scan on public.t2  (cost=0.00..1228.07 rows=68707 width=36) (actual time=0.027..9.152 rows=100000 loops=1)
              Output: t2.id, t2.name
  ->  Materialize  (cost=1277683.22..1312008.14 rows=6864985 width=36) (actual time=3257.278..3278.486 rows=100001 loops=1)
        Output: t1.id, t1.name
        ->  Sort  (cost=1277683.22..1294845.68 rows=6864985 width=36) (actual time=3257.267..3268.217 rows=100001 loops=1)
              Output: t1.id, t1.name
              Sort Key: t1.id
              Sort Method: external merge  Disk: 244440kB
              ->  Seq Scan on public.t1  (cost=0.00..122704.85 rows=6864985 width=36) (actual time=0.063..973.504 rows=10000000 loops=1)
                    Output: t1.id, t1.name
Planning Time: 1.417 ms
Execution Time: 3376.904 ms
----------------------------------------------------------------------------------------------------
INDEXES:
INDEX ON t1(id): True, INDEX ON t2(id): False
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id = 10
QUERYPLAN: 
Nested Loop  (cost=0.43..1799.46 rows=1 width=30) (actual time=0.136..10.064 rows=1 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  ->  Index Scan using t1_id_idx on public.t1  (cost=0.43..8.45 rows=1 width=15) (actual time=0.107..0.110 rows=1 loops=1)
        Output: t1.id, t1.name
        Index Cond: (t1.id = 10)
  ->  Seq Scan on public.t2  (cost=0.00..1791.00 rows=1 width=15) (actual time=0.026..9.951 rows=1 loops=1)
        Output: t2.id, t2.name
        Filter: (t2.id = 10)
        Rows Removed by Filter: 99999
Planning Time: 3.443 ms
Execution Time: 10.196 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 10
QUERYPLAN: 
Hash Join  (cost=8.73..1924.74 rows=1 width=30) (actual time=0.058..16.133 rows=9 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Hash Cond: (t2.id = t1.id)
  ->  Seq Scan on public.t2  (cost=0.00..1541.00 rows=100000 width=15) (actual time=0.022..9.052 rows=100000 loops=1)
        Output: t2.id, t2.name
  ->  Hash  (cost=8.61..8.61 rows=10 width=15) (actual time=0.021..0.023 rows=9 loops=1)
        Output: t1.id, t1.name
        Buckets: 1024  Batches: 1  Memory Usage: 9kB
        ->  Index Scan using t1_id_idx on public.t1  (cost=0.43..8.61 rows=10 width=15) (actual time=0.009..0.011 rows=9 loops=1)
              Output: t1.id, t1.name
              Index Cond: (t1.id < 10)
Planning Time: 2.600 ms
Execution Time: 16.165 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 1000
QUERYPLAN: 
Hash Join  (cost=58.34..1974.45 rows=11 width=30) (actual time=0.478..17.503 rows=999 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Hash Cond: (t2.id = t1.id)
  ->  Seq Scan on public.t2  (cost=0.00..1541.00 rows=100000 width=15) (actual time=0.025..8.926 rows=100000 loops=1)
        Output: t2.id, t2.name
  ->  Hash  (cost=44.63..44.63 rows=1097 width=15) (actual time=0.436..0.437 rows=999 loops=1)
        Output: t1.id, t1.name
        Buckets: 2048  Batches: 1  Memory Usage: 62kB
        ->  Index Scan using t1_id_idx on public.t1  (cost=0.43..44.63 rows=1097 width=15) (actual time=0.011..0.308 rows=999 loops=1)
              Output: t1.id, t1.name
              Index Cond: (t1.id < 1000)
Planning Time: 2.607 ms
Execution Time: 17.563 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id
QUERYPLAN: 
Merge Join  (cost=9850.44..15058.54 rows=100000 width=30) (actual time=37.305..100.022 rows=100000 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Merge Cond: (t1.id = t2.id)
  ->  Index Scan using t1_id_idx on public.t1  (cost=0.43..313749.06 rows=10000175 width=15) (actual time=0.007..22.855 rows=100001 loops=1)
        Output: t1.id, t1.name
  ->  Sort  (cost=9845.82..10095.82 rows=100000 width=15) (actual time=37.292..46.951 rows=100000 loops=1)
        Output: t2.id, t2.name
        Sort Key: t2.id
        Sort Method: external sort  Disk: 2848kB
        ->  Seq Scan on public.t2  (cost=0.00..1541.00 rows=100000 width=15) (actual time=0.022..9.426 rows=100000 loops=1)
              Output: t2.id, t2.name
Planning Time: 2.054 ms
Execution Time: 104.155 ms
----------------------------------------------------------------------------------------------------
INDEXES:
INDEX ON t1(id): True, INDEX ON t2(id): True
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id = 10
QUERYPLAN: 
Nested Loop  (cost=0.73..16.77 rows=1 width=30) (actual time=0.115..0.116 rows=1 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  ->  Index Scan using t1_id_idx on public.t1  (cost=0.43..8.45 rows=1 width=15) (actual time=0.068..0.068 rows=1 loops=1)
        Output: t1.id, t1.name
        Index Cond: (t1.id = 10)
  ->  Index Scan using t2_id_idx on public.t2  (cost=0.29..8.31 rows=1 width=15) (actual time=0.044..0.044 rows=1 loops=1)
        Output: t2.id, t2.name
        Index Cond: (t2.id = 10)
Planning Time: 2.160 ms
Execution Time: 0.230 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 10
QUERYPLAN: 
Nested Loop  (cost=0.73..91.81 rows=1 width=30) (actual time=0.024..0.040 rows=9 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  ->  Index Scan using t1_id_idx on public.t1  (cost=0.43..8.61 rows=10 width=15) (actual time=0.004..0.006 rows=9 loops=1)
        Output: t1.id, t1.name
        Index Cond: (t1.id < 10)
  ->  Index Scan using t2_id_idx on public.t2  (cost=0.29..8.31 rows=1 width=15) (actual time=0.003..0.003 rows=1 loops=9)
        Output: t2.id, t2.name
        Index Cond: (t2.id = t1.id)
Planning Time: 2.664 ms
Execution Time: 0.067 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 1000
QUERYPLAN: 
Hash Join  (cost=53.15..1969.25 rows=11 width=30) (actual time=0.379..17.438 rows=999 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Hash Cond: (t2.id = t1.id)
  ->  Seq Scan on public.t2  (cost=0.00..1541.00 rows=100000 width=15) (actual time=0.020..8.960 rows=100000 loops=1)
        Output: t2.id, t2.name
  ->  Hash  (cost=39.93..39.93 rows=1057 width=15) (actual time=0.349..0.349 rows=999 loops=1)
        Output: t1.id, t1.name
        Buckets: 2048  Batches: 1  Memory Usage: 62kB
        ->  Index Scan using t1_id_idx on public.t1  (cost=0.43..39.93 rows=1057 width=15) (actual time=0.015..0.227 rows=999 loops=1)
              Output: t1.id, t1.name
              Index Cond: (t1.id < 1000)
Planning Time: 2.537 ms
Execution Time: 17.495 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id
QUERYPLAN: 
Merge Join  (cost=65.80..7966.37 rows=100000 width=30) (actual time=0.028..66.413 rows=100000 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Merge Cond: (t1.id = t2.id)
  ->  Index Scan using t1_id_idx on public.t1  (cost=0.43..313749.06 rows=10000175 width=15) (actual time=0.006..18.933 rows=100001 loops=1)
        Output: t1.id, t1.name
  ->  Index Scan using t2_id_idx on public.t2  (cost=0.29..3148.29 rows=100000 width=15) (actual time=0.018..19.110 rows=100000 loops=1)
        Output: t2.id, t2.name
Planning Time: 2.529 ms
Execution Time: 69.037 ms
----------------------------------------------------------------------------------------------------


----------------------------------------------------------------------------------------------------
TABLE SIZES:
T1 SIZE: 10000000, T2 SIZE: 1000000
----------------------------------------------------------------------------------------------------
INDEXES:
INDEX ON t1(id): False, INDEX ON t2(id): False
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id = 10
QUERYPLAN: 
Nested Loop  (cost=1000.00..1581288.03 rows=117837725 width=72) (actual time=0.639..909.115 rows=1 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  ->  Seq Scan on public.t2  (cost=0.00..13988.02 rows=3433 width=36) (actual time=0.050..140.653 rows=1 loops=1)
        Output: t2.id, t2.name
        Filter: (t2.id = 10)
        Rows Removed by Filter: 999999
  ->  Materialize  (cost=1000.00..94414.26 rows=34325 width=36) (actual time=0.586..768.458 rows=1 loops=1)
        Output: t1.id, t1.name
        ->  Gather  (cost=1000.00..94242.63 rows=34325 width=36) (actual time=0.582..768.453 rows=1 loops=1)
              Output: t1.id, t1.name
              Workers Planned: 2
              Workers Launched: 2
              ->  Parallel Seq Scan on public.t1  (cost=0.00..89810.13 rows=14302 width=36) (actual time=477.943..733.838 rows=0 loops=3)
                    Output: t1.id, t1.name
                    Filter: (t1.id = 10)
                    Rows Removed by Filter: 3333333
                    Worker 0:  actual time=715.831..715.832 rows=0 loops=1
                    Worker 1:  actual time=717.947..717.948 rows=0 loops=1
Planning Time: 3.466 ms
Execution Time: 909.291 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 10
QUERYPLAN: 
Merge Join  (cost=604332.30..118444414.56 rows=7855395242 width=72) (actual time=1379.894..1379.904 rows=9 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Merge Cond: (t2.id = t1.id)
  ->  Sort  (cost=97604.48..99320.88 rows=686562 width=36) (actual time=340.862..340.865 rows=10 loops=1)
        Output: t2.id, t2.name
        Sort Key: t2.id
        Sort Method: external merge  Disk: 24464kB
        ->  Seq Scan on public.t2  (cost=0.00..12271.62 rows=686562 width=36) (actual time=0.032..98.766 rows=1000000 loops=1)
              Output: t2.id, t2.name
  ->  Materialize  (cost=506727.83..518169.47 rows=2288328 width=36) (actual time=1039.025..1039.028 rows=9 loops=1)
        Output: t1.id, t1.name
        ->  Sort  (cost=506727.83..512448.65 rows=2288328 width=36) (actual time=1039.015..1039.016 rows=9 loops=1)
              Output: t1.id, t1.name
              Sort Key: t1.id
              Sort Method: quicksort  Memory: 25kB
              ->  Seq Scan on public.t1  (cost=0.00..139867.31 rows=2288328 width=36) (actual time=0.055..1039.002 rows=9 loops=1)
                    Output: t1.id, t1.name
                    Filter: (t1.id < 10)
                    Rows Removed by Filter: 9999991
Planning Time: 3.858 ms
Execution Time: 1384.292 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 1000
QUERYPLAN: 
Merge Join  (cost=604332.30..118444414.56 rows=7855395242 width=72) (actual time=1448.024..1448.559 rows=999 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Merge Cond: (t2.id = t1.id)
  ->  Sort  (cost=97604.48..99320.88 rows=686562 width=36) (actual time=362.291..362.377 rows=1000 loops=1)
        Output: t2.id, t2.name
        Sort Key: t2.id
        Sort Method: external merge  Disk: 24464kB
        ->  Seq Scan on public.t2  (cost=0.00..12271.62 rows=686562 width=36) (actual time=0.031..99.453 rows=1000000 loops=1)
              Output: t2.id, t2.name
  ->  Materialize  (cost=506727.83..518169.47 rows=2288328 width=36) (actual time=1085.725..1085.873 rows=999 loops=1)
        Output: t1.id, t1.name
        ->  Sort  (cost=506727.83..512448.65 rows=2288328 width=36) (actual time=1085.711..1085.761 rows=999 loops=1)
              Output: t1.id, t1.name
              Sort Key: t1.id
              Sort Method: quicksort  Memory: 64kB
              ->  Seq Scan on public.t1  (cost=0.00..139867.31 rows=2288328 width=36) (actual time=0.975..1085.610 rows=999 loops=1)
                    Output: t1.id, t1.name
                    Filter: (t1.id < 1000)
                    Rows Removed by Filter: 9999001
Planning Time: 1.506 ms
Execution Time: 1452.933 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id
QUERYPLAN: 
Merge Join  (cost=1375287.70..354888720.34 rows=23566189158 width=72) (actual time=3708.992..4439.859 rows=1000000 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Merge Cond: (t2.id = t1.id)
  ->  Sort  (cost=97604.48..99320.88 rows=686562 width=36) (actual time=320.579..430.649 rows=1000000 loops=1)
        Output: t2.id, t2.name
        Sort Key: t2.id
        Sort Method: external merge  Disk: 24464kB
        ->  Seq Scan on public.t2  (cost=0.00..12271.62 rows=686562 width=36) (actual time=0.031..90.224 rows=1000000 loops=1)
              Output: t2.id, t2.name
  ->  Materialize  (cost=1277683.22..1312008.14 rows=6864985 width=36) (actual time=3388.405..3633.223 rows=1000001 loops=1)
        Output: t1.id, t1.name
        ->  Sort  (cost=1277683.22..1294845.68 rows=6864985 width=36) (actual time=3388.382..3517.192 rows=1000001 loops=1)
              Output: t1.id, t1.name
              Sort Key: t1.id
              Sort Method: external merge  Disk: 244440kB
              ->  Seq Scan on public.t1  (cost=0.00..122704.85 rows=6864985 width=36) (actual time=0.111..1013.384 rows=10000000 loops=1)
                    Output: t1.id, t1.name
Planning Time: 1.393 ms
Execution Time: 4498.418 ms
----------------------------------------------------------------------------------------------------
INDEXES:
INDEX ON t1(id): True, INDEX ON t2(id): False
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id = 10
QUERYPLAN: 
Nested Loop  (cost=1000.43..11622.90 rows=1 width=30) (actual time=0.746..87.216 rows=1 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  ->  Index Scan using t1_id_idx on public.t1  (cost=0.43..8.45 rows=1 width=15) (actual time=0.139..0.142 rows=1 loops=1)
        Output: t1.id, t1.name
        Index Cond: (t1.id = 10)
  ->  Gather  (cost=1000.00..11614.43 rows=1 width=15) (actual time=0.605..87.068 rows=1 loops=1)
        Output: t2.id, t2.name
        Workers Planned: 2
        Workers Launched: 2
        ->  Parallel Seq Scan on public.t2  (cost=0.00..10614.33 rows=1 width=15) (actual time=13.016..39.966 rows=0 loops=3)
              Output: t2.id, t2.name
              Filter: (t2.id = 10)
              Rows Removed by Filter: 333333
              Worker 0:  actual time=18.451..18.451 rows=0 loops=1
              Worker 1:  actual time=20.577..20.577 rows=0 loops=1
Planning Time: 4.011 ms
Execution Time: 87.414 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 10
QUERYPLAN: 
Gather  (cost=1008.71..12143.98 rows=1 width=30) (actual time=0.588..99.834 rows=9 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Workers Planned: 2
  Workers Launched: 2
  ->  Hash Join  (cost=8.71..11143.88 rows=1 width=30) (actual time=28.923..60.051 rows=3 loops=3)
        Output: t1.id, t1.name, t2.id, t2.name
        Hash Cond: (t2.id = t1.id)
        Worker 0:  actual time=46.214..46.215 rows=0 loops=1
        Worker 1:  actual time=40.497..40.498 rows=0 loops=1
        ->  Parallel Seq Scan on public.t2  (cost=0.00..9572.67 rows=416667 width=15) (actual time=0.017..26.590 rows=333333 loops=3)
              Output: t2.id, t2.name
              Worker 0:  actual time=0.014..20.297 rows=254820 loops=1
              Worker 1:  actual time=0.020..18.200 rows=244015 loops=1
        ->  Hash  (cost=8.59..8.59 rows=9 width=15) (actual time=0.040..0.040 rows=9 loops=3)
              Output: t1.id, t1.name
              Buckets: 1024  Batches: 1  Memory Usage: 9kB
              Worker 0:  actual time=0.049..0.049 rows=9 loops=1
              Worker 1:  actual time=0.049..0.049 rows=9 loops=1
              ->  Index Scan using t1_id_idx on public.t1  (cost=0.43..8.59 rows=9 width=15) (actual time=0.028..0.029 rows=9 loops=3)
                    Output: t1.id, t1.name
                    Index Cond: (t1.id < 10)
                    Worker 0:  actual time=0.037..0.039 rows=9 loops=1
                    Worker 1:  actual time=0.037..0.039 rows=9 loops=1
Planning Time: 2.635 ms
Execution Time: 99.891 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 1000
QUERYPLAN: 
Gather  (cost=1049.82..12194.87 rows=95 width=30) (actual time=1.002..99.311 rows=999 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Workers Planned: 2
  Workers Launched: 2
  ->  Hash Join  (cost=49.82..11185.37 rows=40 width=30) (actual time=27.444..58.273 rows=333 loops=3)
        Output: t1.id, t1.name, t2.id, t2.name
        Hash Cond: (t2.id = t1.id)
        Worker 0:  actual time=41.926..41.928 rows=0 loops=1
        Worker 1:  actual time=39.927..39.928 rows=0 loops=1
        ->  Parallel Seq Scan on public.t2  (cost=0.00..9572.67 rows=416667 width=15) (actual time=0.015..24.197 rows=333333 loops=3)
              Output: t2.id, t2.name
              Worker 0:  actual time=0.013..17.444 rows=242165 loops=1
              Worker 1:  actual time=0.016..16.765 rows=235580 loops=1
        ->  Hash  (cost=37.99..37.99 rows=946 width=15) (actual time=0.380..0.381 rows=999 loops=3)
              Output: t1.id, t1.name
              Buckets: 1024  Batches: 1  Memory Usage: 54kB
              Worker 0:  actual time=0.355..0.355 rows=999 loops=1
              Worker 1:  actual time=0.343..0.343 rows=999 loops=1
              ->  Index Scan using t1_id_idx on public.t1  (cost=0.43..37.99 rows=946 width=15) (actual time=0.042..0.260 rows=999 loops=3)
                    Output: t1.id, t1.name
                    Index Cond: (t1.id < 1000)
                    Worker 0:  actual time=0.055..0.236 rows=999 loops=1
                    Worker 1:  actual time=0.050..0.225 rows=999 loops=1
Planning Time: 1.980 ms
Execution Time: 99.408 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id
QUERYPLAN: 
Merge Join  (cost=132155.28..183968.92 rows=1000000 width=30) (actual time=309.078..1098.257 rows=1000000 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Merge Cond: (t1.id = t2.id)
  ->  Index Scan using t1_id_idx on public.t1  (cost=0.43..313749.06 rows=10000175 width=15) (actual time=0.006..274.418 rows=1000001 loops=1)
        Output: t1.id, t1.name
  ->  Materialize  (cost=132154.34..137154.34 rows=1000000 width=15) (actual time=309.065..506.925 rows=1000000 loops=1)
        Output: t2.id, t2.name
        ->  Sort  (cost=132154.34..134654.34 rows=1000000 width=15) (actual time=309.059..411.277 rows=1000000 loops=1)
              Output: t2.id, t2.name
              Sort Key: t2.id
              Sort Method: external merge  Disk: 24464kB
              ->  Seq Scan on public.t2  (cost=0.00..15406.00 rows=1000000 width=15) (actual time=0.024..68.854 rows=1000000 loops=1)
                    Output: t2.id, t2.name
Planning Time: 1.956 ms
Execution Time: 1128.107 ms
----------------------------------------------------------------------------------------------------
INDEXES:
INDEX ON t1(id): True, INDEX ON t2(id): True
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id = 10
QUERYPLAN: 
Nested Loop  (cost=0.86..16.91 rows=1 width=30) (actual time=0.129..0.131 rows=1 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  ->  Index Scan using t1_id_idx on public.t1  (cost=0.43..8.45 rows=1 width=15) (actual time=0.062..0.062 rows=1 loops=1)
        Output: t1.id, t1.name
        Index Cond: (t1.id = 10)
  ->  Index Scan using t2_id_idx on public.t2  (cost=0.42..8.44 rows=1 width=15) (actual time=0.065..0.065 rows=1 loops=1)
        Output: t2.id, t2.name
        Index Cond: (t2.id = 10)
Planning Time: 2.180 ms
Execution Time: 0.242 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 10
QUERYPLAN: 
Nested Loop  (cost=0.86..84.67 rows=1 width=30) (actual time=0.019..0.038 rows=9 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  ->  Index Scan using t1_id_idx on public.t1  (cost=0.43..8.59 rows=9 width=15) (actual time=0.005..0.006 rows=9 loops=1)
        Output: t1.id, t1.name
        Index Cond: (t1.id < 10)
  ->  Index Scan using t2_id_idx on public.t2  (cost=0.42..8.44 rows=1 width=15) (actual time=0.003..0.003 rows=1 loops=9)
        Output: t2.id, t2.name
        Index Cond: (t2.id = t1.id)
Planning Time: 2.810 ms
Execution Time: 0.070 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 1000
QUERYPLAN: 
Nested Loop  (cost=0.86..7827.64 rows=104 width=30) (actual time=0.031..2.194 rows=999 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  ->  Index Scan using t1_id_idx on public.t1  (cost=0.43..39.69 rows=1043 width=15) (actual time=0.013..0.238 rows=999 loops=1)
        Output: t1.id, t1.name
        Index Cond: (t1.id < 1000)
  ->  Index Scan using t2_id_idx on public.t2  (cost=0.42..7.46 rows=1 width=15) (actual time=0.001..0.002 rows=1 loops=999)
        Output: t2.id, t2.name
        Index Cond: (t2.id = t1.id)
Planning Time: 2.876 ms
Execution Time: 2.249 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id
QUERYPLAN: 
Merge Join  (cost=9.50..78066.50 rows=1000000 width=30) (actual time=0.023..663.196 rows=1000000 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Merge Cond: (t1.id = t2.id)
  ->  Index Scan using t1_id_idx on public.t1  (cost=0.43..313749.06 rows=10000175 width=15) (actual time=0.006..185.558 rows=1000001 loops=1)
        Output: t1.id, t1.name
  ->  Index Scan using t2_id_idx on public.t2  (cost=0.42..31389.42 rows=1000000 width=15) (actual time=0.013..190.947 rows=1000000 loops=1)
        Output: t2.id, t2.name
Planning Time: 2.873 ms
Execution Time: 690.540 ms
----------------------------------------------------------------------------------------------------


----------------------------------------------------------------------------------------------------
TABLE SIZES:
T1 SIZE: 10000000, T2 SIZE: 10000000
----------------------------------------------------------------------------------------------------
INDEXES:
INDEX ON t1(id): False, INDEX ON t2(id): False
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id = 10
QUERYPLAN: 
Nested Loop  (cost=1000.00..14961766.07 rows=1178205625 width=72) (actual time=0.680..2587.071 rows=1 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  ->  Seq Scan on public.t1  (cost=0.00..139867.31 rows=34325 width=36) (actual time=0.052..1821.772 rows=1 loops=1)
        Output: t1.id, t1.name
        Filter: (t1.id = 10)
        Rows Removed by Filter: 9999999
  ->  Materialize  (cost=1000.00..94414.26 rows=34325 width=36) (actual time=0.626..765.295 rows=1 loops=1)
        Output: t2.id, t2.name
        ->  Gather  (cost=1000.00..94242.63 rows=34325 width=36) (actual time=0.621..765.289 rows=1 loops=1)
              Output: t2.id, t2.name
              Workers Planned: 2
              Workers Launched: 2
              ->  Parallel Seq Scan on public.t2  (cost=0.00..89810.13 rows=14302 width=36) (actual time=438.356..693.165 rows=0 loops=3)
                    Output: t2.id, t2.name
                    Filter: (t2.id = 10)
                    Rows Removed by Filter: 3333333
                    Worker 0:  actual time=713.235..713.236 rows=0 loops=1
                    Worker 1:  actual time=601.779..601.779 rows=0 loops=1
Planning Time: 4.320 ms
Execution Time: 2587.251 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 10
QUERYPLAN: 
Merge Join  (cost=1784411.04..1180013319.77 rows=78546686975 width=72) (actual time=4427.246..4427.256 rows=9 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Merge Cond: (t1.id = t2.id)
  ->  Sort  (cost=506727.83..512448.65 rows=2288328 width=36) (actual time=1092.729..1092.730 rows=9 loops=1)
        Output: t1.id, t1.name
        Sort Key: t1.id
        Sort Method: quicksort  Memory: 25kB
        ->  Seq Scan on public.t1  (cost=0.00..139867.31 rows=2288328 width=36) (actual time=0.054..1092.704 rows=9 loops=1)
              Output: t1.id, t1.name
              Filter: (t1.id < 10)
              Rows Removed by Filter: 9999991
  ->  Materialize  (cost=1277683.22..1312008.14 rows=6864985 width=36) (actual time=3334.510..3334.515 rows=10 loops=1)
        Output: t2.id, t2.name
        ->  Sort  (cost=1277683.22..1294845.68 rows=6864985 width=36) (actual time=3334.500..3334.501 rows=10 loops=1)
              Output: t2.id, t2.name
              Sort Key: t2.id
              Sort Method: external merge  Disk: 244440kB
              ->  Seq Scan on public.t2  (cost=0.00..122704.85 rows=6864985 width=36) (actual time=0.052..1019.648 rows=10000000 loops=1)
                    Output: t2.id, t2.name
Planning Time: 31.628 ms
Execution Time: 4453.808 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 1000
QUERYPLAN: 
Merge Join  (cost=1784411.04..1180013319.77 rows=78546686975 width=72) (actual time=4508.949..4509.483 rows=999 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Merge Cond: (t1.id = t2.id)
  ->  Sort  (cost=506727.83..512448.65 rows=2288328 width=36) (actual time=1103.486..1103.527 rows=999 loops=1)
        Output: t1.id, t1.name
        Sort Key: t1.id
        Sort Method: quicksort  Memory: 64kB
        ->  Seq Scan on public.t1  (cost=0.00..139867.31 rows=2288328 width=36) (actual time=0.072..1103.391 rows=999 loops=1)
              Output: t1.id, t1.name
              Filter: (t1.id < 1000)
              Rows Removed by Filter: 9999001
  ->  Materialize  (cost=1277683.22..1312008.14 rows=6864985 width=36) (actual time=3405.457..3405.645 rows=1000 loops=1)
        Output: t2.id, t2.name
        ->  Sort  (cost=1277683.22..1294845.68 rows=6864985 width=36) (actual time=3405.440..3405.531 rows=1000 loops=1)
              Output: t2.id, t2.name
              Sort Key: t2.id
              Sort Method: external merge  Disk: 244440kB
              ->  Seq Scan on public.t2  (cost=0.00..122704.85 rows=6864985 width=36) (actual time=0.049..1041.595 rows=10000000 loops=1)
                    Output: t2.id, t2.name
Planning Time: 1.731 ms
Execution Time: 4541.034 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id
QUERYPLAN: 
Merge Join  (cost=2555366.44..3537208282.59 rows=235640095251 width=72) (actual time=6802.029..13302.198 rows=10000000 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Merge Cond: (t1.id = t2.id)
  ->  Sort  (cost=1277683.22..1294845.68 rows=6864985 width=36) (actual time=3546.565..4657.142 rows=10000000 loops=1)
        Output: t1.id, t1.name
        Sort Key: t1.id
        Sort Method: external merge  Disk: 244440kB
        ->  Seq Scan on public.t1  (cost=0.00..122704.85 rows=6864985 width=36) (actual time=1.435..1123.405 rows=10000000 loops=1)
              Output: t1.id, t1.name
  ->  Materialize  (cost=1277683.22..1312008.14 rows=6864985 width=36) (actual time=3255.454..5373.261 rows=10000000 loops=1)
        Output: t2.id, t2.name
        ->  Sort  (cost=1277683.22..1294845.68 rows=6864985 width=36) (actual time=3255.449..4367.610 rows=10000000 loops=1)
              Output: t2.id, t2.name
              Sort Key: t2.id
              Sort Method: external merge  Disk: 244440kB
              ->  Seq Scan on public.t2  (cost=0.00..122704.85 rows=6864985 width=36) (actual time=0.067..985.416 rows=10000000 loops=1)
                    Output: t2.id, t2.name
Planning Time: 1.666 ms
Execution Time: 13632.462 ms
----------------------------------------------------------------------------------------------------
INDEXES:
INDEX ON t1(id): True, INDEX ON t2(id): False
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id = 10
QUERYPLAN: 
Nested Loop  (cost=1000.43..107147.81 rows=1 width=30) (actual time=0.688..505.856 rows=1 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  ->  Index Scan using t1_id_idx on public.t1  (cost=0.43..8.45 rows=1 width=15) (actual time=0.117..0.120 rows=1 loops=1)
        Output: t1.id, t1.name
        Index Cond: (t1.id = 10)
  ->  Gather  (cost=1000.00..107139.34 rows=1 width=15) (actual time=0.569..505.732 rows=1 loops=1)
        Output: t2.id, t2.name
        Workers Planned: 2
        Workers Launched: 2
        ->  Parallel Seq Scan on public.t2  (cost=0.00..106139.24 rows=1 width=15) (actual time=292.092..456.533 rows=0 loops=3)
              Output: t2.id, t2.name
              Filter: (t2.id = 10)
              Rows Removed by Filter: 3333333
              Worker 0:  actual time=439.342..439.343 rows=0 loops=1
              Worker 1:  actual time=436.877..436.878 rows=0 loops=1
Planning Time: 2.874 ms
Execution Time: 506.050 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 10
QUERYPLAN: 
Gather  (cost=1008.71..112357.32 rows=9 width=30) (actual time=0.711..705.116 rows=9 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Workers Planned: 2
  Workers Launched: 2
  ->  Hash Join  (cost=8.71..111356.42 rows=4 width=30) (actual time=431.307..663.304 rows=3 loops=3)
        Output: t1.id, t1.name, t2.id, t2.name
        Hash Cond: (t2.id = t1.id)
        Worker 0:  actual time=648.999..649.000 rows=0 loops=1
        Worker 1:  actual time=644.824..644.826 rows=0 loops=1
        ->  Parallel Seq Scan on public.t2  (cost=0.00..95722.40 rows=4166740 width=15) (actual time=0.278..383.623 rows=3333333 loops=3)
              Output: t2.id, t2.name
              Worker 0:  actual time=0.328..374.989 rows=3328520 loops=1
              Worker 1:  actual time=0.457..377.221 rows=3187180 loops=1
        ->  Hash  (cost=8.59..8.59 rows=9 width=15) (actual time=0.049..0.049 rows=9 loops=3)
              Output: t1.id, t1.name
              Buckets: 1024  Batches: 1  Memory Usage: 9kB
              Worker 0:  actual time=0.066..0.066 rows=9 loops=1
              Worker 1:  actual time=0.054..0.054 rows=9 loops=1
              ->  Index Scan using t1_id_idx on public.t1  (cost=0.43..8.59 rows=9 width=15) (actual time=0.037..0.039 rows=9 loops=3)
                    Output: t1.id, t1.name
                    Index Cond: (t1.id < 10)
                    Worker 0:  actual time=0.054..0.056 rows=9 loops=1
                    Worker 1:  actual time=0.043..0.045 rows=9 loops=1
Planning Time: 3.809 ms
Execution Time: 705.241 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 1000
QUERYPLAN: 
Gather  (cost=1051.59..112503.95 rows=1005 width=30) (actual time=2.426..776.069 rows=999 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Workers Planned: 2
  Workers Launched: 2
  ->  Hash Join  (cost=51.59..111403.45 rows=419 width=30) (actual time=474.751..729.227 rows=333 loops=3)
        Output: t1.id, t1.name, t2.id, t2.name
        Hash Cond: (t2.id = t1.id)
        Worker 0:  actual time=714.812..714.814 rows=0 loops=1
        Worker 1:  actual time=707.617..707.619 rows=0 loops=1
        ->  Parallel Seq Scan on public.t2  (cost=0.00..95722.40 rows=4166740 width=15) (actual time=0.459..385.430 rows=3333333 loops=3)
              Output: t2.id, t2.name
              Worker 0:  actual time=0.460..378.865 rows=3319455 loops=1
              Worker 1:  actual time=0.429..372.539 rows=3274685 loops=1
        ->  Hash  (cost=39.02..39.02 rows=1005 width=15) (actual time=0.685..0.686 rows=999 loops=3)
              Output: t1.id, t1.name
              Buckets: 1024  Batches: 1  Memory Usage: 54kB
              Worker 0:  actual time=0.366..0.367 rows=999 loops=1
              Worker 1:  actual time=0.371..0.371 rows=999 loops=1
              ->  Index Scan using t1_id_idx on public.t1  (cost=0.43..39.02 rows=1005 width=15) (actual time=0.040..0.562 rows=999 loops=3)
                    Output: t1.id, t1.name
                    Index Cond: (t1.id < 1000)
                    Worker 0:  actual time=0.043..0.244 rows=999 loops=1
                    Worker 1:  actual time=0.052..0.252 rows=999 loops=1
Planning Time: 2.279 ms
Execution Time: 776.233 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id
QUERYPLAN: 
Hash Join  (cost=327887.94..878436.06 rows=10000175 width=30) (actual time=2654.396..11119.815 rows=10000000 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Hash Cond: (t1.id = t2.id)
  ->  Seq Scan on public.t1  (cost=0.00..154056.75 rows=10000175 width=15) (actual time=0.020..1085.165 rows=10000000 loops=1)
        Output: t1.id, t1.name
  ->  Hash  (cost=154056.75..154056.75 rows=10000175 width=15) (actual time=2647.407..2647.407 rows=10000000 loops=1)
        Output: t2.id, t2.name
        Buckets: 262144  Batches: 128  Memory Usage: 5650kB
        ->  Seq Scan on public.t2  (cost=0.00..154056.75 rows=10000175 width=15) (actual time=0.060..1032.674 rows=10000000 loops=1)
              Output: t2.id, t2.name
Planning Time: 2.142 ms
Execution Time: 11387.634 ms
----------------------------------------------------------------------------------------------------
INDEXES:
INDEX ON t1(id): True, INDEX ON t2(id): True
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id = 10
QUERYPLAN: 
Nested Loop  (cost=0.87..16.92 rows=1 width=30) (actual time=0.157..0.159 rows=1 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  ->  Index Scan using t1_id_idx on public.t1  (cost=0.43..8.45 rows=1 width=15) (actual time=0.061..0.061 rows=1 loops=1)
        Output: t1.id, t1.name
        Index Cond: (t1.id = 10)
  ->  Index Scan using t2_id_idx on public.t2  (cost=0.43..8.45 rows=1 width=15) (actual time=0.093..0.093 rows=1 loops=1)
        Output: t2.id, t2.name
        Index Cond: (t2.id = 10)
Planning Time: 2.135 ms
Execution Time: 0.269 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 10
QUERYPLAN: 
Nested Loop  (cost=0.87..93.23 rows=10 width=30) (actual time=0.021..0.040 rows=9 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  ->  Index Scan using t1_id_idx on public.t1  (cost=0.43..8.61 rows=10 width=15) (actual time=0.004..0.006 rows=9 loops=1)
        Output: t1.id, t1.name
        Index Cond: (t1.id < 10)
  ->  Index Scan using t2_id_idx on public.t2  (cost=0.43..8.45 rows=1 width=15) (actual time=0.003..0.003 rows=1 loops=9)
        Output: t2.id, t2.name
        Index Cond: (t2.id = t1.id)
Planning Time: 3.074 ms
Execution Time: 0.069 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id where t1.id < 1000
QUERYPLAN: 
Nested Loop  (cost=0.87..9706.27 rows=1158 width=30) (actual time=0.026..2.369 rows=999 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  ->  Index Scan using t1_id_idx on public.t1  (cost=0.43..46.70 rows=1158 width=15) (actual time=0.011..0.235 rows=999 loops=1)
        Output: t1.id, t1.name
        Index Cond: (t1.id < 1000)
  ->  Index Scan using t2_id_idx on public.t2  (cost=0.43..8.33 rows=1 width=15) (actual time=0.002..0.002 rows=1 loops=999)
        Output: t2.id, t2.name
        Index Cond: (t2.id = t1.id)
Planning Time: 2.969 ms
Execution Time: 2.427 ms
----------------------------------------------------------------------------------------------------
QUERY: SELECT * FROM t1 INNER JOIN t2 ON t1.id = t2.id
QUERYPLAN: 
Merge Join  (cost=12.76..777415.83 rows=9999860 width=30) (actual time=0.027..6816.185 rows=10000000 loops=1)
  Output: t1.id, t1.name, t2.id, t2.name
  Merge Cond: (t1.id = t2.id)
  ->  Index Scan using t1_id_idx on public.t1  (cost=0.43..313749.06 rows=10000175 width=15) (actual time=0.006..1957.695 rows=10000000 loops=1)
        Output: t1.id, t1.name
  ->  Index Scan using t2_id_idx on public.t2  (cost=0.43..313744.34 rows=9999860 width=15) (actual time=0.017..1961.099 rows=10000000 loops=1)
        Output: t2.id, t2.name
Planning Time: 2.865 ms
Execution Time: 7076.502 ms
----------------------------------------------------------------------------------------------------


